/root/boost_1_87_0/boost/asio/any_completion_executor.hpp:212:   * boost::asio::require and boost::asio::prefer customisation points.
/root/boost_1_87_0/boost/asio/any_completion_executor.hpp:216:   * auto ex2 = boost::asio::require(ex, execution::relationship.fork); @endcode
/root/boost_1_87_0/boost/asio/any_completion_executor.hpp:230:   * boost::asio::prefer customisation point.
/root/boost_1_87_0/boost/asio/any_completion_executor.hpp:234:   * auto ex2 = boost::asio::prefer(ex, execution::relationship.fork); @endcode
/root/boost_1_87_0/boost/asio/any_completion_handler.hpp:68:        boost::asio::recycling_allocator<void>>>::template
/root/boost_1_87_0/boost/asio/any_completion_handler.hpp:81:        boost::asio::recycling_allocator<void>>>::template
/root/boost_1_87_0/boost/asio/any_completion_handler.hpp:96:          boost::asio::recycling_allocator<void>())};
/root/boost_1_87_0/boost/asio/any_completion_handler.hpp:113:          boost::asio::recycling_allocator<void>())};
/root/boost_1_87_0/boost/asio/any_completion_handler.hpp:136:        boost::asio::recycling_allocator<void>>>::template
/root/boost_1_87_0/boost/asio/any_completion_handler.hpp:139:              boost::asio::recycling_allocator<void>()));
/root/boost_1_87_0/boost/asio/any_completion_handler.hpp:155:    boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/any_completion_handler.hpp:165:          boost::asio::recycling_allocator<void>>>::template
/root/boost_1_87_0/boost/asio/any_completion_handler.hpp:168:                boost::asio::recycling_allocator<void>()));/root/boost_1_87_0/boost/asio/any_completion_handler.hpp:184:          boost::asio::recycling_allocator<void>())};
/root/boost_1_87_0/boost/asio/any_completion_handler.hpp:525:    boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/any_completion_handler.hpp:756:    boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/any_io_executor.hpp:219:   * boost::asio::require and boost::asio::prefer customisation points.
/root/boost_1_87_0/boost/asio/any_io_executor.hpp:223:   * auto ex2 = boost::asio::require(ex, execution::blocking.possibly); @endcode
/root/boost_1_87_0/boost/asio/any_io_executor.hpp:237:   * boost::asio::prefer customisation point.
/root/boost_1_87_0/boost/asio/any_io_executor.hpp:241:   * auto ex2 = boost::asio::prefer(ex, execution::blocking.possibly); @endcode
/root/boost_1_87_0/boost/asio/as_tuple.hpp:115: * asynchronous operation's default completion token (or boost::asio::deferred
/root/boost_1_87_0/boost/asio/as_tuple.hpp:142: * asynchronous operation's default completion token (or boost::asio::deferred
/root/boost_1_87_0/boost/asio/associated_immediate_executor.hpp:56:    -> decltype(boost::asio::require(e, execution::blocking.never))
/root/boost_1_87_0/boost/asio/associated_immediate_executor.hpp:58:    return boost::asio::require(e, execution::blocking.never);
/root/boost_1_87_0/boost/asio/associated_immediate_executor.hpp:194:  /// <tt>boost::asio::require(ex, boost::asio::execution::blocking.never)</tt>.
/root/boost_1_87_0/boost/asio/async_result.hpp:163:  ::boost::asio::completion_signature
/root/boost_1_87_0/boost/asio/async_result.hpp:171:  ::boost::asio::completion_handler_for<sig>
/root/boost_1_87_0/boost/asio/async_result.hpp:173:  ::boost::asio::completion_handler_for<sig0, sig1>
/root/boost_1_87_0/boost/asio/async_result.hpp:175:  ::boost::asio::completion_handler_for<sig0, sig1, sig2>
/root/boost_1_87_0/boost/asio/async_result.hpp:443:  typedef typename boost::asio::async_result<
/root/boost_1_87_0/boost/asio/async_result.hpp:516:  typename ::boost::asio::async_result< \
/root/boost_1_87_0/boost/asio/async_result.hpp:517:    typename ::boost::asio::decay<ct>::type, sig>::return_type
/root/boost_1_87_0/boost/asio/async_result.hpp:519:  typename ::boost::asio::async_result< \
/root/boost_1_87_0/boost/asio/async_result.hpp:520:    typename ::boost::asio::decay<ct>::type, sig0, sig1>::return_type/root/boost_1_87_0/boost/asio/async_result.hpp:522:  typename ::boost::asio::async_result< \
/root/boost_1_87_0/boost/asio/async_result.hpp:523:    typename ::boost::asio::decay<ct>::type, sig0, sig1, sig2>::return_type
/root/boost_1_87_0/boost/asio/async_result.hpp:525:  typename ::boost::asio::async_result< \
/root/boost_1_87_0/boost/asio/async_result.hpp:526:    typename ::boost::asio::decay<ct>::type, sig>::completion_handler_type
/root/boost_1_87_0/boost/asio/async_result.hpp:528:  typename ::boost::asio::async_result< \
/root/boost_1_87_0/boost/asio/async_result.hpp:529:    typename ::boost::asio::decay<ct>::type, \
/root/boost_1_87_0/boost/asio/async_result.hpp:532:  typename ::boost::asio::async_result< \
/root/boost_1_87_0/boost/asio/async_result.hpp:533:    typename ::boost::asio::decay<ct>::type, \
/root/boost_1_87_0/boost/asio/async_result.hpp:732:  ::boost::asio::completion_token_for<sig>
/root/boost_1_87_0/boost/asio/async_result.hpp:734:  ::boost::asio::completion_token_for<sig0, sig1>
/root/boost_1_87_0/boost/asio/async_result.hpp:736:  ::boost::asio::completion_token_for<sig0, sig1, sig2>
/root/boost_1_87_0/boost/asio/async_result.hpp:822:  ::boost::asio::async_operation
/root/boost_1_87_0/boost/asio/async_result.hpp:824:  ::boost::asio::async_operation<a0>
/root/boost_1_87_0/boost/asio/async_result.hpp:826:  ::boost::asio::async_operation<a0, a1>
/root/boost_1_87_0/boost/asio/async_result.hpp:828:  ::boost::asio::async_operation<a0, a1, a2>
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:360:   * @code socket.send(boost::asio::buffer(data, size)); @endcode
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:371:    boost::asio::detail::throw_error(ec, "send");
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:399:    boost::asio::detail::throw_error(ec, "send");
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:451:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:463:   * socket.async_send(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:471:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:521:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:532:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:573:   * boost::asio::ip::udp::endpoint destination(
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:574:   *     boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:575:   * socket.send_to(boost::asio::buffer(data, size), destination);
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:588:    boost::asio::detail::throw_error(ec, "send_to");
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:615:    boost::asio::detail::throw_error(ec, "send_to");
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:670:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:678:   * boost::asio::ip::udp::endpoint destination(
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:679:   *     boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:681:   *     boost::asio::buffer(data, size), destination, handler);
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:689:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:743:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:750:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:795:   * @code socket.receive(boost::asio::buffer(data, size)); @endcode
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:806:    boost::asio::detail::throw_error(ec, "receive");
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:835:    boost::asio::detail::throw_error(ec, "receive");
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:888:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:901:   * socket.async_receive(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:909:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:959:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:970:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:1012:   * boost::asio::ip::udp::endpoint sender_endpoint;
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:1014:   *     boost::asio::buffer(data, size), sender_endpoint);/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:1027:    boost::asio::detail::throw_error(ec, "receive_from");
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:1054:    boost::asio::detail::throw_error(ec, "receive_from");
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:1111:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:1120:   *     boost::asio::buffer(data, size), sender_endpoint, handler); @endcode
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:1127:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:1183:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_datagram_socket.hpp:1190:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:51: * Most applications will use the boost::asio::deadline_timer typedef.
/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:61: * boost::asio::deadline_timer timer(my_context);
/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:84: * boost::asio::deadline_timer timer(my_context,
/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:114: *   if (e != boost::asio::error::operation_aborted)
/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:121: * @li The boost::asio::basic_deadline_timer::expires_from_now() function
/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:128: * it contains the value boost::asio::error::operation_aborted.
/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:131:    typename TimeTraits = boost::asio::time_traits<Time>,
/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:207:    boost::asio::detail::throw_error(ec, "expires_at");
/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:230:    boost::asio::detail::throw_error(ec, "expires_at");
/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:250:    boost::asio::detail::throw_error(ec, "expires_from_now");/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:275:    boost::asio::detail::throw_error(ec, "expires_from_now");/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:331:   * be invoked with the boost::asio::error::operation_aborted error code.
/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:353:    boost::asio::detail::throw_error(ec, "cancel");
/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:361:   * be invoked with the boost::asio::error::operation_aborted error code.
/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:389:   * boost::asio::error::operation_aborted error code.
/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:413:    boost::asio::detail::throw_error(ec, "cancel_one");
/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:422:   * boost::asio::error::operation_aborted error code.
/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:460:   * be invoked with the boost::asio::error::operation_aborted error code.
/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:483:    boost::asio::detail::throw_error(ec, "expires_at");
/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:491:   * be invoked with the boost::asio::error::operation_aborted error code.
/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:530:   * be invoked with the boost::asio::error::operation_aborted error code.
/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:553:    boost::asio::detail::throw_error(ec, "expires_from_now");/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:561:   * be invoked with the boost::asio::error::operation_aborted error code.
/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:597:    boost::asio::detail::throw_error(ec, "wait");
/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:624:   * code boost::asio::error::operation_aborted.
/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:637:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_deadline_timer.hpp:644:   * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_file.hpp:139:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_file.hpp:166:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_file.hpp:188:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_file.hpp:216:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_file.hpp:236:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/basic_file.hpp:262:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/basic_file.hpp:360:   * boost::asio::stream_file file(my_context);
/root/boost_1_87_0/boost/asio/basic_file.hpp:361:   * file.open("/path/to/my/file", boost::asio::stream_file::read_only);
/root/boost_1_87_0/boost/asio/basic_file.hpp:368:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_file.hpp:384:   * boost::asio::stream_file file(my_context);
/root/boost_1_87_0/boost/asio/basic_file.hpp:386:   * file.open("/path/to/my/file", boost::asio::stream_file::read_only, ec);
/root/boost_1_87_0/boost/asio/basic_file.hpp:413:   * boost::asio::stream_file file(my_context);
/root/boost_1_87_0/boost/asio/basic_file.hpp:414:   * file.open("/path/to/my/file", boost::asio::stream_file::read_only);
/root/boost_1_87_0/boost/asio/basic_file.hpp:422:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_file.hpp:438:   * boost::asio::stream_file file(my_context);
/root/boost_1_87_0/boost/asio/basic_file.hpp:440:   * file.open("/path/to/my/file", boost::asio::stream_file::read_only, ec);
/root/boost_1_87_0/boost/asio/basic_file.hpp:468:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/basic_file.hpp:497:   * boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/basic_file.hpp:506:    boost::asio::detail::throw_error(ec, "close");
/root/boost_1_87_0/boost/asio/basic_file.hpp:513:   * boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/basic_file.hpp:520:   * boost::asio::stream_file file(my_context);
/root/boost_1_87_0/boost/asio/basic_file.hpp:540:   * operations will be passed the boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/basic_file.hpp:546:   * 8.1, and will fail with boost::asio::error::operation_not_supported on
/root/boost_1_87_0/boost/asio/basic_file.hpp:560:    boost::asio::detail::throw_error(ec, "release");
/root/boost_1_87_0/boost/asio/basic_file.hpp:568:   * operations will be passed the boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/basic_file.hpp:574:   * 8.1, and will fail with boost::asio::error::operation_not_supported on
/root/boost_1_87_0/boost/asio/basic_file.hpp:603:   * operations will be passed the boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/basic_file.hpp:608:   * boost::asio::error::operation_not_supported when run on Windows XP, Windows
/root/boost_1_87_0/boost/asio/basic_file.hpp:638:    boost::asio::detail::throw_error(ec, "cancel");
/root/boost_1_87_0/boost/asio/basic_file.hpp:645:   * operations will be passed the boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/basic_file.hpp:650:   * boost::asio::error::operation_not_supported when run on Windows XP, Windows
/root/boost_1_87_0/boost/asio/basic_file.hpp:692:    boost::asio::detail::throw_error(ec, "size");
/root/boost_1_87_0/boost/asio/basic_file.hpp:722:    boost::asio::detail::throw_error(ec, "resize");
/root/boost_1_87_0/boost/asio/basic_file.hpp:753:    boost::asio::detail::throw_error(ec, "sync_all");
/root/boost_1_87_0/boost/asio/basic_file.hpp:780:    boost::asio::detail::throw_error(ec, "sync_data");
/root/boost_1_87_0/boost/asio/basic_io_object.hpp:81:  boost::asio::io_context& get_io_context()
/root/boost_1_87_0/boost/asio/basic_io_object.hpp:94:  boost::asio::io_context& get_io_service()
/root/boost_1_87_0/boost/asio/basic_io_object.hpp:100:  typedef boost::asio::io_context::executor_type executor_type;
/root/boost_1_87_0/boost/asio/basic_io_object.hpp:114:  explicit basic_io_object(boost::asio::io_context& io_context)
/root/boost_1_87_0/boost/asio/basic_io_object.hpp:115:    : service_(boost::asio::use_service<IoObjectService>(io_context))
/root/boost_1_87_0/boost/asio/basic_io_object.hpp:200:  boost::asio::io_context& get_io_context()
/root/boost_1_87_0/boost/asio/basic_io_object.hpp:205:  boost::asio::io_context& get_io_service()
/root/boost_1_87_0/boost/asio/basic_io_object.hpp:210:  typedef boost::asio::io_context::executor_type executor_type;
/root/boost_1_87_0/boost/asio/basic_io_object.hpp:218:  explicit basic_io_object(boost::asio::io_context& io_context)
/root/boost_1_87_0/boost/asio/basic_io_object.hpp:219:    : service_(&boost::asio::use_service<IoObjectService>(io_context))
/root/boost_1_87_0/boost/asio/basic_io_object.hpp:233:    : service_(&boost::asio::use_service<IoObjectService>(
/root/boost_1_87_0/boost/asio/basic_random_access_file.hpp:354:   * boost::asio::error::eof indicates that the end of the file was reached.
/root/boost_1_87_0/boost/asio/basic_random_access_file.hpp:363:   * handle.write_some_at(42, boost::asio::buffer(data, size));
/root/boost_1_87_0/boost/asio/basic_random_access_file.hpp:376:    boost::asio::detail::throw_error(ec, "write_some_at");
/root/boost_1_87_0/boost/asio/basic_random_access_file.hpp:431:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_random_access_file.hpp:443:   * handle.async_write_some_at(42, boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/basic_random_access_file.hpp:451:   * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_random_access_file.hpp:487:   * boost::asio::error::eof indicates that the end of the file was reached.
/root/boost_1_87_0/boost/asio/basic_random_access_file.hpp:497:   * handle.read_some_at(42, boost::asio::buffer(data, size));
/root/boost_1_87_0/boost/asio/basic_random_access_file.hpp:510:    boost::asio::detail::throw_error(ec, "read_some_at");/root/boost_1_87_0/boost/asio/basic_random_access_file.hpp:566:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_random_access_file.hpp:579:   * handle.async_read_some_at(42, boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/basic_random_access_file.hpp:587:   * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:354:   * @code socket.send(boost::asio::buffer(data, size)); @endcode/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:365:    boost::asio::detail::throw_error(ec, "send");
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:392:    boost::asio::detail::throw_error(ec, "send");
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:443:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:455:   * socket.async_send(boost::asio::buffer(data, size), handler);/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:463:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:513:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:524:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:565:   * boost::asio::ip::udp::endpoint destination(
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:566:   *     boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:567:   * socket.send_to(boost::asio::buffer(data, size), destination);
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:580:    boost::asio::detail::throw_error(ec, "send_to");
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:607:    boost::asio::detail::throw_error(ec, "send_to");
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:662:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:670:   * boost::asio::ip::udp::endpoint destination(
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:671:   *     boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:673:   *     boost::asio::buffer(data, size), destination, handler);
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:681:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:735:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:742:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:787:   * @code socket.receive(boost::asio::buffer(data, size)); @endcode
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:798:    boost::asio::detail::throw_error(ec, "receive");
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:827:    boost::asio::detail::throw_error(ec, "receive");
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:880:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:893:   * socket.async_receive(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:901:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:951:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:962:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:1005:   * boost::asio::ip::udp::endpoint sender_endpoint;
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:1007:   *     boost::asio::buffer(data, size), sender_endpoint);
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:1020:    boost::asio::detail::throw_error(ec, "receive_from");
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:1047:    boost::asio::detail::throw_error(ec, "receive_from");
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:1104:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:1113:   *     boost::asio::buffer(data, size), 0, sender_endpoint, handler); @endcode
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:1120:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:1177:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_raw_socket.hpp:1184:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_readable_pipe.hpp:141:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/basic_readable_pipe.hpp:168:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/basic_readable_pipe.hpp:307:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/basic_readable_pipe.hpp:335:   * boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/basic_readable_pipe.hpp:343:    boost::asio::detail::throw_error(ec, "close");
/root/boost_1_87_0/boost/asio/basic_readable_pipe.hpp:350:   * boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/basic_readable_pipe.hpp:364:   * passed the boost::asio::error::operation_aborted error. Ownership of the
/root/boost_1_87_0/boost/asio/basic_readable_pipe.hpp:370:   * 8.1, and will fail with boost::asio::error::operation_not_supported on
/root/boost_1_87_0/boost/asio/basic_readable_pipe.hpp:384:    boost::asio::detail::throw_error(ec, "release");
/root/boost_1_87_0/boost/asio/basic_readable_pipe.hpp:392:   * passed the boost::asio::error::operation_aborted error. Ownership of the
/root/boost_1_87_0/boost/asio/basic_readable_pipe.hpp:398:   * 8.1, and will fail with boost::asio::error::operation_not_supported on
/root/boost_1_87_0/boost/asio/basic_readable_pipe.hpp:427:   * boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/basic_readable_pipe.hpp:435:    boost::asio::detail::throw_error(ec, "cancel");
/root/boost_1_87_0/boost/asio/basic_readable_pipe.hpp:442:   * boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/basic_readable_pipe.hpp:463:   * boost::asio::error::eof indicates that the connection was closed by the
/root/boost_1_87_0/boost/asio/basic_readable_pipe.hpp:474:   * basic_readable_pipe.read_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/boost/asio/basic_readable_pipe.hpp:486:    boost::asio::detail::throw_error(ec, "read_some");
/root/boost_1_87_0/boost/asio/basic_readable_pipe.hpp:538:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_readable_pipe.hpp:552:   *     boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/basic_seq_packet_socket.hpp:366:   * socket.send(boost::asio::buffer(data, size), 0);
/root/boost_1_87_0/boost/asio/basic_seq_packet_socket.hpp:379:    boost::asio::detail::throw_error(ec, "send");
/root/boost_1_87_0/boost/asio/basic_seq_packet_socket.hpp:434:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_seq_packet_socket.hpp:442:   * socket.async_send(boost::asio::buffer(data, size), 0, handler);
/root/boost_1_87_0/boost/asio/basic_seq_packet_socket.hpp:450:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_seq_packet_socket.hpp:492:   * boost::asio::error::eof indicates that the connection was closed by the
/root/boost_1_87_0/boost/asio/basic_seq_packet_socket.hpp:499:   * socket.receive(boost::asio::buffer(data, size), out_flags);
/root/boost_1_87_0/boost/asio/basic_seq_packet_socket.hpp:512:    boost::asio::detail::throw_error(ec, "receive");
/root/boost_1_87_0/boost/asio/basic_seq_packet_socket.hpp:534:   * boost::asio::error::eof indicates that the connection was closed by the
/root/boost_1_87_0/boost/asio/basic_seq_packet_socket.hpp:545:   * socket.receive(boost::asio::buffer(data, size), 0, out_flags);
/root/boost_1_87_0/boost/asio/basic_seq_packet_socket.hpp:559:    boost::asio::detail::throw_error(ec, "receive");
/root/boost_1_87_0/boost/asio/basic_seq_packet_socket.hpp:624:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_seq_packet_socket.hpp:633:   * socket.async_receive(boost::asio::buffer(data, size), out_flags, handler);
/root/boost_1_87_0/boost/asio/basic_seq_packet_socket.hpp:641:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_seq_packet_socket.hpp:698:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_seq_packet_socket.hpp:708:   *     boost::asio::buffer(data, size),
/root/boost_1_87_0/boost/asio/basic_seq_packet_socket.hpp:717:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:138:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:162:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:182:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:206:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:229:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:256:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:397:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:429:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:458:   * boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:466:    boost::asio::detail::throw_error(ec, "close");
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:473:   * boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:498:   * passed the boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:506:    boost::asio::detail::throw_error(ec, "cancel");
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:513:   * passed the boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:534:    boost::asio::detail::throw_error(ec, "send_break");
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:559:   * boost::asio::serial_port_base::baud_rate @n
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:560:   * boost::asio::serial_port_base::flow_control @n
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:561:   * boost::asio::serial_port_base::parity @n
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:562:   * boost::asio::serial_port_base::stop_bits @n
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:563:   * boost::asio::serial_port_base::character_size
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:570:    boost::asio::detail::throw_error(ec, "set_option");
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:582:   * boost::asio::serial_port_base::baud_rate @n
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:583:   * boost::asio::serial_port_base::flow_control @n
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:584:   * boost::asio::serial_port_base::parity @n
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:585:   * boost::asio::serial_port_base::stop_bits @n
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:586:   * boost::asio::serial_port_base::character_size
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:606:   * boost::asio::serial_port_base::baud_rate @n
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:607:   * boost::asio::serial_port_base::flow_control @n
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:608:   * boost::asio::serial_port_base::parity @n
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:609:   * boost::asio::serial_port_base::stop_bits @n
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:610:   * boost::asio::serial_port_base::character_size
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:617:    boost::asio::detail::throw_error(ec, "get_option");
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:630:   * boost::asio::serial_port_base::baud_rate @n
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:631:   * boost::asio::serial_port_base::flow_control @n
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:632:   * boost::asio::serial_port_base::parity @n
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:633:   * boost::asio::serial_port_base::stop_bits @n
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:634:   * boost::asio::serial_port_base::character_size
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:655:   * boost::asio::error::eof indicates that the connection was closed by the
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:665:   * basic_serial_port.write_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:677:    boost::asio::detail::throw_error(ec, "write_some");
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:728:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:741:   *     boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:749:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:783:   * boost::asio::error::eof indicates that the connection was closed by the
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:794:   * basic_serial_port.read_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:806:    boost::asio::detail::throw_error(ec, "read_some");
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:858:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:872:   *     boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/basic_serial_port.hpp:880:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:62: * boost::asio::signal_set signals(my_context, SIGINT, SIGTERM);
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:157:   * @code boost::asio::signal_set signals(ex);
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:165:    boost::asio::detail::throw_error(ec, "add");
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:179:   * @code boost::asio::signal_set signals(context);
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:192:    boost::asio::detail::throw_error(ec, "add");
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:208:   * @code boost::asio::signal_set signals(ex);
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:218:    boost::asio::detail::throw_error(ec, "add");
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:220:    boost::asio::detail::throw_error(ec, "add");
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:236:   * @code boost::asio::signal_set signals(context);
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:251:    boost::asio::detail::throw_error(ec, "add");
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:253:    boost::asio::detail::throw_error(ec, "add");
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:271:   * @code boost::asio::signal_set signals(ex);
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:282:    boost::asio::detail::throw_error(ec, "add");
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:284:    boost::asio::detail::throw_error(ec, "add");
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:286:    boost::asio::detail::throw_error(ec, "add");
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:304:   * @code boost::asio::signal_set signals(context);
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:320:    boost::asio::detail::throw_error(ec, "add");
^A/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:322:    boost::asio::detail::throw_error(ec, "add");
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:324:    boost::asio::detail::throw_error(ec, "add");
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:356:    boost::asio::detail::throw_error(ec, "add");
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:398:    boost::asio::detail::throw_error(ec, "add");
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:443:    boost::asio::detail::throw_error(ec, "remove");
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:478:    boost::asio::detail::throw_error(ec, "clear");
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:500:   * operation will be invoked with the boost::asio::error::operation_aborted
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:521:    boost::asio::detail::throw_error(ec, "cancel");
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:528:   * operation will be invoked with the boost::asio::error::operation_aborted
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:563:   * error code boost::asio::error::operation_aborted.
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:577:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_signal_set.hpp:584:   * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_socket.hpp:158:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:183:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:207:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:209:    boost::asio::detail::throw_error(ec, "bind");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:238:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:240:    boost::asio::detail::throw_error(ec, "bind");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:263:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:291:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:417:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:418:   * socket.open(boost::asio::ip::tcp::v4());
/root/boost_1_87_0/boost/asio/basic_socket.hpp:425:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:438:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:440:   * socket.open(boost::asio::ip::tcp::v4(), ec);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:470:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:501:   * with the boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/basic_socket.hpp:513:    boost::asio::detail::throw_error(ec, "close");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:520:   * with the boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/basic_socket.hpp:527:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:550:   * will be passed the boost::asio::error::operation_aborted error. Ownership
/root/boost_1_87_0/boost/asio/basic_socket.hpp:556:   * 8.1, and will fail with boost::asio::error::operation_not_supported on
/root/boost_1_87_0/boost/asio/basic_socket.hpp:570:    boost::asio::detail::throw_error(ec, "release");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:578:   * will be passed the boost::asio::error::operation_aborted error. Ownership
/root/boost_1_87_0/boost/asio/basic_socket.hpp:584:   * 8.1, and will fail with boost::asio::error::operation_not_supported on
/root/boost_1_87_0/boost/asio/basic_socket.hpp:613:   * will be passed the boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/basic_socket.hpp:618:   * boost::asio::error::operation_not_supported when run on Windows XP, Windows
/root/boost_1_87_0/boost/asio/basic_socket.hpp:654:    boost::asio::detail::throw_error(ec, "cancel");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:661:   * will be passed the boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/basic_socket.hpp:666:   * boost::asio::error::operation_not_supported when run on Windows XP, Windows
/root/boost_1_87_0/boost/asio/basic_socket.hpp:718:    boost::asio::detail::throw_error(ec, "at_mark");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:752:    boost::asio::detail::throw_error(ec, "available");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:783:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:784:   * socket.open(boost::asio::ip::tcp::v4());
/root/boost_1_87_0/boost/asio/basic_socket.hpp:785:   * socket.bind(boost::asio::ip::tcp::endpoint(
/root/boost_1_87_0/boost/asio/basic_socket.hpp:786:   *       boost::asio::ip::tcp::v4(), 12345));
/root/boost_1_87_0/boost/asio/basic_socket.hpp:793:    boost::asio::detail::throw_error(ec, "bind");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:808:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:809:   * socket.open(boost::asio::ip::tcp::v4());
/root/boost_1_87_0/boost/asio/basic_socket.hpp:811:   * socket.bind(boost::asio::ip::tcp::endpoint(
/root/boost_1_87_0/boost/asio/basic_socket.hpp:812:   *       boost::asio::ip::tcp::v4(), 12345), ec);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:843:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:844:   * boost::asio::ip::tcp::endpoint endpoint(
/root/boost_1_87_0/boost/asio/basic_socket.hpp:845:   *     boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:856:      boost::asio::detail::throw_error(ec, "connect");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:859:    boost::asio::detail::throw_error(ec, "connect");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:879:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:880:   * boost::asio::ip::tcp::endpoint endpoint(
/root/boost_1_87_0/boost/asio/basic_socket.hpp:881:   *     boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:931:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_socket.hpp:948:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:949:   * boost::asio::ip::tcp::endpoint endpoint(
/root/boost_1_87_0/boost/asio/basic_socket.hpp:950:   *     boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:956:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_socket.hpp:994:   * boost::asio::socket_base::broadcast @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:995:   * boost::asio::socket_base::do_not_route @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:996:   * boost::asio::socket_base::keep_alive @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:997:   * boost::asio::socket_base::linger @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:998:   * boost::asio::socket_base::receive_buffer_size @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:999:   * boost::asio::socket_base::receive_low_watermark @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1000:   * boost::asio::socket_base::reuse_address @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1001:   * boost::asio::socket_base::send_buffer_size @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1002:   * boost::asio::socket_base::send_low_watermark @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1003:   * boost::asio::ip::multicast::join_group @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1004:   * boost::asio::ip::multicast::leave_group @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1005:   * boost::asio::ip::multicast::enable_loopback @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1006:   * boost::asio::ip::multicast::outbound_interface @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1007:   * boost::asio::ip::multicast::hops @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1008:   * boost::asio::ip::tcp::no_delay
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1013:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1015:   * boost::asio::ip::tcp::no_delay option(true);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1024:    boost::asio::detail::throw_error(ec, "set_option");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1036:   * boost::asio::socket_base::broadcast @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1037:   * boost::asio::socket_base::do_not_route @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1038:   * boost::asio::socket_base::keep_alive @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1039:   * boost::asio::socket_base::linger @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1040:   * boost::asio::socket_base::receive_buffer_size @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1041:   * boost::asio::socket_base::receive_low_watermark @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1042:   * boost::asio::socket_base::reuse_address @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1043:   * boost::asio::socket_base::send_buffer_size @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1044:   * boost::asio::socket_base::send_low_watermark @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1045:   * boost::asio::ip::multicast::join_group @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1046:   * boost::asio::ip::multicast::leave_group @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1047:   * boost::asio::ip::multicast::enable_loopback @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1048:   * boost::asio::ip::multicast::outbound_interface @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1049:   * boost::asio::ip::multicast::hops @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1050:   * boost::asio::ip::tcp::no_delay
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1055:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1057:   * boost::asio::ip::tcp::no_delay option(true);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1083:   * boost::asio::socket_base::broadcast @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1084:   * boost::asio::socket_base::do_not_route @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1085:   * boost::asio::socket_base::keep_alive @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1086:   * boost::asio::socket_base::linger @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1087:   * boost::asio::socket_base::receive_buffer_size @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1088:   * boost::asio::socket_base::receive_low_watermark @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1089:   * boost::asio::socket_base::reuse_address @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1090:   * boost::asio::socket_base::send_buffer_size @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1091:   * boost::asio::socket_base::send_low_watermark @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1092:   * boost::asio::ip::multicast::join_group @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1093:   * boost::asio::ip::multicast::leave_group @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1094:   * boost::asio::ip::multicast::enable_loopback @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1095:   * boost::asio::ip::multicast::outbound_interface @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1096:   * boost::asio::ip::multicast::hops @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1097:   * boost::asio::ip::tcp::no_delay
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1102:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1104:   * boost::asio::ip::tcp::socket::keep_alive option;
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1114:    boost::asio::detail::throw_error(ec, "get_option");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1126:   * boost::asio::socket_base::broadcast @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1127:   * boost::asio::socket_base::do_not_route @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1128:   * boost::asio::socket_base::keep_alive @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1129:   * boost::asio::socket_base::linger @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1130:   * boost::asio::socket_base::receive_buffer_size @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1131:   * boost::asio::socket_base::receive_low_watermark @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1132:   * boost::asio::socket_base::reuse_address @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1133:   * boost::asio::socket_base::send_buffer_size @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1134:   * boost::asio::socket_base::send_low_watermark @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1135:   * boost::asio::ip::multicast::join_group @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1136:   * boost::asio::ip::multicast::leave_group @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1137:   * boost::asio::ip::multicast::enable_loopback @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1138:   * boost::asio::ip::multicast::outbound_interface @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1139:   * boost::asio::ip::multicast::hops @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1140:   * boost::asio::ip::tcp::no_delay
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1145:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1147:   * boost::asio::ip::tcp::socket::keep_alive option;
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1174:   * boost::asio::socket_base::bytes_readable @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1175:   * boost::asio::socket_base::non_blocking_io
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1180:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1182:   * boost::asio::ip::tcp::socket::bytes_readable command;
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1192:    boost::asio::detail::throw_error(ec, "io_control");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1204:   * boost::asio::socket_base::bytes_readable @n
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1205:   * boost::asio::socket_base::non_blocking_io
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1210:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1212:   * boost::asio::ip::tcp::socket::bytes_readable command;
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1233:   * boost::asio::error::would_block if they are unable to perform the requested
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1239:   * boost::asio::error::would_block.
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1249:   * boost::asio::error::would_block if they are unable to perform the requested
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1257:   * boost::asio::error::would_block.
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1263:    boost::asio::detail::throw_error(ec, "non_blocking");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1269:   * boost::asio::error::would_block if they are unable to perform the requested
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1277:   * boost::asio::error::would_block.
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1293:   * direct system calls may fail with boost::asio::error::would_block (or the
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1331:   *             boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1335:   *         if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1339:   *         if (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1340:   *             || ec == boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1382:   * mode and direct system calls may fail with boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1387:   * function fails with boost::asio::error::invalid_argument, as the
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1421:   *             boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1425:   *         if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1429:   *         if (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1430:   *             || ec == boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1465:    boost::asio::detail::throw_error(ec, "native_non_blocking");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1475:   * mode and direct system calls may fail with boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1480:   * function fails with boost::asio::error::invalid_argument, as the
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1514:   *             boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1518:   *         if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1522:   *         if (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1523:   *             || ec == boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1571:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1573:   * boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint();
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1581:    boost::asio::detail::throw_error(ec, "local_endpoint");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1596:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1599:   * boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint(ec);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1621:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1623:   * boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint();
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1631:    boost::asio::detail::throw_error(ec, "remote_endpoint");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1646:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1649:   * boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint(ec);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1673:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1675:   * socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1682:    boost::asio::detail::throw_error(ec, "shutdown");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1697:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1700:   * socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send, ec);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1725:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1727:   * socket.wait(boost::asio::ip::tcp::socket::wait_read);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1734:    boost::asio::detail::throw_error(ec, "wait");
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1750:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1753:   * socket.wait(boost::asio::ip::tcp::socket::wait_read, ec);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1783:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1800:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1802:   * socket.async_wait(boost::asio::ip::tcp::socket::wait_read, wait_handler);
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1807:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1883:          boost::asio::post(self_->impl_.get_executor(),
/root/boost_1_87_0/boost/asio/basic_socket.hpp:1884:              boost::asio::detail::bind_handler(
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:73: * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:74: * boost::asio::ip::tcp::endpoint endpoint(boost::asio::ip::tcp::v4(), port);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:76: * acceptor.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:176:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:202:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:239:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:244:      boost::asio::detail::throw_error(ec, "set_option");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:247:    boost::asio::detail::throw_error(ec, "bind");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:250:    boost::asio::detail::throw_error(ec, "listen");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:291:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:296:      boost::asio::detail::throw_error(ec, "set_option");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:299:    boost::asio::detail::throw_error(ec, "bind");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:302:    boost::asio::detail::throw_error(ec, "listen");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:327:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:356:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:469:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:470:   * acceptor.open(boost::asio::ip::tcp::v4());
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:477:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:491:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:493:   * acceptor.open(boost::asio::ip::tcp::v4(), ec);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:523:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:562:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:563:   * boost::asio::ip::tcp::endpoint endpoint(boost::asio::ip::tcp::v4(), 12345);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:572:    boost::asio::detail::throw_error(ec, "bind");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:587:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:588:   * boost::asio::ip::tcp::endpoint endpoint(boost::asio::ip::tcp::v4(), 12345);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:619:    boost::asio::detail::throw_error(ec, "listen");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:634:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:637:   * acceptor.listen(boost::asio::socket_base::max_listen_connections, ec);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:664:    boost::asio::detail::throw_error(ec, "close");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:679:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:699:   * passed the boost::asio::error::operation_aborted error. Ownership of the
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:705:   * 8.1, and will fail with boost::asio::error::operation_not_supported on
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:719:    boost::asio::detail::throw_error(ec, "release");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:727:   * passed the boost::asio::error::operation_aborted error. Ownership of the
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:733:   * 8.1, and will fail with boost::asio::error::operation_not_supported on
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:762:   * will be passed the boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:770:    boost::asio::detail::throw_error(ec, "cancel");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:777:   * will be passed the boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:796:   * boost::asio::socket_base::reuse_address
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:797:   * boost::asio::socket_base::enable_connection_aborted
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:802:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:804:   * boost::asio::ip::tcp::acceptor::reuse_address option(true);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:813:    boost::asio::detail::throw_error(ec, "set_option");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:825:   * boost::asio::socket_base::reuse_address
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:826:   * boost::asio::socket_base::enable_connection_aborted
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:831:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:833:   * boost::asio::ip::tcp::acceptor::reuse_address option(true);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:860:   * boost::asio::socket_base::reuse_address
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:865:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:867:   * boost::asio::ip::tcp::acceptor::reuse_address option;
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:877:    boost::asio::detail::throw_error(ec, "get_option");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:890:   * boost::asio::socket_base::reuse_address
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:895:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:897:   * boost::asio::ip::tcp::acceptor::reuse_address option;
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:924:   * boost::asio::socket_base::non_blocking_io
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:929:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:931:   * boost::asio::ip::tcp::acceptor::non_blocking_io command(true);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:940:    boost::asio::detail::throw_error(ec, "io_control");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:952:   * boost::asio::socket_base::non_blocking_io
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:957:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:959:   * boost::asio::ip::tcp::acceptor::non_blocking_io command(true);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:979:   * boost::asio::error::would_block if they are unable to perform the requested
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:985:   * boost::asio::error::would_block.
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:995:   * with boost::asio::error::would_block if they are unable to perform the
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1003:   * boost::asio::error::would_block.
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1009:    boost::asio::detail::throw_error(ec, "non_blocking");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1015:   * with boost::asio::error::would_block if they are unable to perform the
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1023:   * boost::asio::error::would_block.
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1039:   * direct system calls may fail with boost::asio::error::would_block (or the
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1058:   * mode and direct system calls may fail with boost::asi
::error::would_block
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1063:   * function fails with boost::asio::error::invalid_argument, as the
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1071:    boost::asio::detail::throw_error(ec, "native_non_blocking");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1081:   * mode and direct system calls may fail with boost::asi
::error::would_block
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1086:   * function fails with boost::asio::error::invalid_argument, as the
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1107:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1109:   * boost::asio::ip::tcp::endpoint endpoint = acceptor.local_endpoint();
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1117:    boost::asio::detail::throw_error(ec, "local_endpoint");/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1133:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1136:   * boost::asio::ip::tcp::endpoint endpoint = acceptor.local_endpoint(ec);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1159:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1161:   * acceptor.wait(boost::asio::ip::tcp::acceptor::wait_read);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1168:    boost::asio::detail::throw_error(ec, "wait");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1184:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1187:   * acceptor.wait(boost::asio::ip::tcp::acceptor::wait_read, ec);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1217:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1234:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1237:   *     boost::asio::ip::tcp::acceptor::wait_read,
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1243:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1277:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1279:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1292:    boost::asio::detail::throw_error(ec, "accept");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1307:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1309:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1352:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1369:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1371:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1377:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1419:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1421:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1422:   * boost::asio::ip::tcp::endpoint endpoint;
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1433:    boost::asio::detail::throw_error(ec, "accept");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1452:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1454:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1455:   * boost::asio::ip::tcp::endpoint endpoint;
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1500:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1507:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1545:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1547:   * boost::asio::ip::tcp::socket socket(acceptor.accept());
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1557:    boost::asio::detail::throw_error(ec, "accept");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1577:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1579:   * boost::asio::ip::tcp::socket socket(acceptor.accept(ec));
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1620:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1630:   *     boost::asio::ip::tcp::socket peer)
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1640:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1647:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1698:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1700:   * boost::asio::ip::tcp::socket socket(acceptor.accept());
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1715:    boost::asio::detail::throw_error(ec, "accept");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1737:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1739:   * boost::asio::ip::tcp::socket socket(acceptor.accept());
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1754:    boost::asio::detail::throw_error(ec, "accept");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1777:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1779:   * boost::asio::ip::tcp::socket socket(acceptor.accept(my_context2, ec));
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1819:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1821:   * boost::asio::ip::tcp::socket socket(acceptor.accept(my_context2, ec));
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1870:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1880:   *     boost::asio::ip::tcp::socket peer)
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1890:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1897:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1966:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1976:   *     boost::asio::ip::tcp::socket peer)
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1986:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:1993:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2049:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2051:   * boost::asio::ip::tcp::endpoint endpoint;
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2052:   * boost::asio::ip::tcp::socket socket(acceptor.accept(endpoint));
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2063:    boost::asio::detail::throw_error(ec, "accept");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2086:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2088:   * boost::asio::ip::tcp::endpoint endpoint;
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2089:   * boost::asio::ip::tcp::socket socket(acceptor.accept(endpoint, ec));
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2136:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2146:   *     boost::asio::ip::tcp::socket peer)
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2156:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2158:   * boost::asio::ip::tcp::endpoint endpoint;
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2164:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2218:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2220:   * boost::asio::ip::tcp::endpoint endpoint;
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2221:   * boost::asio::ip::tcp::socket socket(
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2238:    boost::asio::detail::throw_error(ec, "accept");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2263:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2265:   * boost::asio::ip::tcp::endpoint endpoint;
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2266:   * boost::asio::ip::tcp::socket socket(
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2283:    boost::asio::detail::throw_error(ec, "accept");
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2309:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2311:   * boost::asio::ip::tcp::endpoint endpoint;
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2312:   * boost::asio::ip::tcp::socket socket(
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2358:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2360:   * boost::asio::ip::tcp::endpoint endpoint;
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2361:   * boost::asio::ip::tcp::socket socket(
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2418:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2428:   *     boost::asio::ip::tcp::socket peer)
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2438:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2440:   * boost::asio::ip::tcp::endpoint endpoint;
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2446:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2518:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2528:   *     boost::asio::ip::tcp::socket peer)
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2538:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2540:   * boost::asio::ip::tcp::endpoint endpoint;
/root/boost_1_87_0/boost/asio/basic_socket_acceptor.hpp:2546:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_socket_iostream.hpp:231:   * boost::asio::error::operation_aborted.
/root/boost_1_87_0/boost/asio/basic_socket_iostream.hpp:245:   * boost::asio::error::operation_aborted.
/root/boost_1_87_0/boost/asio/basic_socket_streambuf.hpp:260:   * boost::asio::error::operation_aborted.
/root/boost_1_87_0/boost/asio/basic_socket_streambuf.hpp:274:   * boost::asio::error::operation_aborted.
/root/boost_1_87_0/boost/asio/basic_socket_streambuf.hpp:287:    ec_ = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/basic_socket_streambuf.hpp:298:        ec_ = boost::asio::error::timed_out;
/root/boost_1_87_0/boost/asio/basic_socket_streambuf.hpp:306:        bufs(boost::asio::buffer(get_buffer_) + putback_max);
/root/boost_1_87_0/boost/asio/basic_socket_streambuf.hpp:321:        ec_ = boost::asio::error::eof;
/root/boost_1_87_0/boost/asio/basic_socket_streambuf.hpp:326:      if (ec_ != boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/basic_socket_streambuf.hpp:327:          && ec_ != boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/basic_socket_streambuf.hpp:341:    ec_ = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/basic_socket_streambuf.hpp:352:      output_buffer = boost::asio::buffer(&ch, sizeof(char_type));
/root/boost_1_87_0/boost/asio/basic_socket_streambuf.hpp:356:      output_buffer = boost::asio::buffer(pbase(),
/root/boost_1_87_0/boost/asio/basic_socket_streambuf.hpp:365:        ec_ = boost::asio::error::timed_out;
/root/boost_1_87_0/boost/asio/basic_socket_streambuf.hpp:385:      if (ec_ != boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/basic_socket_streambuf.hpp:386:          && ec_ != boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/basic_socket_streambuf.hpp:470:    ec_ = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/basic_socket_streambuf.hpp:475:    ec_ = boost::asio::error::not_found;
/root/boost_1_87_0/boost/asio/basic_socket_streambuf.hpp:481:        ec_ = boost::asio::error::timed_out;
/root/boost_1_87_0/boost/asio/basic_socket_streambuf.hpp:503:      if (ec_ != boost::asio::error::in_progress
/root/boost_1_87_0/boost/asio/basic_socket_streambuf.hpp:504:          && ec_ != boost::asio::error::would_block)
/root/boost_1_87_0/boost/asio/basic_socket_streambuf.hpp:522:          boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/basic_stream_file.hpp:144:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_stream_file.hpp:177:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_stream_file.hpp:204:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_stream_file.hpp:237:    boost::asio::detail::throw_error(ec, "open");
/root/boost_1_87_0/boost/asio/basic_stream_file.hpp:388:    boost::asio::detail::throw_error(ec, "seek");
/root/boost_1_87_0/boost/asio/basic_stream_file.hpp:422:   * boost::asio::error::eof indicates that the end of the file was reached.
/root/boost_1_87_0/boost/asio/basic_stream_file.hpp:431:   * file.write_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/boost/asio/basic_stream_file.hpp:443:    boost::asio::detail::throw_error(ec, "write_some");
/root/boost_1_87_0/boost/asio/basic_stream_file.hpp:494:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_stream_file.hpp:506:   * file.async_write_some(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/basic_stream_file.hpp:514:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_stream_file.hpp:548:   * boost::asio::error::eof indicates that the end of the file was reached.
/root/boost_1_87_0/boost/asio/basic_stream_file.hpp:558:   * file.read_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/boost/asio/basic_stream_file.hpp:570:    boost::asio::detail::throw_error(ec, "read_some");
/root/boost_1_87_0/boost/asio/basic_stream_file.hpp:622:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_stream_file.hpp:635:   * file.async_read_some(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/basic_stream_file.hpp:643:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:362:   * socket.send(boost::asio::buffer(data, size));
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:374:    boost::asio::detail::throw_error(ec, "send");
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:399:   * socket.send(boost::asio::buffer(data, size), 0);
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:412:    boost::asio::detail::throw_error(ec, "send");
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:465:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:477:   * socket.async_send(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:485:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:535:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:547:   * socket.async_send(boost::asio::buffer(data, size), 0, handler);
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:555:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:590:   * boost::asio::error::eof indicates that the connection was closed by the
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:601:   * socket.receive(boost::asio::buffer(data, size));
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:613:    boost::asio::detail::throw_error(ec, "receive");
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:630:   * boost::asio::error::eof indicates that the connection was closed by the
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:641:   * socket.receive(boost::asio::buffer(data, size), 0);
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:654:    boost::asio::detail::throw_error(ec, "receive");
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:707:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:721:   * socket.async_receive(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:729:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:779:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:793:   * socket.async_receive(boost::asio::buffer(data, size), 0, handler);
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:801:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:836:   * boost::asio::error::eof indicates that the connection was closed by the
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:846:   * socket.write_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:858:    boost::asio::detail::throw_error(ec, "write_some");
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:909:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:921:   * socket.async_write_some(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:929:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:965:   * boost::asio::error::eof indicates that the connection was closed by the
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:976:   * socket.read_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:988:    boost::asio::detail::throw_error(ec, "read_some");
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:1040:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:1053:   * socket.async_read_some(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/basic_stream_socket.hpp:1061:   * cancellation for the following boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_streambuf.hpp:79: * boost::asio::streambuf b;
/root/boost_1_87_0/boost/asio/basic_streambuf.hpp:91: * boost::asio::streambuf b;
/root/boost_1_87_0/boost/asio/basic_streambuf.hpp:94: * boost::asio::streambuf::mutable_buffers_type bufs = b.prepare(512);
/root/boost_1_87_0/boost/asio/basic_streambuf.hpp:195:    return boost::asio::buffer(boost::asio::const_buffer(gptr(),
/root/boost_1_87_0/boost/asio/basic_streambuf.hpp:218:    return boost::asio::buffer(boost::asio::mutable_buffer(
/root/boost_1_87_0/boost/asio/basic_streambuf.hpp:339:        std::length_error ex("boost::asio::streambuf too long");
/root/boost_1_87_0/boost/asio/basic_streambuf.hpp:340:        boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/basic_waitable_timer.hpp:41:    typename WaitTraits = boost::asio::wait_traits<Clock>,
/root/boost_1_87_0/boost/asio/basic_waitable_timer.hpp:56: * Most applications will use one of the boost::asio::steady_timer,
/root/boost_1_87_0/boost/asio/basic_waitable_timer.hpp:57: * boost::asio::system_timer or boost::asio::high_resolution_timer typedefs.
/root/boost_1_87_0/boost/asio/basic_waitable_timer.hpp:70: * boost::asio::steady_timer timer(my_context);
/root/boost_1_87_0/boost/asio/basic_waitable_timer.hpp:93: * boost::asio::steady_timer timer(my_context,
/root/boost_1_87_0/boost/asio/basic_waitable_timer.hpp:123: *   if (e != boost::asio::error::operation_aborted)
/root/boost_1_87_0/boost/asio/basic_waitable_timer.hpp:130: * @li The boost::asio::basic_waitable_timer::expires_after() function
/root/boost_1_87_0/boost/asio/basic_waitable_timer.hpp:137: * it contains the value boost::asio::error::operation_aborted.
/root/boost_1_87_0/boost/asio/basic_waitable_timer.hpp:217:    boost::asio::detail::throw_error(ec, "expires_at");
/root/boost_1_87_0/boost/asio/basic_waitable_timer.hpp:241:    boost::asio::detail::throw_error(ec, "expires_at");
/root/boost_1_87_0/boost/asio/basic_waitable_timer.hpp:260:    boost::asio::detail::throw_error(ec, "expires_after");
/root/boost_1_87_0/boost/asio/basic_waitable_timer.hpp:285:    boost::asio::detail::throw_error(ec, "expires_after");
/root/boost_1_87_0/boost/asio/basic_waitable_timer.hpp:389:   * be invoked with the boost::asio::error::operation_aborted error code.
/root/boost_1_87_0/boost/asio/basic_waitable_timer.hpp:411:    boost::asio::detail::throw_error(ec, "cancel");
/root/boost_1_87_0/boost/asio/basic_waitable_timer.hpp:420:   * boost::asio::error::operation_aborted error code.
/root/boost_1_87_0/boost/asio/basic_waitable_timer.hpp:444:    boost::asio::detail::throw_error(ec, "cancel_one");
/root/boost_1_87_0/boost/asio/basic_waitable_timer.hpp:462:   * be invoked with the boost::asio::error::operation_aborted error code.
/root/boost_1_87_0/boost/asio/basic_waitable_timer.hpp:485:    boost::asio::detail::throw_error(ec, "expires_at");
/root/boost_1_87_0/boost/asio/basic_waitable_timer.hpp:493:   * be invoked with the boost::asio::error::operation_aborted error code.
/root/boost_1_87_0/boost/asio/basic_waitable_timer.hpp:516:    boost::asio::detail::throw_error(ec, "expires_after");
/root/boost_1_87_0/boost/asio/basic_waitable_timer.hpp:531:    boost::asio::detail::throw_error(ec, "wait");
/root/boost_1_87_0/boost/asio/basic_waitable_timer.hpp:558:   * code boost::asio::error::operation_aborted.
/root/boost_1_87_0/boost/asio/basic_waitable_timer.hpp:571:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_waitable_timer.hpp:578:   * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/basic_writable_pipe.hpp:141:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/basic_writable_pipe.hpp:168:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/basic_writable_pipe.hpp:307:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/basic_writable_pipe.hpp:335:   * boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/basic_writable_pipe.hpp:343:    boost::asio::detail::throw_error(ec, "close");
/root/boost_1_87_0/boost/asio/basic_writable_pipe.hpp:350:   * boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/basic_writable_pipe.hpp:364:   * passed the boost::asio::error::operation_aborted error. Ownership of the
/root/boost_1_87_0/boost/asio/basic_writable_pipe.hpp:370:   * 8.1, and will fail with boost::asio::error::operation_not_supported on
/root/boost_1_87_0/boost/asio/basic_writable_pipe.hpp:384:    boost::asio::detail::throw_error(ec, "release");
/root/boost_1_87_0/boost/asio/basic_writable_pipe.hpp:392:   * passed the boost::asio::error::operation_aborted error. Ownership of the
/root/boost_1_87_0/boost/asio/basic_writable_pipe.hpp:398:   * 8.1, and will fail with boost::asio::error::operation_not_supported on
/root/boost_1_87_0/boost/asio/basic_writable_pipe.hpp:427:   * passed the boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/basic_writable_pipe.hpp:435:    boost::asio::detail::throw_error(ec, "cancel");
/root/boost_1_87_0/boost/asio/basic_writable_pipe.hpp:442:   * passed the boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/basic_writable_pipe.hpp:463:   * boost::asio::error::eof indicates that the connection was closed by the
/root/boost_1_87_0/boost/asio/basic_writable_pipe.hpp:473:   * pipe.write_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/boost/asio/basic_writable_pipe.hpp:485:    boost::asio::detail::throw_error(ec, "write_some");
/root/boost_1_87_0/boost/asio/basic_writable_pipe.hpp:536:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/basic_writable_pipe.hpp:548:   * pipe.async_write_some(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/bind_allocator.hpp:378: * asynchronous operation's default completion token (or boost::asio::deferred
/root/boost_1_87_0/boost/asio/bind_cancellation_slot.hpp:384: * asynchronous operation's default completion token (or boost::asio::deferred
/root/boost_1_87_0/boost/asio/bind_executor.hpp:411: * asynchronous operation's default completion token (or boost::asi
::deferred
/root/boost_1_87_0/boost/asio/bind_immediate_executor.hpp:383: * asynchronous operation's default completion token (or boost::asio::deferred
/root/boost_1_87_0/boost/asio/buffer.hpp:108: * @code boost::asio::mutable_buffer b1 = ...;
/root/boost_1_87_0/boost/asio/buffer.hpp:163:      boost::asio::detail::function<void()> debug_check)
/root/boost_1_87_0/boost/asio/buffer.hpp:170:  const boost::asio::detail::function<void()>& get_debug_check() const
/root/boost_1_87_0/boost/asio/buffer.hpp:206:  boost::asio::detail::function<void()> debug_check_;
/root/boost_1_87_0/boost/asio/buffer.hpp:221: * @code boost::asio::const_buffer b1 = ...;
/root/boost_1_87_0/boost/asio/buffer.hpp:282:      boost::asio::detail::function<void()> debug_check)
/root/boost_1_87_0/boost/asio/buffer.hpp:289:  const boost::asio::detail::function<void()>& get_debug_check() const
/root/boost_1_87_0/boost/asio/buffer.hpp:325:  boost::asio::detail::function<void()> debug_check_;
/root/boost_1_87_0/boost/asio/buffer.hpp:357:/** @defgroup buffer_sequence_begin boost::asio::buffer_sequence_begin
/root/boost_1_87_0/boost/asio/buffer.hpp:359: * @brief The boost::asio::buffer_sequence_begin function returns an iterator
/root/boost_1_87_0/boost/asio/buffer.hpp:442:/** @defgroup buffer_sequence_end boost::asio::buffer_sequence_end
/root/boost_1_87_0/boost/asio/buffer.hpp:444: * @brief The boost::asio::buffer_sequence_end function returns an iterator/root/boost_1_87_0/boost/asio/buffer.hpp:572: * auto i = boost::asio::buffer_sequence_begin(buffers);
/root/boost_1_87_0/boost/asio/buffer.hpp:573: * auto end = boost::asio::buffer_sequence_end(buffers);
/root/boost_1_87_0/boost/asio/buffer.hpp:589:      boost::asio::buffer_sequence_begin(b),
/root/boost_1_87_0/boost/asio/buffer.hpp:590:      boost::asio::buffer_sequence_end(b));
/root/boost_1_87_0/boost/asio/buffer.hpp:681:/** @defgroup buffer boost::asio::buffer
/root/boost_1_87_0/boost/asio/buffer.hpp:683: * @brief The boost::asio::buffer function is used to create a buffer object to
/root/boost_1_87_0/boost/asio/buffer.hpp:699: * @code sock.send(boost::asio::buffer(data, size)); @endcode
/root/boost_1_87_0/boost/asio/buffer.hpp:701: * In the above example, the return value of boost::asio::buffer meets the
/root/boost_1_87_0/boost/asio/buffer.hpp:711: * size_t bytes_transferred = sock.receive(boost::asio::buffer(d1));
/root/boost_1_87_0/boost/asio/buffer.hpp:714: * bytes_transferred = sock.receive(boost::asio::buffer(d2));
/root/boost_1_87_0/boost/asio/buffer.hpp:717: * bytes_transferred = sock.receive(boost::asio::buffer(d3));
/root/boost_1_87_0/boost/asio/buffer.hpp:720: * bytes_transferred = sock.receive(boost::asio::buffer(d4)); @endcode
/root/boost_1_87_0/boost/asio/buffer.hpp:732: * @code boost::asio::mutable_buffer b1 = ...;
/root/boost_1_87_0/boost/asio/buffer.hpp:736: * boost::asio::const_buffer b2 = ...;
/root/boost_1_87_0/boost/asio/buffer.hpp:759: * vector<unsigned char> data(boost::asio::buffer_size(buffers));
/root/boost_1_87_0/boost/asio/buffer.hpp:760: * boost::asio::buffer_copy(boost::asio::buffer(data), buffers); @endcode
/root/boost_1_87_0/boost/asio/buffer.hpp:772: * For the boost::asio::buffer overloads that accept an argument of type
/root/boost_1_87_0/boost/asio/buffer.hpp:777: * For the boost::asio::buffer overloads that accept an argument of type
/root/boost_1_87_0/boost/asio/buffer.hpp:792: * @code b1 = boost::asio::buffer(a); @endcode
/root/boost_1_87_0/boost/asio/buffer.hpp:795: * optional second argument to the boost::asio::buffer function may be used to
/root/boost_1_87_0/boost/asio/buffer.hpp:798: * @code b2 = boost::asio::buffer(a, 3); @endcode
/root/boost_1_87_0/boost/asio/buffer.hpp:815: * @code b4 = boost::asio::buffer(b1 + 1, 3); @endcode
/root/boost_1_87_0/boost/asio/buffer.hpp:831: *   boost::asio::buffer(d1),
/root/boost_1_87_0/boost/asio/buffer.hpp:832: *   boost::asio::buffer(d2),
/root/boost_1_87_0/boost/asio/buffer.hpp:833: *   boost::asio::buffer(d3) };
/root/boost_1_87_0/boost/asio/buffer.hpp:837: * bufs2.push_back(boost::asio::buffer(d1));
/root/boost_1_87_0/boost/asio/buffer.hpp:838: * bufs2.push_back(boost::asio::buffer(d2));
/root/boost_1_87_0/boost/asio/buffer.hpp:839: * bufs2.push_back(boost::asio::buffer(d3));
/root/boost_1_87_0/boost/asio/buffer.hpp:845: * <tt>boost::asio::buffer_literals</tt>, may be used to create @c const_buffer
/root/boost_1_87_0/boost/asio/buffer.hpp:850: * using namespace boost::asio::buffer_literals;
/root/boost_1_87_0/boost/asio/buffer.hpp:852: * boost::asio::const_buffer b1 = "hello"_buf;
/root/boost_1_87_0/boost/asio/buffer.hpp:853: * boost::asio::const_buffer b2 = 0xdeadbeef_buf;
/root/boost_1_87_0/boost/asio/buffer.hpp:854: * boost::asio::const_buffer b3 = 0x0123456789abcdef0123456789abcdef_buf;
/root/boost_1_87_0/boost/asio/buffer.hpp:855: * boost::asio::const_buffer b4 = 0b1010101011001100_buf; @endcode
/root/boost_1_87_0/boost/asio/buffer.hpp:1757:    return const_buffers_type(boost::asio::buffer(string_, size_));
/root/boost_1_87_0/boost/asio/buffer.hpp:1778:    return mutable_buffers_type(boost::asio::buffer(
/root/boost_1_87_0/boost/asio/buffer.hpp:1779:          boost::asio::buffer(string_, max_size_) + pos, n));
/root/boost_1_87_0/boost/asio/buffer.hpp:1797:    return const_buffers_type(boost::asio::buffer(
/root/boost_1_87_0/boost/asio/buffer.hpp:1798:          boost::asio::buffer(string_, max_size_) + pos, n));
/root/boost_1_87_0/boost/asio/buffer.hpp:1823:      boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/buffer.hpp:1831:    return boost::asio::buffer(boost::asio::buffer(string_) + size_, n);
/root/boost_1_87_0/boost/asio/buffer.hpp:1866:      boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/buffer.hpp:2028:    return const_buffers_type(boost::asio::buffer(vector_, size_));
/root/boost_1_87_0/boost/asio/buffer.hpp:2049:    return mutable_buffers_type(boost::asio::buffer(
/root/boost_1_87_0/boost/asio/buffer.hpp:2050:          boost::asio::buffer(vector_, max_size_) + pos, n));
/root/boost_1_87_0/boost/asio/buffer.hpp:2068:    return const_buffers_type(boost::asio::buffer(
/root/boost_1_87_0/boost/asio/buffer.hpp:2069:          boost::asio::buffer(vector_, max_size_) + pos, n));
/root/boost_1_87_0/boost/asio/buffer.hpp:2094:      boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/buffer.hpp:2102:    return boost::asio::buffer(boost::asio::buffer(vector_) + size_, n);
/root/boost_1_87_0/boost/asio/buffer.hpp:2137:      boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/buffer.hpp:2189:/** @defgroup dynamic_buffer boost::asio::dynamic_buffer
/root/boost_1_87_0/boost/asio/buffer.hpp:2191: * @brief The boost::asio::dynamic_buffer function is used to create a
/root/boost_1_87_0/boost/asio/buffer.hpp:2249:/** @defgroup buffer_copy boost::asio::buffer_copy
/root/boost_1_87_0/boost/asio/buffer.hpp:2251: * @brief The boost::asio::buffer_copy function is used to copy bytes from a
/root/boost_1_87_0/boost/asio/buffer.hpp:2306:      boost::asio::buffer(*source_begin, max_bytes_to_copy));
/root/boost_1_87_0/boost/asio/buffer.hpp:2320:        boost::asio::buffer(*target_begin, max_bytes_to_copy));
/root/boost_1_87_0/boost/asio/buffer.hpp:2343:        boost::asio::buffer(*source_begin, max_bytes_to_copy));
/root/boost_1_87_0/boost/asio/buffer.hpp:2423:        target_buffer, boost::asio::buffer(source_buffer,
/root/boost_1_87_0/boost/asio/buffer.hpp:2475:      boost::asio::buffer_sequence_begin(target),
/root/boost_1_87_0/boost/asio/buffer.hpp:2476:      boost::asio::buffer_sequence_end(target),
/root/boost_1_87_0/boost/asio/buffer.hpp:2477:      boost::asio::buffer_sequence_begin(source),
/root/boost_1_87_0/boost/asio/buffer.hpp:2478:      boost::asio::buffer_sequence_end(source));
/root/boost_1_87_0/boost/asio/buffer.hpp:2513:      boost::asio::buffer_sequence_begin(target),
/root/boost_1_87_0/boost/asio/buffer.hpp:2514:      boost::asio::buffer_sequence_end(target),
/root/boost_1_87_0/boost/asio/buffer.hpp:2515:      boost::asio::buffer_sequence_begin(source),
/root/boost_1_87_0/boost/asio/buffer.hpp:2516:      boost::asio::buffer_sequence_end(source), max_bytes_to_copy);
/root/boost_1_87_0/boost/asio/buffer.hpp:2538:  : boost::asio::detail::is_buffer_sequence<T, mutable_buffer>
/root/boost_1_87_0/boost/asio/buffer.hpp:2550:  : boost::asio::detail::is_buffer_sequence<T, const_buffer>
/root/boost_1_87_0/boost/asio/buffer.hpp:2563:  : boost::asio::detail::is_dynamic_buffer_v1<T>
/root/boost_1_87_0/boost/asio/buffer.hpp:2576:  : boost::asio::detail::is_dynamic_buffer_v2<T>
/root/boost_1_87_0/boost/asio/buffer.hpp:2593:  : boost::asio::is_dynamic_buffer_v2<T>
/root/boost_1_87_0/boost/asio/buffer.hpp:2595:  : boost::asio::is_dynamic_buffer_v1<T>
/root/boost_1_87_0/boost/asio/buffer_registration.hpp:92:        boost::asio::buffer_sequence_begin(buffer_sequence_),
/root/boost_1_87_0/boost/asio/buffer_registration.hpp:93:        boost::asio::buffer_sequence_end(buffer_sequence_));
/root/boost_1_87_0/boost/asio/buffer_registration.hpp:110:        boost::asio::buffer_sequence_begin(buffer_sequence_),
/root/boost_1_87_0/boost/asio/buffer_registration.hpp:111:        boost::asio::buffer_sequence_end(buffer_sequence_));
/root/boost_1_87_0/boost/asio/buffer_registration.hpp:203:    return boost::asio::query(t, execution::context);
/root/boost_1_87_0/boost/asio/buffered_read_stream.hpp:246:    std::size_t bytes_copied = boost::asio::buffer_copy(
/root/boost_1_87_0/boost/asio/buffered_read_stream.hpp:258:    return boost::asio::buffer_copy(buffers, storage_.data(), storage_.size());
/root/boost_1_87_0/boost/asio/buffers_iterator.hpp:154:    new_iter.begin_ = boost::asio::buffer_sequence_begin(buffers);
/root/boost_1_87_0/boost/asio/buffers_iterator.hpp:155:    new_iter.current_ = boost::asio::buffer_sequence_begin(buffers);
/root/boost_1_87_0/boost/asio/buffers_iterator.hpp:156:    new_iter.end_ = boost::asio::buffer_sequence_end(buffers);
/root/boost_1_87_0/boost/asio/buffers_iterator.hpp:174:    new_iter.begin_ = boost::asio::buffer_sequence_begin(buffers);
/root/boost_1_87_0/boost/asio/buffers_iterator.hpp:175:    new_iter.current_ = boost::asio::buffer_sequence_begin(buffers);
/root/boost_1_87_0/boost/asio/buffers_iterator.hpp:176:    new_iter.end_ = boost::asio::buffer_sequence_end(buffers);
/root/boost_1_87_0/boost/asio/cancel_after.hpp:37:    typename WaitTraits = boost::asio::wait_traits<Clock>>
/root/boost_1_87_0/boost/asio/cancel_after.hpp:64:    typename WaitTraits = boost::asio::wait_traits<Clock>,
/root/boost_1_87_0/boost/asio/cancel_after.hpp:93: * asynchronous operation's default completion token (or boost::asio::deferred
/root/boost_1_87_0/boost/asio/cancel_after.hpp:96:template <typename Clock, typename WaitTraits = boost::asio::wait_traits<Clock>>
/root/boost_1_87_0/boost/asio/cancel_after.hpp:129: * asynchronous operation's default completion token (or boost::asio::deferred
/root/boost_1_87_0/boost/asio/cancel_after.hpp:132:template <typename Clock, typename WaitTraits = boost::asio::wait_traits<Clock>,
/root/boost_1_87_0/boost/asio/cancel_at.hpp:36:    typename WaitTraits = boost::asio::wait_traits<Clock>>
/root/boost_1_87_0/boost/asio/cancel_at.hpp:62:    typename WaitTraits = boost::asio::wait_traits<Clock>,
/root/boost_1_87_0/boost/asio/cancel_at.hpp:91: * asynchronous operation's default completion token (or boost::asio::deferred
/root/boost_1_87_0/boost/asio/cancel_at.hpp:94:template <typename Clock, typename WaitTraits = boost::asio::wait_traits<Clock>>
/root/boost_1_87_0/boost/asio/cancel_at.hpp:127: * asynchronous operation's default completion token (or boost::asio::deferred
/root/boost_1_87_0/boost/asio/cancel_at.hpp:130:template <typename Clock, typename WaitTraits = boost::asio::wait_traits<Clock>,
/root/boost_1_87_0/boost/asio/cancellation_signal.hpp:133:   * @code void handler(boost::asio::cancellation_type_t); @endcode
/root/boost_1_87_0/boost/asio/cancellation_signal.hpp:166:   * @code void handler(boost::asio::cancellation_type_t); @endcode
/root/boost_1_87_0/boost/asio/cancellation_state.hpp:112:   * @code boost::asio::cancellation_type_t filter(
/root/boost_1_87_0/boost/asio/cancellation_state.hpp:113:   *     boost::asio::cancellation_type_t); @endcode
/root/boost_1_87_0/boost/asio/cancellation_state.hpp:117:   * @li boost::asio::disable_cancellation
/root/boost_1_87_0/boost/asio/cancellation_state.hpp:118:   * @li boost::asio::enable_terminal_cancellation
/root/boost_1_87_0/boost/asio/cancellation_state.hpp:119:   * @li boost::asio::enable_partial_cancellation
/root/boost_1_87_0/boost/asio/cancellation_state.hpp:120:   * @li boost::asio::enable_total_cancellation
/root/boost_1_87_0/boost/asio/cancellation_state.hpp:138:   * @code boost::asio::cancellation_type_t in_filter(
/root/boost_1_87_0/boost/asio/cancellation_state.hpp:139:   *     boost::asio::cancellation_type_t); @endcode
/root/boost_1_87_0/boost/asio/cancellation_state.hpp:144:   * @code boost::asio::cancellation_type_t out_filter(
/root/boost_1_87_0/boost/asio/cancellation_state.hpp:145:   *     boost::asio::cancellation_type_t); @endcode
/root/boost_1_87_0/boost/asio/cancellation_state.hpp:149:   * @li boost::asio::disable_cancellation
/root/boost_1_87_0/boost/asio/cancellation_state.hpp:150:   * @li boost::asio::enable_terminal_cancellation
/root/boost_1_87_0/boost/asio/cancellation_state.hpp:151:   * @li boost::asio::enable_partial_cancellation
/root/boost_1_87_0/boost/asio/cancellation_state.hpp:152:   * @li boost::asio::enable_total_cancellation
/root/boost_1_87_0/boost/asio/co_composed.hpp:63:using boost::asio::detail::composed_io_executors;
/root/boost_1_87_0/boost/asio/co_composed.hpp:64:using boost::asio::detail::composed_work;
/root/boost_1_87_0/boost/asio/co_composed.hpp:65:using boost::asio::detail::composed_work_guard;
/root/boost_1_87_0/boost/asio/co_composed.hpp:66:using boost::asio::detail::get_composed_io_executor;
/root/boost_1_87_0/boost/asio/co_composed.hpp:67:using boost::asio::detail::make_composed_io_executors;
/root/boost_1_87_0/boost/asio/co_composed.hpp:68:using boost::asio::detail::recycling_allocator;
/root/boost_1_87_0/boost/asio/co_composed.hpp:69:using boost::asio::detail::throw_error;
/root/boost_1_87_0/boost/asio/co_composed.hpp:216:            boost::system::error_code(boost::asio::error::operation_aborted),
/root/boost_1_87_0/boost/asio/co_composed.hpp:255:                boost::asio::error::operation_aborted, "co_await")),
/root/boost_1_87_0/boost/asio/co_composed.hpp:366:      throw_error(boost::asio::error::operation_aborted, "co_await");
/root/boost_1_87_0/boost/asio/co_composed.hpp:853:      boost::asio::detail::source_location location
/root/boost_1_87_0/boost/asio/co_composed.hpp:854:        = boost::asio::detail::source_location::current(),
/root/boost_1_87_0/boost/asio/co_composed.hpp:865:          , const boost::asio::detail::source_location& location
/root/boost_1_87_0/boost/asio/co_composed.hpp:919:      boost::asio::detail::source_location location_;
/root/boost_1_87_0/boost/asio/co_composed.hpp:1164:    boost::asio::detail::co_composed_state<Executors, Handler, Return>, Args...>
/root/boost_1_87_0/boost/asio/co_composed.hpp:1167:    boost::asio::detail::co_composed_promise<Executors, Handler, Return>;
/root/boost_1_87_0/boost/asio/co_composed.hpp:1173:    boost::asio::detail::co_composed_state<Executors, Handler, Return>, Args...>
/root/boost_1_87_0/boost/asio/co_composed.hpp:1176:    boost::asio::detail::co_composed_promise<Executors, Handler, Return>;
/root/boost_1_87_0/boost/asio/co_composed.hpp:1182:    boost::asio::detail::co_composed_state<Executors, Handler, Return>, Args...>
/root/boost_1_87_0/boost/asio/co_composed.hpp:1185:    boost::asio::detail::co_composed_promise<Executors, Handler, Return>;
/root/boost_1_87_0/boost/asio/co_composed.hpp:1231: *   return boost::asio::async_initiate<
/root/boost_1_87_0/boost/asio/co_composed.hpp:1233: *       boost::asio::co_composed(
/root/boost_1_87_0/boost/asio/co_composed.hpp:1237: *             boost::asio::enable_terminal_cancellation());
/root/boost_1_87_0/boost/asio/co_composed.hpp:1244: *                 boost::asio::buffer(data));
/root/boost_1_87_0/boost/asio/co_composed.hpp:1251: *                 make_error_code(boost::asio::error::operation_aborted));
/root/boost_1_87_0/boost/asio/co_composed.hpp:1254: *               co_await boost::asio::async_write(socket,
/root/boost_1_87_0/boost/asio/co_composed.hpp:1255: *                 boost::asio::buffer(data, n1));
/root/boost_1_87_0/boost/asio/co_composed.hpp:1273: *   return boost::asio::async_initiate<
/root/boost_1_87_0/boost/asio/co_composed.hpp:1275: *       boost::asio::co_composed<
/root/boost_1_87_0/boost/asio/co_composed.hpp:1283: *                 boost::asio::enable_terminal_cancellation());
/root/boost_1_87_0/boost/asio/co_composed.hpp:1289: *                     boost::asio::buffer(data));
/root/boost_1_87_0/boost/asio/co_composed.hpp:1291: *                 co_await boost::asio::async_write(socket,
/root/boost_1_87_0/boost/asio/co_composed.hpp:1292: *                     boost::asio::buffer(data, n));
/root/boost_1_87_0/boost/asio/co_spawn.hpp:55: * @param a The boost::asio::awaitable object that is the result of calling the
/root/boost_1_87_0/boost/asio/co_spawn.hpp:68: * boost::asio::awaitable<std::size_t> echo(tcp::socket socket)
/root/boost_1_87_0/boost/asio/co_spawn.hpp:78: *           boost::asio::buffer(data), boost::asio::use_awaitable);
/root/boost_1_87_0/boost/asio/co_spawn.hpp:80: *       co_await boost::asio::async_write(socket,
/root/boost_1_87_0/boost/asio/co_spawn.hpp:81: *           boost::asio::buffer(data, n), boost::asio::use_awaitable);
/root/boost_1_87_0/boost/asio/co_spawn.hpp:95: * boost::asio::co_spawn(my_executor,
/root/boost_1_87_0/boost/asio/co_spawn.hpp:106: * cancellation state, call boost::asio::this_coro::reset_cancellation_state.
/root/boost_1_87_0/boost/asio/co_spawn.hpp:127: * @param a The boost::asio::awaitable object that is the result of calling the
/root/boost_1_87_0/boost/asio/co_spawn.hpp:140: * boost::asio::awaitable<void> echo(tcp::socket socket)
/root/boost_1_87_0/boost/asio/co_spawn.hpp:148: *           boost::asio::buffer(data), boost::asio::use_awaitable);
/root/boost_1_87_0/boost/asio/co_spawn.hpp:150: *       co_await boost::asio::async_write(socket,
/root/boost_1_87_0/boost/asio/co_spawn.hpp:151: *           boost::asio::buffer(data, n), boost::asio::use_awaitable);
/root/boost_1_87_0/boost/asio/co_spawn.hpp:162: * boost::asio::co_spawn(my_executor,
/root/boost_1_87_0/boost/asio/co_spawn.hpp:164: *   boost::asio::detached);
/root/boost_1_87_0/boost/asio/co_spawn.hpp:170: * cancellation state, call boost::asio::this_coro::reset_cancellation_state.
/root/boost_1_87_0/boost/asio/co_spawn.hpp:191: * @param a The boost::asio::awaitable object that is the result of calling the
/root/boost_1_87_0/boost/asio/co_spawn.hpp:204: * boost::asio::awaitable<std::size_t> echo(tcp::socket socket)
/root/boost_1_87_0/boost/asio/co_spawn.hpp:214: *           boost::asio::buffer(data), boost::asio::use_awaitable);
/root/boost_1_87_0/boost/asio/co_spawn.hpp:216: *       co_await boost::asio::async_write(socket,
/root/boost_1_87_0/boost/asio/co_spawn.hpp:217: *           boost::asio::buffer(data, n), boost::asio::use_awaitable);
/root/boost_1_87_0/boost/asio/co_spawn.hpp:231: * boost::asio::co_spawn(my_io_context,
/root/boost_1_87_0/boost/asio/co_spawn.hpp:242: * cancellation state, call boost::asio::this_coro::reset_cancellation_state.
/root/boost_1_87_0/boost/asio/co_spawn.hpp:266: * @param a The boost::asio::awaitable object that is the result of calling the
/root/boost_1_87_0/boost/asio/co_spawn.hpp:279: * boost::asio::awaitable<void> echo(tcp::socket socket)
/root/boost_1_87_0/boost/asio/co_spawn.hpp:287: *           boost::asio::buffer(data), boost::asio::use_awaitable);
/root/boost_1_87_0/boost/asio/co_spawn.hpp:289: *       co_await boost::asio::async_write(socket,
/root/boost_1_87_0/boost/asio/co_spawn.hpp:290: *           boost::asio::buffer(data, n), boost::asio::use_awaitable);
/root/boost_1_87_0/boost/asio/co_spawn.hpp:301: * boost::asio::co_spawn(my_io_context,
/root/boost_1_87_0/boost/asio/co_spawn.hpp:303: *   boost::asio::detached);
/root/boost_1_87_0/boost/asio/co_spawn.hpp:309: * cancellation state, call boost::asio::this_coro::reset_cancellation_state.
/root/boost_1_87_0/boost/asio/co_spawn.hpp:334: * @c boost::asio::awaitable<R,E> that will be used as the coroutine's entry
/root/boost_1_87_0/boost/asio/co_spawn.hpp:349: * @code boost::asio::awaitable<R, AwaitableExecutor> F() @endcode
/root/boost_1_87_0/boost/asio/co_spawn.hpp:353: * boost::asio::awaitable<std::size_t> echo(tcp::socket socket)
/root/boost_1_87_0/boost/asio/co_spawn.hpp:363: *           boost::asio::buffer(data), boost::asio::use_awaitable);
/root/boost_1_87_0/boost/asio/co_spawn.hpp:365: *       co_await boost::asio::async_write(socket,
/root/boost_1_87_0/boost/asio/co_spawn.hpp:366: *           boost::asio::buffer(data, n), boost::asio::use_awaitable);
/root/boost_1_87_0/boost/asio/co_spawn.hpp:380: * boost::asio::co_spawn(my_executor,
/root/boost_1_87_0/boost/asio/co_spawn.hpp:382: *     -> boost::asio::awaitable<void>
/root/boost_1_87_0/boost/asio/co_spawn.hpp:390: *             boost::asio::buffer(data), boost::asio::use_awaitable);
/root/boost_1_87_0/boost/asio/co_spawn.hpp:392: *         co_await boost::asio::async_write(socket,
/root/boost_1_87_0/boost/asio/co_spawn.hpp:393: *             boost::asio::buffer(data, n), boost::asio::use_awaitable);/root/boost_1_87_0/boost/asio/co_spawn.hpp:400: *   }, boost::asio::detached);
/root/boost_1_87_0/boost/asio/co_spawn.hpp:406: * cancellation state, call boost::asio::this_coro::reset_cancellation_state.
/root/boost_1_87_0/boost/asio/co_spawn.hpp:427: * @c boost::asio::awaitable<R,E> that will be used as the coroutine's entry
/root/boost_1_87_0/boost/asio/co_spawn.hpp:442: * @code boost::asio::awaitable<R, AwaitableExecutor> F() @endcode
/root/boost_1_87_0/boost/asio/co_spawn.hpp:446: * boost::asio::awaitable<std::size_t> echo(tcp::socket socket)
/root/boost_1_87_0/boost/asio/co_spawn.hpp:456: *           boost::asio::buffer(data), boost::asio::use_awaitable);
/root/boost_1_87_0/boost/asio/co_spawn.hpp:458: *       co_await boost::asio::async_write(socket,
/root/boost_1_87_0/boost/asio/co_spawn.hpp:459: *           boost::asio::buffer(data, n), boost::asio::use_awaitable);
/root/boost_1_87_0/boost/asio/co_spawn.hpp:473: * boost::asio::co_spawn(my_io_context,
/root/boost_1_87_0/boost/asio/co_spawn.hpp:475: *     -> boost::asio::awaitable<void>
/root/boost_1_87_0/boost/asio/co_spawn.hpp:483: *             boost::asio::buffer(data), boost::asio::use_awaitable);
/root/boost_1_87_0/boost/asio/co_spawn.hpp:485: *         co_await boost::asio::async_write(socket,
/root/boost_1_87_0/boost/asio/co_spawn.hpp:486: *             boost::asio::buffer(data, n), boost::asio::use_awaitable);/root/boost_1_87_0/boost/asio/co_spawn.hpp:493: *   }, boost::asio::detached);
/root/boost_1_87_0/boost/asio/co_spawn.hpp:499: * cancellation state, call boost::asio::this_coro::reset_cancellation_state.
/root/boost_1_87_0/boost/asio/completion_condition.hpp:172: * std::size_t n = boost::asio::read(
/root/boost_1_87_0/boost/asio/completion_condition.hpp:173: *     sock, boost::asio::buffer(buf),
/root/boost_1_87_0/boost/asio/completion_condition.hpp:174: *     boost::asio::transfer_all(), ec);
/root/boost_1_87_0/boost/asio/completion_condition.hpp:206: * std::size_t n = boost::asio::read(
/root/boost_1_87_0/boost/asio/completion_condition.hpp:207: *     sock, boost::asio::buffer(buf),
/root/boost_1_87_0/boost/asio/completion_condition.hpp:208: *     boost::asio::transfer_at_least(64), ec);
/root/boost_1_87_0/boost/asio/completion_condition.hpp:240: * std::size_t n = boost::asio::read(
/root/boost_1_87_0/boost/asio/completion_condition.hpp:241: *     sock, boost::asio::buffer(buf),
/root/boost_1_87_0/boost/asio/completion_condition.hpp:242: *     boost::asio::transfer_exactly(64), ec);
/root/boost_1_87_0/boost/asio/compose.hpp:56: *   boost::asio::mutable_buffer buffer_;
/root/boost_1_87_0/boost/asio/compose.hpp:79: *         boost::asio::async_write(socket_, buffer_,
/root/boost_1_87_0/boost/asio/compose.hpp:80: *             boost::asio::transfer_exactly(n),
/root/boost_1_87_0/boost/asio/compose.hpp:93: *     boost::asio::mutable_buffer buffer,
/root/boost_1_87_0/boost/asio/compose.hpp:96: *     boost::asio::async_compose<CompletionToken,
/root/boost_1_87_0/boost/asio/compose.hpp:101: *   return boost::asio::async_compose<CompletionToken,
/root/boost_1_87_0/boost/asio/composed.hpp:335: *   boost::asio::mutable_buffer buffer_;
/root/boost_1_87_0/boost/asio/composed.hpp:358: *         boost::asio::async_write(socket_, buffer_,
/root/boost_1_87_0/boost/asio/composed.hpp:359: *             boost::asio::transfer_exactly(n),
/root/boost_1_87_0/boost/asio/composed.hpp:372: *     boost::asio::mutable_buffer buffer,
/root/boost_1_87_0/boost/asio/composed.hpp:375: *     boost::asio::async_initiate<CompletionToken,
/root/boost_1_87_0/boost/asio/composed.hpp:377: *         boost::asio::composed(
/root/boost_1_87_0/boost/asio/composed.hpp:382: *   return boost::asio::async_initiate<CompletionToken,
/root/boost_1_87_0/boost/asio/composed.hpp:384: *       boost::asio::composed(
/root/boost_1_87_0/boost/asio/config.hpp:90: * @code boost::asio::io_context my_io_context{
/root/boost_1_87_0/boost/asio/config.hpp:91: *     boost::asio::config_from_concurrency_hint{1}}; @endcode
/root/boost_1_87_0/boost/asio/config.hpp:126: * @code boost::asio::io_context my_io_context{
/root/boost_1_87_0/boost/asio/config.hpp:127: *     boost::asio::config_from_string{
/root/boost_1_87_0/boost/asio/config.hpp:163: * @code boost::asio::io_context my_io_context{
/root/boost_1_87_0/boost/asio/config.hpp:164: *     boost::asio::config_from_env{"my_app"}}; @endcode
/root/boost_1_87_0/boost/asio/connect.hpp:127: * @defgroup connect boost::asio::connect
/root/boost_1_87_0/boost/asio/connect.hpp:149: * empty, the associated @c error_code is boost::asio::error::not_found.
/root/boost_1_87_0/boost/asio/connect.hpp:156: * boost::asio::connect(s, r.resolve(q)); @endcode
/root/boost_1_87_0/boost/asio/connect.hpp:178: * empty, set to boost::asio::error::not_found. Otherwise, contains the error
/root/boost_1_87_0/boost/asio/connect.hpp:189: * boost::asio::connect(s, r.resolve(q), ec);
/root/boost_1_87_0/boost/asio/connect.hpp:219: * empty, the associated @c error_code is boost::asio::error::not_found.
/root/boost_1_87_0/boost/asio/connect.hpp:227: * boost::asio::connect(s, e.begin(), e.end()); @endcode
/root/boost_1_87_0/boost/asio/connect.hpp:248: * empty, set to boost::asio::error::not_found. Otherwise, contains the error
/root/boost_1_87_0/boost/asio/connect.hpp:260: * boost::asio::connect(s, e.begin(), e.end(), ec);
/root/boost_1_87_0/boost/asio/connect.hpp:296: * empty, the associated @c error_code is boost::asio::error::not_found.
/root/boost_1_87_0/boost/asio/connect.hpp:313: * It would be used with the boost::asio::connect function as follows:
/root/boost_1_87_0/boost/asio/connect.hpp:317: * tcp::endpoint e = boost::asio::connect(s,
/root/boost_1_87_0/boost/asio/connect.hpp:357: * empty, set to boost::asio::error::not_found. Otherwise, contains the error
/root/boost_1_87_0/boost/asio/connect.hpp:377: * It would be used with the boost::asio::connect function as follows:
/root/boost_1_87_0/boost/asio/connect.hpp:382: * tcp::endpoint e = boost::asio::connect(s,
/root/boost_1_87_0/boost/asio/connect.hpp:434: * empty, the associated @c error_code is boost::asio::error::not_found.
/root/boost_1_87_0/boost/asio/connect.hpp:451: * It would be used with the boost::asio::connect function as follows:
/root/boost_1_87_0/boost/asio/connect.hpp:456: * tcp::resolver::results_type::iterator i = boost::asio::connect(
/root/boost_1_87_0/boost/asio/connect.hpp:494: * empty, set to boost::asio::error::not_found. Otherwise, contains the error
/root/boost_1_87_0/boost/asio/connect.hpp:514: * It would be used with the boost::asio::connect function as follows:
/root/boost_1_87_0/boost/asio/connect.hpp:520: * tcp::resolver::results_type::iterator i = boost::asio::connect(
/root/boost_1_87_0/boost/asio/connect.hpp:543: * @defgroup async_connect boost::asio::async_connect
/root/boost_1_87_0/boost/asio/connect.hpp:571: *   // boost::asio::error::not_found. Otherwise, contains the
/root/boost_1_87_0/boost/asio/connect.hpp:582: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/connect.hpp:604: *     boost::asio::async_connect(s, results, connect_handler);
/root/boost_1_87_0/boost/asio/connect.hpp:619: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/connect.hpp:676: *   // boost::asio::error::not_found. Otherwise, contains the
/root/boost_1_87_0/boost/asio/connect.hpp:687: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/connect.hpp:695: * boost::asio::async_connect(s,
/root/boost_1_87_0/boost/asio/connect.hpp:710: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/connect.hpp:771: *   // boost::asio::error::not_found. Otherwise, contains the
/root/boost_1_87_0/boost/asio/connect.hpp:782: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/connect.hpp:801: * It would be used with the boost::asio::connect function as follows:
/root/boost_1_87_0/boost/asio/connect.hpp:818: *     boost::asio::async_connect(s, results,
/root/boost_1_87_0/boost/asio/connect.hpp:842: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/connect.hpp:911: *   // boost::asio::error::not_found. Otherwise, contains the
/root/boost_1_87_0/boost/asio/connect.hpp:922: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/connect.hpp:941: * It would be used with the boost::asio::connect function as follows:
/root/boost_1_87_0/boost/asio/connect.hpp:959: *     boost::asio::async_connect(s, i, end,
/root/boost_1_87_0/boost/asio/connect.hpp:983: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/coroutine.hpp:231: * execution using something like boost::asio::post().
/root/boost_1_87_0/boost/asio/coroutine.hpp:284:  switch (::boost::asio::detail::coroutine_ref _coro_value = c) \
/root/boost_1_87_0/boost/asio/default_completion_token.hpp:58: * boost::asio::deferred_t.
/root/boost_1_87_0/boost/asio/default_completion_token.hpp:65:  /// is boost::asio::deferred_t.
/root/boost_1_87_0/boost/asio/default_completion_token.hpp:80:  = typename ::boost::asio::default_completion_token<e>::type
/root/boost_1_87_0/boost/asio/default_completion_token.hpp:82:  = typename ::boost::asio::default_completion_token<e>::type()
/root/boost_1_87_0/boost/asio/deferred.hpp:601: * or by explicitly passing the special value @c boost::asio::deferred:
/root/boost_1_87_0/boost/asio/deferred.hpp:605: *       boost::asio::deferred); @endcode
/root/boost_1_87_0/boost/asio/deferred.hpp:710: * See the documentation for boost::asio::deferred_t for a usage example./root/boost_1_87_0/boost/asio/detached.hpp:34: * @c boost::asio::detached. For example:
/root/boost_1_87_0/boost/asio/detached.hpp:36: * @code my_socket.async_send(my_buffer, boost::asio::detached);
/root/boost_1_87_0/boost/asio/detached.hpp:96: * See the documentation for boost::asio::detached_t for a usage example.
/root/boost_1_87_0/boost/asio/detail/base_from_cancellation_state.hpp:48:        boost::asio::get_associated_cancellation_slot(handler))
/root/boost_1_87_0/boost/asio/detail/base_from_cancellation_state.hpp:55:        boost::asio::get_associated_cancellation_slot(handler), filter, filter)
/root/boost_1_87_0/boost/asio/detail/base_from_cancellation_state.hpp:64:        boost::asio::get_associated_cancellation_slot(handler),
/root/boost_1_87_0/boost/asio/detail/base_from_cancellation_state.hpp:73:        boost::asio::get_associated_cancellation_slot(handler));
/root/boost_1_87_0/boost/asio/detail/base_from_cancellation_state.hpp:80:        boost::asio::get_associated_cancellation_slot(handler), filter, filter);
/root/boost_1_87_0/boost/asio/detail/base_from_cancellation_state.hpp:89:        boost::asio::get_associated_cancellation_slot(handler),
/root/boost_1_87_0/boost/asio/detail/blocking_executor_op.hpp:42:    boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/blocking_executor_op.hpp:52:      boost::asio::detail::mutex::scoped_lock lock(op_->mutex_);
/root/boost_1_87_0/boost/asio/detail/blocking_executor_op.hpp:61:  boost::asio::detail::mutex mutex_;
/root/boost_1_87_0/boost/asio/detail/blocking_executor_op.hpp:62:  boost::asio::detail::event event_;
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:42:      const boost::asio::mutable_buffer& buffer);
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:46:      const boost::asio::const_buffer& buffer);
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:56:      const boost::asio::mutable_buffer& buffer)
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:63:      const boost::asio::const_buffer& buffer)
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:88:      const boost::asio::mutable_buffer& buffer)
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:95:      const boost::asio::const_buffer& buffer)
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:116:        boost::asio::buffer_sequence_begin(buffer_sequence),
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:117:        boost::asio::buffer_sequence_end(buffer_sequence));
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:148:        boost::asio::buffer_sequence_begin(buffer_sequence),
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:149:        boost::asio::buffer_sequence_end(buffer_sequence));
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:155:        boost::asio::buffer_sequence_begin(buffer_sequence),
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:156:        boost::asio::buffer_sequence_end(buffer_sequence));
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:162:        boost::asio::buffer_sequence_begin(buffer_sequence),
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:163:        boost::asio::buffer_sequence_end(buffer_sequence));
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:169:      const boost::asio::mutable_buffer& storage)
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:172:        boost::asio::buffer_sequence_begin(buffer_sequence),
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:173:        boost::asio::buffer_sequence_end(buffer_sequence), storage);
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:226:      const boost::asio::mutable_buffer& storage)
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:228:    boost::asio::mutable_buffer unused_storage = storage;
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:243:      unused_storage += boost::asio::buffer_copy(unused_storage, buffer);
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:254:class buffer_sequence_adapter<Buffer, boost::asio::mutable_buffer>
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:262:      const boost::asio::mutable_buffer& buffer_sequence)
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:293:  static bool all_empty(const boost::asio::mutable_buffer& buffer_sequence)
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:298:  static void validate(const boost::asio::mutable_buffer& buffer_sequence)
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:303:  static Buffer first(const boost::asio::mutable_buffer& buffer_sequence)
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:310:  static Buffer linearise(const boost::asio::mutable_buffer& buffer_sequence,
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:322:class buffer_sequence_adapter<Buffer, boost::asio::const_buffer>
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:330:      const boost::asio::const_buffer& buffer_sequence)
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:361:  static bool all_empty(const boost::asio::const_buffer& buffer_sequence)
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:366:  static void validate(const boost::asio::const_buffer& buffer_sequence)
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:371:  static Buffer first(const boost::asio::const_buffer& buffer_sequence)
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:378:  static Buffer linearise(const boost::asio::const_buffer& buffer_sequence,
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:390:class buffer_sequence_adapter<Buffer, boost::asio::mutable_registered_buffer>
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:398:      const boost::asio::mutable_registered_buffer& buffer_sequence)
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:431:      const boost::asio::mutable_registered_buffer& buffer_sequence)
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:437:      const boost::asio::mutable_registered_buffer& buffer_sequence)
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:443:      const boost::asio::mutable_registered_buffer& buffer_sequence)
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:451:      const boost::asio::mutable_registered_buffer& buffer_sequence,
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:464:class buffer_sequence_adapter<Buffer, boost::asio::const_registered_buffer>
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:472:      const boost::asio::const_registered_buffer& buffer_sequence)
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:505:      const boost::asio::const_registered_buffer& buffer_sequence)
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:511:      const boost::asio::const_registered_buffer& buffer_sequence)
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:517:      const boost::asio::const_registered_buffer& buffer_sequence)
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:525:      const boost::asio::const_registered_buffer& buffer_sequence,
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:598:      const boost::asio::mutable_buffer& storage)
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:605:        boost::asio::buffer_copy(storage, buffer_sequence));
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:674:      const boost::asio::mutable_buffer& storage)
/root/boost_1_87_0/boost/asio/detail/buffer_sequence_adapter.hpp:681:        boost::asio::buffer_copy(storage, buffer_sequence));
/root/boost_1_87_0/boost/asio/detail/buffered_stream_storage.hpp:58:    return boost::asio::buffer(buffer_) + begin_offset_;
/root/boost_1_87_0/boost/asio/detail/buffered_stream_storage.hpp:64:    return boost::asio::buffer(buffer_) + begin_offset_;
/root/boost_1_87_0/boost/asio/detail/completion_handler.hpp:50:    ptr p = { boost::asio::detail::addressof(h->handler_), h, h };
/root/boost_1_87_0/boost/asio/detail/completion_handler.hpp:66:    p.h = boost::asio::detail::addressof(handler);
/root/boost_1_87_0/boost/asio/detail/completion_message.hpp:108:    this->do_receive(h, boost::asio::detail::index_sequence_for<Args...>());
/root/boost_1_87_0/boost/asio/detail/completion_message.hpp:113:  void do_receive(Handler& h, boost::asio::detail::index_sequence<I...>)
/root/boost_1_87_0/boost/asio/detail/composed_work.hpp:41:    : executor_(boost::asio::prefer(ex, execution::outstanding_work.tracked))
/root/boost_1_87_0/boost/asio/detail/conditionally_enabled_event.hpp:113:  boost::asio::detail::event event_;
/root/boost_1_87_0/boost/asio/detail/conditionally_enabled_mutex.hpp:104:    boost::asio::detail::mutex& mutex()
/root/boost_1_87_0/boost/asio/detail/conditionally_enabled_mutex.hpp:161:  boost::asio::detail::mutex mutex_;
/root/boost_1_87_0/boost/asio/detail/consuming_buffers.hpp:82:    using boost::asio::buffer_size;
/root/boost_1_87_0/boost/asio/detail/consuming_buffers.hpp:97:    Buffer_Iterator next = boost::asio::buffer_sequence_begin(buffers_);
/root/boost_1_87_0/boost/asio/detail/consuming_buffers.hpp:98:    Buffer_Iterator end = boost::asio::buffer_sequence_end(buffers_);
/root/boost_1_87_0/boost/asio/detail/consuming_buffers.hpp:105:      result.elems[result.count] = boost::asio::buffer(next_buf, max_size);
/root/boost_1_87_0/boost/asio/detail/consuming_buffers.hpp:121:    Buffer_Iterator next = boost::asio::buffer_sequence_begin(buffers_);
/root/boost_1_87_0/boost/asio/detail/consuming_buffers.hpp:122:    Buffer_Iterator end = boost::asio::buffer_sequence_end(buffers_);
/root/boost_1_87_0/boost/asio/detail/consuming_buffers.hpp:179:    return boost::asio::buffer(buffer_ + total_consumed_, max_size);
/root/boost_1_87_0/boost/asio/detail/consuming_buffers.hpp:293:    result[0] = boost::asio::buffer(result[0] + total_consumed_, max_size);
/root/boost_1_87_0/boost/asio/detail/consuming_buffers.hpp:294:    result[1] = boost::asio::buffer(
/root/boost_1_87_0/boost/asio/detail/consuming_buffers.hpp:343:    result[0] = boost::asio::buffer(result[0] + total_consumed_, max_size);
/root/boost_1_87_0/boost/asio/detail/consuming_buffers.hpp:344:    result[1] = boost::asio::buffer(
/root/boost_1_87_0/boost/asio/detail/consuming_buffers.hpp:372:  : public boost::asio::null_buffers
/root/boost_1_87_0/boost/asio/detail/deadline_timer_service.hpp:61:    : private boost::asio::detail::noncopyable
/root/boost_1_87_0/boost/asio/detail/deadline_timer_service.hpp:72:      scheduler_(boost::asio::use_service<timer_scheduler>(context))
/root/boost_1_87_0/boost/asio/detail/deadline_timer_service.hpp:256:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/deadline_timer_service.hpp:260:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/descriptor_ops.hpp:60:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/descriptor_ops.hpp:65:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/descriptor_read_op.hpp:56:    typedef buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/descriptor_read_op.hpp:113:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/descriptor_read_op.hpp:132:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/descriptor_read_op.hpp:150:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/descriptor_read_op.hpp:169:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/descriptor_write_op.hpp:55:    typedef buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/descriptor_write_op.hpp:112:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/descriptor_write_op.hpp:131:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/descriptor_write_op.hpp:149:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/descriptor_write_op.hpp:168:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/dev_poll_reactor.hpp:59:  BOOST_ASIO_DECL dev_poll_reactor(boost::asio::execution_context& ctx);
/root/boost_1_87_0/boost/asio/detail/dev_poll_reactor.hpp:69:      boost::asio::execution_context::fork_event fork_ev);
/root/boost_1_87_0/boost/asio/detail/dev_poll_reactor.hpp:212:  boost::asio::detail::mutex mutex_;
/root/boost_1_87_0/boost/asio/detail/epoll_reactor.hpp:88:  BOOST_ASIO_DECL epoll_reactor(boost::asio::execution_context& ctx);
/root/boost_1_87_0/boost/asio/detail/epoll_reactor.hpp:98:      boost::asio::execution_context::fork_event fork_ev);
/root/boost_1_87_0/boost/asio/detail/handler_alloc_helpers.hpp:37:      typedef typename ::boost::asio::associated_allocator< \
/root/boost_1_87_0/boost/asio/detail/handler_alloc_helpers.hpp:39:      typedef typename ::boost::asio::detail::get_recycling_allocator< \
/root/boost_1_87_0/boost/asio/detail/handler_alloc_helpers.hpp:42:            ::boost::asio::detail::get_recycling_allocator< \
/root/boost_1_87_0/boost/asio/detail/handler_alloc_helpers.hpp:44:                ::boost::asio::get_associated_allocator(handler))); \
/root/boost_1_87_0/boost/asio/detail/handler_alloc_helpers.hpp:56:        typedef typename ::boost::asio::associated_allocator< \
/root/boost_1_87_0/boost/asio/detail/handler_alloc_helpers.hpp:58:        typedef typename ::boost::asio::detail::get_recycling_allocator< \
/root/boost_1_87_0/boost/asio/detail/handler_alloc_helpers.hpp:61:              ::boost::asio::detail::get_recycling_allocator< \
/root/boost_1_87_0/boost/asio/detail/handler_alloc_helpers.hpp:63:                  ::boost::asio::get_associated_allocator(*h))); \
/root/boost_1_87_0/boost/asio/detail/handler_alloc_helpers.hpp:73:      ::boost::asio::detail::thread_info_base::default_tag, op ) \
/root/boost_1_87_0/boost/asio/detail/handler_alloc_helpers.hpp:88:      typedef typename ::boost::asio::detail::get_recycling_allocator< \
/root/boost_1_87_0/boost/asio/detail/handler_alloc_helpers.hpp:91:            ::boost::asio::detail::get_recycling_allocator< \
/root/boost_1_87_0/boost/asio/detail/handler_alloc_helpers.hpp:104:        typedef typename ::boost::asio::detail::get_recycling_allocator< \
/root/boost_1_87_0/boost/asio/detail/handler_alloc_helpers.hpp:107:              ::boost::asio::detail::get_recycling_allocator< \
/root/boost_1_87_0/boost/asio/detail/handler_alloc_helpers.hpp:118:      ::boost::asio::detail::thread_info_base::default_tag, op ) \
/root/boost_1_87_0/boost/asio/detail/handler_cont_helpers.hpp:35:  using boost::asio::asio_handler_is_continuation;
/root/boost_1_87_0/boost/asio/detail/handler_cont_helpers.hpp:37:      boost::asio::detail::addressof(context));
/root/boost_1_87_0/boost/asio/detail/handler_tracking.hpp:195:  : public boost::asio::detail::handler_tracking::tracked_handler
/root/boost_1_87_0/boost/asio/detail/handler_tracking.hpp:198:  , public boost::asio::detail::handler_tracking::tracked_handler
/root/boost_1_87_0/boost/asio/detail/handler_tracking.hpp:201:  boost::asio::detail::handler_tracking::init()
/root/boost_1_87_0/boost/asio/detail/handler_tracking.hpp:204:  boost::asio::detail::handler_tracking::location tracked_location args
/root/boost_1_87_0/boost/asio/detail/handler_tracking.hpp:207:  boost::asio::detail::handler_tracking::creation args
/root/boost_1_87_0/boost/asio/detail/handler_tracking.hpp:210:  boost::asio::detail::handler_tracking::completion tracked_completion args
/root/boost_1_87_0/boost/asio/detail/handler_tracking.hpp:219:  boost::asio::detail::handler_tracking::operation args
/root/boost_1_87_0/boost/asio/detail/handler_tracking.hpp:222:  boost::asio::detail::handler_tracking::reactor_registration args
/root/boost_1_87_0/boost/asio/detail/handler_tracking.hpp:225:  boost::asio::detail::handler_tracking::reactor_deregistration args
/root/boost_1_87_0/boost/asio/detail/handler_tracking.hpp:232:  boost::asio::detail::handler_tracking::reactor_events args
/root/boost_1_87_0/boost/asio/detail/handler_tracking.hpp:235:  boost::asio::detail::handler_tracking::reactor_operation args
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:136:      sizeof(boost::asio::detail::two_arg_handler_test( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:137:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:143:  typedef boost::asio::detail::handler_type_requirements< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:145:        boost::asio::detail::argbyv( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:146:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:149:        boost::asio::detail::rorlvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:151:            boost::asio::detail::lvref<const boost::system::error_code>(), \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:152:            boost::asio::detail::lvref<const std::size_t>()), \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:163:      sizeof(boost::asio::detail::two_arg_handler_test( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:164:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:170:  typedef boost::asio::detail::handler_type_requirements< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:172:        boost::asio::detail::argbyv( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:173:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:176:        boost::asio::detail::rorlvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:178:            boost::asio::detail::lvref<const boost::system::error_code>(), \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:179:            boost::asio::detail::lvref<const std::size_t>()), \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:190:      sizeof(boost::asio::detail::one_arg_handler_test( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:191:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:196:  typedef boost::asio::detail::handler_type_requirements< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:198:        boost::asio::detail::argbyv( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:199:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:202:        boost::asio::detail::rorlvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:204:            boost::asio::detail::lvref<const boost::system::error_code>()), \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:215:      sizeof(boost::asio::detail::two_arg_move_handler_test( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:216:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:222:  typedef boost::asio::detail::handler_type_requirements< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:224:        boost::asio::detail::argbyv( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:225:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:228:        boost::asio::detail::rorlvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:230:            boost::asio::detail::lvref<const boost::system::error_code>(), \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:231:            boost::asio::detail::rvref<socket_type>()), \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:242:      sizeof(boost::asio::detail::one_arg_handler_test( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:243:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:248:  typedef boost::asio::detail::handler_type_requirements< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:250:        boost::asio::detail::argbyv( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:251:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:254:        boost::asio::detail::rorlvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:256:            boost::asio::detail::lvref<const boost::system::error_code>()), \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:267:      sizeof(boost::asio::detail::two_arg_handler_test( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:268:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:274:  typedef boost::asio::detail::handler_type_requirements< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:276:        boost::asio::detail::argbyv( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:277:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:280:        boost::asio::detail::rorlvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:282:            boost::asio::detail::lvref<const boost::system::error_code>(), \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:283:            boost::asio::detail::lvref<const endpoint_type>()), \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:294:      sizeof(boost::asio::detail::two_arg_handler_test( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:295:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:301:  typedef boost::asio::detail::handler_type_requirements< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:303:        boost::asio::detail::argbyv( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:304:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:307:        boost::asio::detail::rorlvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:309:            boost::asio::detail::lvref<const boost::system::error_code>(), \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:310:            boost::asio::detail::lvref<const iter_type>()), \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:321:      sizeof(boost::asio::detail::two_arg_handler_test( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:322:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:328:  typedef boost::asio::detail::handler_type_requirements< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:330:        boost::asio::detail::argbyv( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:331:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:334:        boost::asio::detail::rorlvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:336:            boost::asio::detail::lvref<const boost::system::error_code>(), \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:337:            boost::asio::detail::lvref<const range_type>()), \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:348:      sizeof(boost::asio::detail::one_arg_handler_test( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:349:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:354:  typedef boost::asio::detail::handler_type_requirements< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:356:        boost::asio::detail::argbyv( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:357:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:360:        boost::asio::detail::rorlvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:362:            boost::asio::detail::lvref<const boost::system::error_code>()), \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:373:      sizeof(boost::asio::detail::two_arg_handler_test( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:374:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:380:  typedef boost::asio::detail::handler_type_requirements< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:382:        boost::asio::detail::argbyv( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:383:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:386:        boost::asio::detail::rorlvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:388:            boost::asio::detail::lvref<const boost::system::error_code>(), \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:389:            boost::asio::detail::lvref<const int>()), \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:400:      sizeof(boost::asio::detail::one_arg_handler_test( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:401:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:406:  typedef boost::asio::detail::handler_type_requirements< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:408:        boost::asio::detail::argbyv( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:409:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:412:        boost::asio::detail::rorlvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:414:            boost::asio::detail::lvref<const boost::system::error_code>()), \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:425:      sizeof(boost::asio::detail::two_arg_handler_test( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:426:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:432:  typedef boost::asio::detail::handler_type_requirements< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:434:        boost::asio::detail::argbyv( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:435:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:438:        boost::asio::detail::rorlvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:440:          boost::asio::detail::lvref<const boost::system::error_code>(), \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:441:          boost::asio::detail::lvref<const std::size_t>()), \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:452:      sizeof(boost::asio::detail::one_arg_handler_test( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:453:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:458:  typedef boost::asio::detail::handler_type_requirements< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:460:        boost::asio::detail::argbyv( \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:461:          boost::asio::detail::rvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:464:        boost::asio::detail::rorlvref< \
/root/boost_1_87_0/boost/asio/detail/handler_type_requirements.hpp:466:            boost::asio::detail::lvref<const boost::system::error_code>()), \
/root/boost_1_87_0/boost/asio/detail/handler_work.hpp:61:    : executor_(boost::asio::prefer(ex, execution::outstanding_work.tracked))
/root/boost_1_87_0/boost/asio/detail/handler_work.hpp:68:    : executor_(boost::asio::prefer(ex, execution::outstanding_work.tracked))
/root/boost_1_87_0/boost/asio/detail/handler_work.hpp:90:    boost::asio::prefer(executor_,
/root/boost_1_87_0/boost/asio/detail/handler_work.hpp:170:        boost::asio::get_associated_allocator(handler));
/root/boost_1_87_0/boost/asio/detail/handler_work.hpp:268:        boost::asio::get_associated_allocator(handler));
/root/boost_1_87_0/boost/asio/detail/handler_work.hpp:288:          : boost::asio::prefer(ex, execution::outstanding_work.tracked))
/root/boost_1_87_0/boost/asio/detail/handler_work.hpp:290:    : executor_(boost::asio::prefer(ex, execution::outstanding_work.tracked))
/root/boost_1_87_0/boost/asio/detail/handler_work.hpp:300:          : boost::asio::prefer(ex, execution::outstanding_work.tracked))
/root/boost_1_87_0/boost/asio/detail/handler_work.hpp:307:    : executor_(boost::asio::prefer(ex, execution::outstanding_work.tracked))
/root/boost_1_87_0/boost/asio/detail/handler_work.hpp:358:          : boost::asio::prefer(ex, execution::outstanding_work.tracked))
/root/boost_1_87_0/boost/asio/detail/handler_work.hpp:360:    : executor_(boost::asio::prefer(ex, execution::outstanding_work.tracked))
/root/boost_1_87_0/boost/asio/detail/handler_work.hpp:370:          : boost::asio::prefer(ex, execution::outstanding_work.tracked))
/root/boost_1_87_0/boost/asio/detail/handler_work.hpp:377:    : executor_(boost::asio::prefer(ex, execution::outstanding_work.tracked))
/root/boost_1_87_0/boost/asio/detail/handler_work.hpp:421:          boost::asio::get_associated_executor(handler, io_ex), io_ex)
/root/boost_1_87_0/boost/asio/detail/impl/buffer_sequence_adapter.ipp:41:  explicit winrt_buffer_impl(const boost::asio::const_buffer& b)
/root/boost_1_87_0/boost/asio/detail/impl/buffer_sequence_adapter.ipp:48:  explicit winrt_buffer_impl(const boost::asio::mutable_buffer& b)
/root/boost_1_87_0/boost/asio/detail/impl/buffer_sequence_adapter.ipp:93:    const boost::asio::mutable_buffer& buffer)
/root/boost_1_87_0/boost/asio/detail/impl/buffer_sequence_adapter.ipp:103:    const boost::asio::const_buffer& buffer)
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:58:        && (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:59:          || ec == boost::asio::error::try_again))
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:107:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:170:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:179:    ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:237:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:244:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:262:      ec = boost::asio::error::eof;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:268:        || (ec != boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:269:          && ec != boost::asio::error::try_again))
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:283:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:290:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:308:      ec = boost::asio::error::eof;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:314:        || (ec != boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:315:          && ec != boost::asio::error::try_again))
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:336:      ec = boost::asio::error::eof;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:348:    if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:352:    if (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:353:        || ec == boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:374:      ec = boost::asio::error::eof;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:386:    if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:390:    if (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:391:        || ec == boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:405:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:412:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:429:        || (ec != boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:430:          && ec != boost::asio::error::try_again))
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:444:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:451:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:468:        || (ec != boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:469:          && ec != boost::asio::error::try_again))
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:495:    if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:499:    if (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:500:        || ec == boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:526:    if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:530:    if (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:531:        || ec == boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:547:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:554:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:572:      ec = boost::asio::error::eof;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:578:        || (ec != boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:579:          && ec != boost::asio::error::try_again))
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:593:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:600:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:618:      ec = boost::asio::error::eof;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:624:        || (ec != boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:625:          && ec != boost::asio::error::try_again))
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:646:      ec = boost::asio::error::eof;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:658:    if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:662:    if (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:663:        || ec == boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:684:      ec = boost::asio::error::eof;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:696:    if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:700:    if (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:701:        || ec == boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:716:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:723:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:741:        || (ec != boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:742:          && ec != boost::asio::error::try_again))
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:756:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:763:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:780:        || (ec != boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:781:          && ec != boost::asio::error::try_again))
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:809:    if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:813:    if (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:814:        || ec == boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:841:    if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:845:    if (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:846:        || ec == boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:862:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:900:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:913:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:926:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:939:      ec = boost::asio::error::would_block;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:947:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:960:      ec = boost::asio::error::would_block;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:968:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/descriptor_ops.ipp:981:      ec = boost::asio::error::would_block;
/root/boost_1_87_0/boost/asio/detail/impl/dev_poll_reactor.hpp:53:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/dev_poll_reactor.hpp:72:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/dev_poll_reactor.hpp:85:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/dev_poll_reactor.hpp:97:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/dev_poll_reactor.ipp:34:dev_poll_reactor::dev_poll_reactor(boost::asio::execution_context& ctx)
/root/boost_1_87_0/boost/asio/detail/impl/dev_poll_reactor.ipp:35:  : boost::asio::detail::execution_context_service_base<dev_poll_reactor>(ctx),
/root/boost_1_87_0/boost/asio/detail/impl/dev_poll_reactor.ipp:58:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/dev_poll_reactor.ipp:73:    boost::asio::execution_context::fork_event fork_ev)
/root/boost_1_87_0/boost/asio/detail/impl/dev_poll_reactor.ipp:75:  if (fork_ev == boost::asio::execution_context::fork_child)
/root/boost_1_87_0/boost/asio/detail/impl/dev_poll_reactor.ipp:129:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/dev_poll_reactor.ipp:165:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/dev_poll_reactor.ipp:211:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/dev_poll_reactor.ipp:212:  cancel_ops_unlocked(descriptor, boost::asio::error::operation_aborted);
/root/boost_1_87_0/boost/asio/detail/impl/dev_poll_reactor.ipp:219:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/dev_poll_reactor.ipp:222:      descriptor, ops, cancellation_key, boost::asio::error::operation_aborted);
/root/boost_1_87_0/boost/asio/detail/impl/dev_poll_reactor.ipp:231:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/dev_poll_reactor.ipp:239:  cancel_ops_unlocked(descriptor, boost::asio::error::operation_aborted);
/root/boost_1_87_0/boost/asio/detail/impl/dev_poll_reactor.ipp:245:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/dev_poll_reactor.ipp:269:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/dev_poll_reactor.ipp:287:          errno, boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/dev_poll_reactor.ipp:382:              boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/dev_poll_reactor.ipp:403:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/dev_poll_reactor.ipp:404:    boost::asio::detail::throw_error(ec, "/dev/poll");
/root/boost_1_87_0/boost/asio/detail/impl/epoll_reactor.ipp:40:epoll_reactor::epoll_reactor(boost::asio::execution_context& ctx)
/root/boost_1_87_0/boost/asio/detail/impl/epoll_reactor.ipp:103:    boost::asio::execution_context::fork_event fork_ev)
/root/boost_1_87_0/boost/asio/detail/impl/epoll_reactor.ipp:105:  if (fork_ev == boost::asio::execution_context::fork_child)
/root/boost_1_87_0/boost/asio/detail/impl/epoll_reactor.ipp:150:              boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/epoll_reactor.ipp:151:          boost::asio::detail::throw_error(ec, "epoll re-registration");
/root/boost_1_87_0/boost/asio/detail/impl/epoll_reactor.ipp:259:    op->ec_ = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/epoll_reactor.ipp:293:        op->ec_ = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/impl/epoll_reactor.ipp:312:                boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/epoll_reactor.ipp:321:      op->ec_ = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/impl/epoll_reactor.ipp:356:      op->ec_ = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/detail/impl/epoll_reactor.ipp:383:      op->ec_ = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/detail/impl/epoll_reactor.ipp:422:        op->ec_ = boost::asio::error::operation_aborted;/root/boost_1_87_0/boost/asio/detail/impl/epoll_reactor.ipp:645:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/epoll_reactor.ipp:646:    boost::asio::detail::throw_error(ec, "epoll");
/root/boost_1_87_0/boost/asio/detail/impl/eventfd_select_interrupter.ipp:90:          boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/eventfd_select_interrupter.ipp:91:      boost::asio::detail::throw_error(ec, "eventfd_select_interrupter");
/root/boost_1_87_0/boost/asio/detail/impl/handler_tracking.ipp:53:        boost::asio::wait_traits<chrono::system_clock>> traits_helper;
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_descriptor_service.ipp:34:    io_uring_service_(boost::asio::use_service<io_uring_service>(context))
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_descriptor_service.ipp:104:    ec = boost::asio::error::already_open;/root/boost_1_87_0/boost/asio/detail/impl/io_uring_descriptor_service.ipp:171:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_file_service.ipp:52:    ec = boost::asio::error::already_open;
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_service.ipp:36:io_uring_service::io_uring_service(boost::asio::execution_context& ctx)
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_service.ipp:114:    boost::asio::execution_context::fork_event fork_ev)
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_service.ipp:118:  case boost::asio::execution_context::fork_prepare:
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_service.ipp:174:  case boost::asio::execution_context::fork_parent:
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_service.ipp:180:  case boost::asio::execution_context::fork_child:
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_service.ipp:242:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_service.ipp:243:    boost::asio::detail::throw_error(ec, "io_uring_get_sqe");
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_service.ipp:253:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_service.ipp:254:    boost::asio::detail::throw_error(ec, "io_uring_register_buffers");
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_service.ipp:269:    op->ec_ = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_service.ipp:362:        op->ec_ = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_service.ipp:537:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_service.ipp:538:    boost::asio::detail::throw_error(ec, "io_uring_queue_init");
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_service.ipp:546:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_service.ipp:548:    boost::asio::detail::throw_error(ec, "eventfd");
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_service.ipp:557:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_service.ipp:558:    boost::asio::detail::throw_error(ec, "io_uring_queue_init");
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_service.ipp:644:        op->ec_ = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_service.ipp:831:        op->ec_.assign(-result, boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_service.ipp:870:        op->ec_ = boost::asio::error::no_buffer_space;
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_socket_service_base.ipp:32:  : io_uring_service_(boost::asio::use_service<io_uring_service>(context))
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_socket_service_base.ipp:130:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_socket_service_base.ipp:151:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_socket_service_base.ipp:169:    ec = boost::asio::error::already_open;
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_socket_service_base.ipp:197:    ec = boost::asio::error::already_open;
/root/boost_1_87_0/boost/asio/detail/impl/io_uring_socket_service_base.ipp:238:    op->ec_ = boost::asio::error::already_open;
/root/boost_1_87_0/boost/asio/detail/impl/kqueue_reactor.ipp:48:kqueue_reactor::kqueue_reactor(boost::asio::execution_context& ctx)
/root/boost_1_87_0/boost/asio/detail/impl/kqueue_reactor.ipp:70:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/kqueue_reactor.ipp:71:    boost::asio::detail::throw_error(error);
/root/boost_1_87_0/boost/asio/detail/impl/kqueue_reactor.ipp:102:    boost::asio::execution_context::fork_event fork_ev)/root/boost_1_87_0/boost/asio/detail/impl/kqueue_reactor.ipp:104:  if (fork_ev == boost::asio::execution_context::fork_child)
/root/boost_1_87_0/boost/asio/detail/impl/kqueue_reactor.ipp:118:          boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/kqueue_reactor.ipp:119:      boost::asio::detail::throw_error(ec, "kqueue interrupter registration");
/root/boost_1_87_0/boost/asio/detail/impl/kqueue_reactor.ipp:136:              boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/kqueue_reactor.ipp:137:          boost::asio::detail::throw_error(ec, "kqueue re-registration");
/root/boost_1_87_0/boost/asio/detail/impl/kqueue_reactor.ipp:216:    op->ec_ = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/kqueue_reactor.ipp:258:              boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/kqueue_reactor.ipp:295:      op->ec_ = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/detail/impl/kqueue_reactor.ipp:322:      op->ec_ = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/detail/impl/kqueue_reactor.ipp:365:        op->ec_ = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/detail/impl/kqueue_reactor.ipp:531:                    boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/kqueue_reactor.ipp:564:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/kqueue_reactor.ipp:565:    boost::asio::detail::throw_error(ec, "kqueue");
/root/boost_1_87_0/boost/asio/detail/impl/pipe_select_interrupter.ipp:64:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/pipe_select_interrupter.ipp:65:    boost::asio::detail::throw_error(ec, "pipe_select_interrupter");
/root/boost_1_87_0/boost/asio/detail/impl/posix_event.ipp:53:      boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/posix_event.ipp:54:  boost::asio::detail::throw_error(ec, "event");
/root/boost_1_87_0/boost/asio/detail/impl/posix_mutex.ipp:36:      boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/posix_mutex.ipp:37:  boost::asio::detail::throw_error(ec, "mutex");
/root/boost_1_87_0/boost/asio/detail/impl/posix_serial_port_service.ipp:51:    ec = boost::asio::error::already_open;
/root/boost_1_87_0/boost/asio/detail/impl/posix_thread.ipp:65:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/posix_thread.ipp:66:    boost::asio::detail::throw_error(ec, "thread");
/root/boost_1_87_0/boost/asio/detail/impl/posix_tss_ptr.ipp:36:      boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/posix_tss_ptr.ipp:37:  boost::asio::detail::throw_error(ec, "tss");
/root/boost_1_87_0/boost/asio/detail/impl/reactive_descriptor_service.ipp:37:    reactor_(boost::asio::use_service<reactor>(context))
/root/boost_1_87_0/boost/asio/detail/impl/reactive_descriptor_service.ipp:110:    ec = boost::asio::error::already_open;/root/boost_1_87_0/boost/asio/detail/impl/reactive_descriptor_service.ipp:119:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/reactive_descriptor_service.ipp:188:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/reactive_socket_service_base.ipp:141:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/reactive_socket_service_base.ipp:162:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/reactive_socket_service_base.ipp:180:    ec = boost::asio::error::already_open;
/root/boost_1_87_0/boost/asio/detail/impl/reactive_socket_service_base.ipp:191:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/reactive_socket_service_base.ipp:213:    ec = boost::asio::error::already_open;
/root/boost_1_87_0/boost/asio/detail/impl/reactive_socket_service_base.ipp:221:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/reactive_socket_service_base.ipp:273:    op->ec_ = boost::asio::error::already_open;
/root/boost_1_87_0/boost/asio/detail/impl/reactive_socket_service_base.ipp:290:      if (op->ec_ == boost::asio::error::in_progress
/root/boost_1_87_0/boost/asio/detail/impl/reactive_socket_service_base.ipp:291:          || op->ec_ == boost::asio::error::would_block)
/root/boost_1_87_0/boost/asio/detail/impl/resolver_service_base.ipp:47:  : scheduler_(boost::asio::use_service<scheduler_impl>(context)),
/root/boost_1_87_0/boost/asio/detail/impl/resolver_service_base.ipp:140:    op->ec_ = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/impl/resolver_service_base.ipp:147:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/resolver_service_base.ipp:150:    work_thread_.reset(new boost::asio::detail::thread(
/root/boost_1_87_0/boost/asio/detail/impl/scheduler.ipp:63:      boost::asio::detail::increment(
/root/boost_1_87_0/boost/asio/detail/impl/scheduler.ipp:88:      boost::asio::detail::increment(
/root/boost_1_87_0/boost/asio/detail/impl/scheduler.ipp:112:scheduler::scheduler(boost::asio::execution_context& ctx,
/root/boost_1_87_0/boost/asio/detail/impl/scheduler.ipp:114:  : boost::asio::detail::execution_context_service_base<scheduler>(ctx),
/root/boost_1_87_0/boost/asio/detail/impl/scheduler.ipp:134:    boost::asio::detail::signal_blocker sb;
/root/boost_1_87_0/boost/asio/detail/impl/scheduler.ipp:135:    thread_ = new boost::asio::detail::thread(thread_function(this));
/root/boost_1_87_0/boost/asio/detail/impl/scheduler.ipp:674:scheduler_task* scheduler::get_default_task(boost::asio::execution_context& ctx)
/root/boost_1_87_0/boost/asio/detail/impl/select_reactor.hpp:62:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/select_reactor.hpp:81:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/select_reactor.hpp:106:  boost::asio::detail::mutex::scoped_lock lock(mutex_);/root/boost_1_87_0/boost/asio/detail/impl/select_reactor.ipp:62:select_reactor::select_reactor(boost::asio::execution_context& ctx)
/root/boost_1_87_0/boost/asio/detail/impl/select_reactor.ipp:75:  boost::asio::detail::signal_blocker sb;
/root/boost_1_87_0/boost/asio/detail/impl/select_reactor.ipp:76:  thread_ = new boost::asio::detail::thread(thread_function(this));
/root/boost_1_87_0/boost/asio/detail/impl/select_reactor.ipp:87:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/select_reactor.ipp:116:    boost::asio::execution_context::fork_event fork_ev)/root/boost_1_87_0/boost/asio/detail/impl/select_reactor.ipp:121:  if (fork_ev == boost::asio::execution_context::fork_child)
/root/boost_1_87_0/boost/asio/detail/impl/select_reactor.ipp:141:  boost::asio::detail::mutex::scoped_lock lock(mutex_);/root/boost_1_87_0/boost/asio/detail/impl/select_reactor.ipp:167:  boost::asio::detail::mutex::scoped_lock lock(mutex_);/root/boost_1_87_0/boost/asio/detail/impl/select_reactor.ipp:184:  boost::asio::detail::mutex::scoped_lock lock(mutex_);/root/boost_1_87_0/boost/asio/detail/impl/select_reactor.ipp:185:  cancel_ops_unlocked(descriptor, boost::asio::error::operation_aborted);
/root/boost_1_87_0/boost/asio/detail/impl/select_reactor.ipp:192:  boost::asio::detail::mutex::scoped_lock lock(mutex_);/root/boost_1_87_0/boost/asio/detail/impl/select_reactor.ipp:195:      descriptor, ops, cancellation_key, boost::asio::error::operation_aborted);
/root/boost_1_87_0/boost/asio/detail/impl/select_reactor.ipp:204:  boost::asio::detail::mutex::scoped_lock lock(mutex_);/root/boost_1_87_0/boost/asio/detail/impl/select_reactor.ipp:205:  cancel_ops_unlocked(descriptor, boost::asio::error::operation_aborted);
/root/boost_1_87_0/boost/asio/detail/impl/select_reactor.ipp:211:  boost::asio::detail::mutex::scoped_lock lock(mutex_);/root/boost_1_87_0/boost/asio/detail/impl/select_reactor.ipp:224:  boost::asio::detail::mutex::scoped_lock lock(mutex_);/root/boost_1_87_0/boost/asio/detail/impl/select_reactor.ipp:316:  boost::asio::detail::mutex::scoped_lock lock(mutex_);/root/boost_1_87_0/boost/asio/detail/impl/select_reactor.ipp:341:    boost::asio::detail::mutex::scoped_lock lock(reactor->mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/select_reactor.ipp:346:    boost::asio::detail::signal_blocker sb;
/root/boost_1_87_0/boost/asio/detail/impl/select_reactor.ipp:348:      new boost::asio::detail::thread(thread_function(reactor));
/root/boost_1_87_0/boost/asio/detail/impl/service_registry.ipp:66:    boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/service_registry.ipp:117:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/service_registry.ipp:158:    boost::asio::detail::throw_exception(invalid_service_owner());
/root/boost_1_87_0/boost/asio/detail/impl/service_registry.ipp:160:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/service_registry.ipp:167:      boost::asio::detail::throw_exception(service_already_exists());
/root/boost_1_87_0/boost/asio/detail/impl/service_registry.ipp:180:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/signal_set_service.ipp:168:    scheduler_(boost::asio::use_service<scheduler_impl>(context)),
/root/boost_1_87_0/boost/asio/detail/impl/signal_set_service.ipp:173:    io_uring_service_(boost::asio::use_service<io_uring_service>(context)),
/root/boost_1_87_0/boost/asio/detail/impl/signal_set_service.ipp:175:    reactor_(boost::asio::use_service<reactor>(context)),
/root/boost_1_87_0/boost/asio/detail/impl/signal_set_service.ipp:271:      boost::asio::detail::signal_blocker blocker;
/root/boost_1_87_0/boost/asio/detail/impl/signal_set_service.ipp:320:    ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/signal_set_service.ipp:328:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/impl/signal_set_service.ipp:368:        ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/signal_set_service.ipp:371:            boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/signal_set_service.ipp:389:          ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/signal_set_service.ipp:401:              boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/signal_set_service.ipp:437:    ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/signal_set_service.ipp:470:        ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/signal_set_service.ipp:473:            boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/signal_set_service.ipp:527:        ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/signal_set_service.ipp:530:            boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/signal_set_service.ipp:572:      op->ec_ = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/detail/impl/signal_set_service.ipp:598:        op->ec_ = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/detail/impl/signal_set_service.ipp:669:      boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/detail/impl/signal_set_service.ipp:769:        boost::asio::error::get_system_category());/root/boost_1_87_0/boost/asio/detail/impl/signal_set_service.ipp:770:    boost::asio::detail::throw_error(ec, "signal_set_service pipe");
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:86:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:92:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:95:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:118:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:139:  boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:157:    if (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:158:        || ec == boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:164:    else if (ec == boost::asio::error::connection_aborted)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:195:    ec = boost::asio::error::connection_aborted;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:211:        ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:247:    if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:251:    if (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:252:        || ec == boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:256:    else if (ec == boost::asio::error::connection_aborted)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:292:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:328:        && (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:329:          || ec == boost::asio::error::try_again))
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:386:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:453:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:462:    ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:523:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:545:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:552:  if (result != 0 && ec == boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:555:      ec = boost::asio::error::in_progress;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:557:      ec = boost::asio::error::no_buffer_space;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:568:  if (ec != boost::asio::error::in_progress
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:569:      && ec != boost::asio::error::would_block)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:588:      boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:599:    ec = boost::asio::error::connection_refused;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:602:    ec = boost::asio::error::network_unreachable;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:605:    ec = boost::asio::error::host_unreachable;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:608:    ec = boost::asio::error::timed_out;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:670:          boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:673:      boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:687:  ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:700:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:714:    ec = boost::asio::error::not_socket;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:728:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:741:    ec = boost::asio::error::not_socket;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:751:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:833:    ec = boost::asio::error::connection_reset;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:835:    ec = boost::asio::error::connection_refused;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:840:  boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:866:    ec = boost::asio::error::connection_reset;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:868:    ec = boost::asio::error::connection_refused;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:873:  boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:887:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:894:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:907:      ec = boost::asio::error::eof;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:917:        || (ec != boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:918:          && ec != boost::asio::error::try_again))
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:932:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:939:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:952:      ec = boost::asio::error::eof;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:962:        || (ec != boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:963:          && ec != boost::asio::error::try_again))
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:982:      ec = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:984:      ec = boost::asio::error::connection_reset;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:988:    ec = boost::asio::error::connection_refused;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:992:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1000:    ec = boost::asio::error::eof;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1018:      ec = boost::asio::error::eof;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1030:    if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1034:    if (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1035:        || ec == boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1056:      ec = boost::asio::error::eof;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1068:    if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1072:    if (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1073:        || ec == boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1098:    ec = boost::asio::error::connection_reset;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1100:    ec = boost::asio::error::connection_refused;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1105:  boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1148:    ec = boost::asio::error::connection_reset;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1150:    ec = boost::asio::error::connection_refused;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1155:  boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1170:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1187:        || (ec != boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1188:          && ec != boost::asio::error::try_again))
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1202:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1219:        || (ec != boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1220:          && ec != boost::asio::error::try_again))
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1239:      ec = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1241:      ec = boost::asio::error::connection_reset;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1245:    ec = boost::asio::error::connection_refused;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1249:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1273:    if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1277:    if (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1278:        || ec == boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1305:    if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1309:    if (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1310:        || ec == boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1347:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1364:        || (ec != boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1365:          && ec != boost::asio::error::try_again))
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1384:      ec = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1386:      ec = boost::asio::error::connection_reset;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1390:    ec = boost::asio::error::connection_refused;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1394:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1418:    if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1422:    if (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1423:        || ec == boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1446:    ec = boost::asio::error::connection_reset;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1448:    ec = boost::asio::error::connection_refused;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1451:  boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1480:    ec = boost::asio::error::connection_reset;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1482:    ec = boost::asio::error::connection_refused;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1485:  boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1503:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1510:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1526:        || (ec != boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1527:          && ec != boost::asio::error::try_again))
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1541:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1548:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1564:        || (ec != boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1565:          && ec != boost::asio::error::try_again))
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1584:      ec = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1586:      ec = boost::asio::error::connection_reset;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1590:    ec = boost::asio::error::connection_refused;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1613:    if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1617:    if (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1618:        || ec == boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1644:    if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1648:    if (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1649:        || ec == boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1674:    ec = boost::asio::error::connection_reset;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1676:    ec = boost::asio::error::connection_refused;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1679:  boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1720:    ec = boost::asio::error::connection_reset;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1722:    ec = boost::asio::error::connection_refused;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1725:  boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1744:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1761:        || (ec != boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1762:          && ec != boost::asio::error::try_again))
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1777:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1794:        || (ec != boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1795:          && ec != boost::asio::error::try_again))
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1825:    if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1829:    if (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1830:        || ec == boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1858:    if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1862:    if (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1863:        || ec == boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1932:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1938:    ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1947:      ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1955:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:1978:  ec = boost::asio::error::fault;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2020:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2026:    ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2035:      ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2040:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2067:        boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2072:  ec = boost::asio::error::fault;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2087:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2126:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2144:      ec = boost::asio::error::not_connected;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2149:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2179:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2193:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2245:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2278:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2321:      ec = boost::asio::error::would_block;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2330:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2373:      ec = boost::asio::error::would_block;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2382:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2425:      ec = boost::asio::error::would_block;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2433:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2512:    ec = boost::asio::error::address_family_not_supported;/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2520:    ec = boost::asio::error::address_family_not_supported;/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2565:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2569:    ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2576:    ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2613:      ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2618:      ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2625:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2642:        ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2659:            ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2675:            ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2699:            ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2715:            ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2728:          ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2741:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2746:    ec = boost::asio::error::address_family_not_supported;/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2754:    ec = boost::asio::error::address_family_not_supported;/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2784:      boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2789:      boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2799:      boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2805:    ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2808:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2824:      ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2835:    ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2909:    return boost::asio::error::host_not_found;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2911:    return boost::asio::error::host_not_found_try_again;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2913:    return boost::asio::error::no_recovery;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2915:    return boost::asio::error::no_data;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2918:    return boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2976:    ec = boost::asio::error::address_family_not_supported;/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:2989:    ec = boost::asio::error::address_family_not_supported;/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:3014:    ec = boost::asio::error::address_family_not_supported;/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:3516:      if (ec == boost::asio::error::host_not_found)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:3518:      if (ec == boost::asio::error::host_not_found_try_again)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:3520:      if (ec == boost::asio::error::no_recovery)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:3522:      if (ec == boost::asio::error::no_data)
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:3628:      return ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:3638:      return ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:3646:    return ec = boost::asio::error::address_family_not_supported;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:3683:          return ec = boost::asio::error::host_not_found;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:3700:        return ec = boost::asio::error::no_buffer_space;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:3725:          return ec = boost::asio::error::no_buffer_space;/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:3741:  boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:3754:    return boost::asio::error::host_not_found_try_again;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:3756:    return boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:3758:    return boost::asio::error::no_recovery;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:3760:    return boost::asio::error::address_family_not_supported;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:3762:    return boost::asio::error::no_memory;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:3770:    return boost::asio::error::host_not_found;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:3772:    return boost::asio::error::service_not_found;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:3774:    return boost::asio::error::socket_type_not_supported;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:3778:        WSAGetLastError(), boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:3781:        errno, boost::asio::error::get_system_category());/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:3859:    ec = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/detail/impl/socket_ops.ipp:3964:    ec = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/detail/impl/socket_select_interrupter.ipp:50:    boost::asio::detail::throw_error(ec, "socket_select_interrupter");
/root/boost_1_87_0/boost/asio/detail/impl/socket_select_interrupter.ipp:66:    boost::asio::detail::throw_error(ec, "socket_select_interrupter");
/root/boost_1_87_0/boost/asio/detail/impl/socket_select_interrupter.ipp:70:    boost::asio::detail::throw_error(ec, "socket_select_interrupter");
/root/boost_1_87_0/boost/asio/detail/impl/socket_select_interrupter.ipp:80:    boost::asio::detail::throw_error(ec, "socket_select_interrupter");
/root/boost_1_87_0/boost/asio/detail/impl/socket_select_interrupter.ipp:85:    boost::asio::detail::throw_error(ec, "socket_select_interrupter");
/root/boost_1_87_0/boost/asio/detail/impl/socket_select_interrupter.ipp:89:    boost::asio::detail::throw_error(ec, "socket_select_interrupter");
/root/boost_1_87_0/boost/asio/detail/impl/socket_select_interrupter.ipp:93:    boost::asio::detail::throw_error(ec, "socket_select_interrupter");
/root/boost_1_87_0/boost/asio/detail/impl/socket_select_interrupter.ipp:99:    boost::asio::detail::throw_error(ec, "socket_select_interrupter");
/root/boost_1_87_0/boost/asio/detail/impl/socket_select_interrupter.ipp:109:    boost::asio::detail::throw_error(ec, "socket_select_interrupter");
/root/boost_1_87_0/boost/asio/detail/impl/socket_select_interrupter.ipp:168:    if (ec == boost::asio::error::would_block
/root/boost_1_87_0/boost/asio/detail/impl/socket_select_interrupter.ipp:169:        || ec == boost::asio::error::try_again)
/root/boost_1_87_0/boost/asio/detail/impl/strand_executor_service.hpp:79:      executor_(boost::asio::prefer(ex, execution::outstanding_work.tracked))
/root/boost_1_87_0/boost/asio/detail/impl/strand_executor_service.hpp:105:        boost::asio::prefer(
/root/boost_1_87_0/boost/asio/detail/impl/strand_executor_service.hpp:106:            boost::asio::require(
/root/boost_1_87_0/boost/asio/detail/impl/strand_executor_service.hpp:203:      boost::asio::query(ex, execution::allocator));
/root/boost_1_87_0/boost/asio/detail/impl/strand_executor_service.hpp:226:  if (boost::asio::query(ex, execution::blocking) != execution::blocking.never
/root/boost_1_87_0/boost/asio/detail/impl/strand_executor_service.hpp:284:    boost::asio::dispatch(ex,
/root/boost_1_87_0/boost/asio/detail/impl/strand_executor_service.hpp:310:    boost::asio::post(ex,
/root/boost_1_87_0/boost/asio/detail/impl/strand_executor_service.hpp:336:    boost::asio::defer(ex,
/root/boost_1_87_0/boost/asio/detail/impl/strand_executor_service.ipp:39:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/strand_executor_service.ipp:60:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/strand_executor_service.ipp:85:  boost::asio::detail::mutex::scoped_lock lock(service_->mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/strand_service.hpp:49:  typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/impl/strand_service.hpp:71:  typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/impl/strand_service.ipp:45:strand_service::strand_service(boost::asio::io_context& io_context)
/root/boost_1_87_0/boost/asio/detail/impl/strand_service.ipp:46:  : boost::asio::detail::service_base<strand_service>(io_context),
/root/boost_1_87_0/boost/asio/detail/impl/strand_service.ipp:48:    io_context_impl_(boost::asio::use_service<io_context_impl>(io_context)),
/root/boost_1_87_0/boost/asio/detail/impl/strand_service.ipp:58:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/strand_service.ipp:72:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/throw_error.ipp:33:  boost::asio::detail::throw_exception(e BOOST_ASIO_SOURCE_LOCATION_ARG);
/root/boost_1_87_0/boost/asio/detail/impl/throw_error.ipp:42:  boost::asio::detail::throw_exception(e BOOST_ASIO_SOURCE_LOCATION_ARG);
/root/boost_1_87_0/boost/asio/detail/impl/win_event.ipp:45:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_event.ipp:46:    boost::asio::detail::throw_error(ec, "event");
/root/boost_1_87_0/boost/asio/detail/impl/win_event.ipp:59:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_event.ipp:60:    boost::asio::detail::throw_error(ec, "event");
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_file_service.ipp:59:    ec = boost::asio::error::already_open;
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_file_service.ipp:110:          ec.assign(last_error, boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_file_service.ipp:130:          ec.assign(last_error, boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_file_service.ipp:146:    ec.assign(last_error, boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_file_service.ipp:159:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_file_service.ipp:165:    ec.assign(last_error, boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_file_service.ipp:190:      boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_file_service.ipp:192:      ec.assign(last_error, boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_file_service.ipp:199:    ec.assign(last_error, boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_file_service.ipp:212:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_file_service.ipp:218:    ec.assign(last_error, boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_file_service.ipp:234:      boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_file_service.ipp:259:    ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_file_service.ipp:269:    boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_file_service.ipp:275:    ec.assign(last_error, boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:56:          boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:71:    iocp_service_(boost::asio::use_service<win_iocp_io_context>(context)),
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:81:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:97:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:116:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:134:    boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:154:    boost::asio::detail::mutex::scoped_lock lock(other_service.mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:169:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:186:    ec = boost::asio::error::already_open;
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:215:          boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:251:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:261:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:277:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:305:            boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:326:          boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:337:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:346:    const boost::asio::const_buffer& buffer, boost::system::error_code& ec)
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:350:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:380:          boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:394:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:405:    const boost::asio::const_buffer& buffer, operation* op)
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:412:    iocp_service_.on_completion(op, boost::asio::error::bad_descriptor);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:442:    const boost::asio::mutable_buffer& buffer, boost::system::error_code& ec)
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:446:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:477:        ec = boost::asio::error::eof;
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:482:            boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:498:      ec = boost::asio::error::eof;
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:503:          boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:515:    const boost::asio::mutable_buffer& buffer, operation* op)
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:522:    iocp_service_.on_completion(op, boost::asio::error::bad_descriptor);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_io_context.hpp:105:  boost::asio::detail::mutex::scoped_lock lock(dispatch_mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_io_context.ipp:83:    boost::asio::execution_context& ctx, bool own_thread)
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_io_context.ipp:103:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_io_context.ipp:104:    boost::asio::detail::throw_error(ec, "iocp");
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_io_context.ipp:110:    thread_.reset(new boost::asio::detail::thread(thread_function(this)));
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_io_context.ipp:186:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_io_context.ipp:288:            boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_io_context.ipp:289:        boost::asio::detail::throw_error(ec, "pqcs");
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_io_context.ipp:378:      &boost::asio::error::get_system_category());/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_io_context.ipp:447:          boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_io_context.ipp:488:            boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_io_context.ipp:521:                boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_io_context.ipp:566:          boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_io_context.ipp:567:      boost::asio::detail::throw_error(ec, "timer");
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_serial_port_service.ipp:49:    ec = boost::asio::error::already_open;/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_serial_port_service.ipp:65:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_serial_port_service.ipp:80:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_serial_port_service.ipp:107:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_serial_port_service.ipp:126:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_serial_port_service.ipp:151:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_serial_port_service.ipp:163:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_serial_port_service.ipp:186:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:45:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:65:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:93:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:111:    boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:139:    boost::asio::detail::mutex::scoped_lock lock(other_service.mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:154:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:217:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:227:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:242:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:271:            boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:295:          boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:306:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:312:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:335:    ec = boost::asio::error::already_open;
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:365:    ec = boost::asio::error::already_open;
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:396:    iocp_service_.on_completion(op, boost::asio::error::bad_descriptor);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:421:    iocp_service_.on_completion(op, boost::asio::error::bad_descriptor);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:449:    iocp_service_.on_completion(op, boost::asio::error::bad_descriptor);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:499:    iocp_service_.on_completion(op, boost::asio::error::bad_descriptor);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:526:    iocp_service_.on_completion(op, boost::asio::error::bad_descriptor);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:528:    iocp_service_.on_completion(op, boost::asio::error::already_open);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:560:      iocp_service_.on_completion(op, boost::asio::error::operation_aborted);
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:604:    op->ec_ = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:634:      if (op->ec_ && op->ec_ != boost::asio::error::invalid_argument)
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:666:      if (op->ec_ == boost::asio::error::in_progress
/root/boost_1_87_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:667:          || op->ec_ == boost::asio::error::would_block)
/root/boost_1_87_0/boost/asio/detail/impl/win_mutex.ipp:36:      boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_mutex.ipp:37:  boost::asio::detail::throw_error(ec, "mutex");
/root/boost_1_87_0/boost/asio/detail/impl/win_object_handle_service.ipp:33:    scheduler_(boost::asio::use_service<scheduler_impl>(context)),
/root/boost_1_87_0/boost/asio/detail/impl/win_object_handle_service.ipp:190:      op->ec_ = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/detail/impl/win_object_handle_service.ipp:216:    ec = boost::asio::error::already_open;
/root/boost_1_87_0/boost/asio/detail/impl/win_object_handle_service.ipp:244:      op->ec_ = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/detail/impl/win_object_handle_service.ipp:265:          boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_object_handle_service.ipp:296:      op->ec_ = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/detail/impl/win_object_handle_service.ipp:315:    ec = boost::asio::error::bad_descriptor;/root/boost_1_87_0/boost/asio/detail/impl/win_object_handle_service.ipp:332:          boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_object_handle_service.ipp:370:    op->ec_ = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/win_object_handle_service.ipp:387:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_object_handle_service.ipp:429:            boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_static_mutex.ipp:37:      boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_static_mutex.ipp:38:  boost::asio::detail::throw_error(ec, "static_mutex");
/root/boost_1_87_0/boost/asio/detail/impl/win_thread.ipp:75:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_thread.ipp:76:    boost::asio::detail::throw_error(ec, "thread.entry_event");
/root/boost_1_87_0/boost/asio/detail/impl/win_thread.ipp:85:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_thread.ipp:86:    boost::asio::detail::throw_error(ec, "thread.exit_event");
/root/boost_1_87_0/boost/asio/detail/impl/win_thread.ipp:101:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_thread.ipp:102:    boost::asio::detail::throw_error(ec, "thread");
/root/boost_1_87_0/boost/asio/detail/impl/win_tss_ptr.ipp:45:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/win_tss_ptr.ipp:46:    boost::asio::detail::throw_error(ec, "tss");
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:45:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:59:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:76:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:95:    boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:112:    boost::asio::detail::mutex::scoped_lock lock(other_service.mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:128:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:172:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:191:        ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:206:        ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:219:      ec = boost::asio::error::address_family_not_supported;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:238:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:256:        ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:271:        ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:276:      ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:295:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:313:        ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:328:        ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:333:      ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:349:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:372:    ec = boost::asio::error::address_family_not_supported;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:398:    op->ec_ = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:422:    op->ec_ = boost::asio::error::address_family_not_supported;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:449:    const boost::asio::const_buffer& data,
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:454:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:460:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:466:    buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:467:      boost::asio::const_buffer> bufs(boost::asio::buffer(data));
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:488:      const boost::asio::const_buffer& data, socket_base::message_flags flags,
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:493:    op->ec_ = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:500:    op->ec_ = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:507:    buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:508:        boost::asio::const_buffer> bufs(boost::asio::buffer(data));
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:529:    const boost::asio::mutable_buffer& data,
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:534:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:540:    ec = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:546:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:547:        boost::asio::mutable_buffer> bufs(boost::asio::buffer(data));
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:563:      ec = boost::asio::error::eof;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:578:      const boost::asio::mutable_buffer& data, socket_base::message_flags flags,
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:584:    op->ec_ = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:591:    op->ec_ = boost::asio::error::bad_descriptor;
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:598:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:599:        boost::asio::mutable_buffer> bufs(boost::asio::buffer(data));
/root/boost_1_87_0/boost/asio/detail/impl/winrt_timer_scheduler.hpp:46:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/winrt_timer_scheduler.hpp:65:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/winrt_timer_scheduler.hpp:78:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/winrt_timer_scheduler.ipp:41:  thread_ = new boost::asio::detail::thread(
/root/boost_1_87_0/boost/asio/detail/impl/winrt_timer_scheduler.ipp:52:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/winrt_timer_scheduler.ipp:80:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/detail/impl/winsock_init.ipp:71:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/impl/winsock_init.ipp:72:    boost::asio::detail::throw_error(ec, "winsock");
/root/boost_1_87_0/boost/asio/detail/initiate_defer.hpp:51:    boost::asio::prefer(
/root/boost_1_87_0/boost/asio/detail/initiate_defer.hpp:52:        boost::asio::require(ex, execution::blocking.never),
/root/boost_1_87_0/boost/asio/detail/initiate_defer.hpp:56:        boost::asio::detail::bind_handler(
/root/boost_1_87_0/boost/asio/detail/initiate_defer.hpp:74:    ex.defer(boost::asio::detail::bind_handler(
/root/boost_1_87_0/boost/asio/detail/initiate_defer.hpp:112:    boost::asio::prefer(
/root/boost_1_87_0/boost/asio/detail/initiate_defer.hpp:113:        boost::asio::require(ex_, execution::blocking.never),
/root/boost_1_87_0/boost/asio/detail/initiate_defer.hpp:117:        boost::asio::detail::bind_handler(
/root/boost_1_87_0/boost/asio/detail/initiate_defer.hpp:143:    boost::asio::prefer(
/root/boost_1_87_0/boost/asio/detail/initiate_defer.hpp:144:        boost::asio::require(ex_, execution::blocking.never),
/root/boost_1_87_0/boost/asio/detail/initiate_defer.hpp:169:    ex_.defer(boost::asio::detail::bind_handler(
/root/boost_1_87_0/boost/asio/detail/initiate_dispatch.hpp:49:    boost::asio::prefer(ex, execution::allocator(alloc)).execute(
/root/boost_1_87_0/boost/asio/detail/initiate_dispatch.hpp:50:        boost::asio::detail::bind_handler(
/root/boost_1_87_0/boost/asio/detail/initiate_dispatch.hpp:68:    ex.dispatch(boost::asio::detail::bind_handler(
/root/boost_1_87_0/boost/asio/detail/initiate_dispatch.hpp:106:    boost::asio::prefer(ex_, execution::allocator(alloc)).execute(
/root/boost_1_87_0/boost/asio/detail/initiate_dispatch.hpp:107:        boost::asio::detail::bind_handler(
/root/boost_1_87_0/boost/asio/detail/initiate_dispatch.hpp:133:    boost::asio::prefer(ex_, execution::allocator(alloc)).execute(
/root/boost_1_87_0/boost/asio/detail/initiate_dispatch.hpp:155:    ex_.dispatch(boost::asio::detail::bind_handler(
/root/boost_1_87_0/boost/asio/detail/initiate_post.hpp:51:    boost::asio::prefer(
/root/boost_1_87_0/boost/asio/detail/initiate_post.hpp:52:        boost::asio::require(ex, execution::blocking.never),
/root/boost_1_87_0/boost/asio/detail/initiate_post.hpp:56:        boost::asio::detail::bind_handler(
/root/boost_1_87_0/boost/asio/detail/initiate_post.hpp:74:    ex.post(boost::asio::detail::bind_handler(
/root/boost_1_87_0/boost/asio/detail/initiate_post.hpp:112:    boost::asio::prefer(
/root/boost_1_87_0/boost/asio/detail/initiate_post.hpp:113:        boost::asio::require(ex_, execution::blocking.never),/root/boost_1_87_0/boost/asio/detail/initiate_post.hpp:117:        boost::asio::detail::bind_handler(
/root/boost_1_87_0/boost/asio/detail/initiate_post.hpp:143:    boost::asio::prefer(
/root/boost_1_87_0/boost/asio/detail/initiate_post.hpp:144:        boost::asio::require(ex_, execution::blocking.never),/root/boost_1_87_0/boost/asio/detail/initiate_post.hpp:169:    ex_.post(boost::asio::detail::bind_handler(
/root/boost_1_87_0/boost/asio/detail/io_object_impl.hpp:48:    : service_(&boost::asio::use_service<IoObjectService>(
/root/boost_1_87_0/boost/asio/detail/io_object_impl.hpp:58:    : service_(&boost::asio::use_service<IoObjectService>(context)),
/root/boost_1_87_0/boost/asio/detail/io_object_impl.hpp:84:    : service_(&boost::asio::use_service<IoObjectService>(
/root/boost_1_87_0/boost/asio/detail/io_object_impl.hpp:148:    return boost::asio::query(t, execution::context);
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_read_at_op.hpp:104:        o->ec_ = boost::asio::error::eof;
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_read_at_op.hpp:107:    if (o->ec_ && o->ec_ == boost::asio::error::would_block)
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_read_at_op.hpp:121:  buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_read_at_op.hpp:152:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_read_at_op.hpp:171:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_read_op.hpp:101:        o->ec_ = boost::asio::error::eof;
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_read_op.hpp:104:    if (o->ec_ && o->ec_ == boost::asio::error::would_block)
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_read_op.hpp:117:  buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_read_op.hpp:147:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_read_op.hpp:166:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_service.hpp:54:    : private boost::asio::detail::noncopyable
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_service.hpp:195:      ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_service.hpp:214:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_service.hpp:240:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_service.hpp:265:    typedef buffer_sequence_adapter<boost::asi
::const_buffer,
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_service.hpp:309:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_service.hpp:314:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_service.hpp:331:        buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_service.hpp:345:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_service.hpp:349:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_service.hpp:374:    typedef buffer_sequence_adapter<boost::asi
::const_buffer,
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_service.hpp:414:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_service.hpp:419:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_service.hpp:436:        buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_service.hpp:454:    typedef buffer_sequence_adapter<boost::asi
::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_service.hpp:499:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_service.hpp:504:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_service.hpp:521:        buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_service.hpp:535:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_service.hpp:539:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_service.hpp:564:    typedef buffer_sequence_adapter<boost::asi
::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_service.hpp:601:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_service.hpp:606:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_service.hpp:623:        buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_write_at_op.hpp:101:    if (o->ec_ && o->ec_ == boost::asio::error::would_block)
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_write_at_op.hpp:115:  buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_write_at_op.hpp:146:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_write_at_op.hpp:165:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_write_op.hpp:99:    if (o->ec_ && o->ec_ == boost::asio::error::would_block)
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_write_op.hpp:112:  buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_write_op.hpp:142:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/io_uring_descriptor_write_op.hpp:161:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/io_uring_null_buffers_op.hpp:71:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/io_uring_null_buffers_op.hpp:90:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/io_uring_service.hpp:93:  BOOST_ASIO_DECL io_uring_service(boost::asio::execution_context& ctx);
/root/boost_1_87_0/boost/asio/detail/io_uring_service.hpp:103:      boost::asio::execution_context::fork_event fork_ev);/root/boost_1_87_0/boost/asio/detail/io_uring_socket_accept_op.hpp:93:    if (o->ec_ && o->ec_ == boost::asio::error::would_block)
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_accept_op.hpp:154:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_accept_op.hpp:177:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_accept_op.hpp:228:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_accept_op.hpp:253:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_connect_op.hpp:97:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_connect_op.hpp:116:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_recv_op.hpp:114:          o->ec_ = boost::asio::error::eof;
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_recv_op.hpp:117:    if (o->ec_ && o->ec_ == boost::asio::error::would_block)
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_recv_op.hpp:131:  buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_recv_op.hpp:162:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_recv_op.hpp:181:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_recvfrom_op.hpp:114:    if (o->ec_ && o->ec_ == boost::asio::error::would_block)
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_recvfrom_op.hpp:129:  buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_recvfrom_op.hpp:163:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_recvfrom_op.hpp:182:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_recvmsg_op.hpp:100:    if (o->ec_ && o->ec_ == boost::asio::error::would_block)
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_recvmsg_op.hpp:115:  buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_recvmsg_op.hpp:149:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_recvmsg_op.hpp:168:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_send_op.hpp:104:    if (o->ec_ && o->ec_ == boost::asio::error::would_block)
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_send_op.hpp:118:  buffer_sequence_adapter<boost::asio::const_buffer, ConstBufferSequence> bufs_;
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_send_op.hpp:148:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_send_op.hpp:167:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_sendto_op.hpp:103:    if (o->ec_ && o->ec_ == boost::asio::error::would_block)
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_sendto_op.hpp:118:  buffer_sequence_adapter<boost::asio::const_buffer, ConstBufferSequence> bufs_;
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_sendto_op.hpp:151:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_sendto_op.hpp:170:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service.hpp:234:    typedef buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service.hpp:280:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service.hpp:285:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service.hpp:315:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service.hpp:319:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service.hpp:346:    typedef buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service.hpp:403:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service.hpp:408:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service.hpp:451:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service.hpp:455:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service.hpp:485:      ec = boost::asio::error::already_open;
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service.hpp:519:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service.hpp:523:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service.hpp:554:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service.hpp:559:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service.hpp:598:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service.hpp:602:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service_base.hpp:187:      ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service_base.hpp:204:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service_base.hpp:230:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service_base.hpp:256:    typedef buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service_base.hpp:294:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service_base.hpp:299:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service_base.hpp:317:          && buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service_base.hpp:331:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service_base.hpp:335:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service_base.hpp:360:    typedef buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service_base.hpp:402:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service_base.hpp:407:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service_base.hpp:425:          && buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service_base.hpp:453:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service_base.hpp:457:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service_base.hpp:484:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service_base.hpp:522:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service_base.hpp:527:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service_base.hpp:571:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/io_uring_socket_service_base.hpp:575:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/io_uring_wait_op.hpp:69:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/io_uring_wait_op.hpp:88:    p.h = boost::asio::detail::addressof(handler.handler_);/root/boost_1_87_0/boost/asio/detail/is_buffer_sequence.hpp:65:      decltype(boost::asio::buffer_sequence_begin(*t)),
/root/boost_1_87_0/boost/asio/detail/is_buffer_sequence.hpp:74:      decltype(boost::asio::buffer_sequence_end(*t)),
/root/boost_1_87_0/boost/asio/detail/is_buffer_sequence.hpp:164:      decltype(*boost::asio::buffer_sequence_begin(*t)),/root/boost_1_87_0/boost/asio/detail/kqueue_reactor.hpp:89:  BOOST_ASIO_DECL kqueue_reactor(boost::asio::execution_context& ctx);
/root/boost_1_87_0/boost/asio/detail/kqueue_reactor.hpp:99:      boost::asio::execution_context::fork_event fork_ev);
/root/boost_1_87_0/boost/asio/detail/memory.hpp:83:    boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/detail/memory.hpp:93:    boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/detail/memory.hpp:103:    boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/detail/noncopyable.hpp:38:using boost::asio::detail::noncopyable;
/root/boost_1_87_0/boost/asio/detail/null_mutex.hpp:33:  typedef boost::asio::detail::scoped_lock<null_mutex> scoped_lock;
/root/boost_1_87_0/boost/asio/detail/null_reactor.hpp:44:  null_reactor(boost::asio::execution_context& ctx)
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:98:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:106:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:120:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:128:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:142:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:150:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:158:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:166:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:175:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:189:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:203:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:211:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:219:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:228:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:237:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:245:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:253:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:262:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:270:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:280:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:282:    boost::asio::post(io_ex, detail::bind_handler(
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:291:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:293:    boost::asio::post(io_ex, detail::bind_handler(
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:302:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:310:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:321:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:323:    boost::asio::post(io_ex, detail::bind_handler(
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:332:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:334:    boost::asio::post(io_ex, detail::bind_handler(
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:345:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:354:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:366:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:368:    boost::asio::post(io_ex, detail::bind_handler(
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:378:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:380:    boost::asio::post(io_ex, detail::bind_handler(
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:391:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:400:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:411:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:413:    boost::asio::post(io_ex, detail::bind_handler(
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:423:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:425:    boost::asio::post(io_ex, detail::bind_handler(
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:436:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:445:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:458:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:460:    boost::asio::post(io_ex, detail::bind_handler(
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:470:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:472:    boost::asio::post(io_ex, detail::bind_handler(
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:481:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:491:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:492:    boost::asio::post(io_ex, detail::bind_handler(handler, ec));
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:499:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:508:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/null_socket_service.hpp:509:    boost::asio::post(io_ex, detail::bind_handler(handler, ec));
/root/boost_1_87_0/boost/asio/detail/null_static_mutex.hpp:32:  typedef boost::asio::detail::scoped_lock<null_static_mutex> scoped_lock;
/root/boost_1_87_0/boost/asio/detail/null_thread.hpp:40:    boost::asio::detail::throw_error(
/root/boost_1_87_0/boost/asio/detail/null_thread.hpp:41:        boost::asio::error::operation_not_supported, "thread");
/root/boost_1_87_0/boost/asio/detail/posix_mutex.hpp:38:  typedef boost::asio::detail::scoped_lock<posix_mutex> scoped_lock;
/root/boost_1_87_0/boost/asio/detail/posix_static_mutex.hpp:33:  typedef boost::asio::detail::scoped_lock<posix_static_mutex> scoped_lock;
/root/boost_1_87_0/boost/asio/detail/reactive_descriptor_service.hpp:58:    : private boost::asio::detail::noncopyable
/root/boost_1_87_0/boost/asio/detail/reactive_descriptor_service.hpp:198:      ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/reactive_descriptor_service.hpp:217:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/reactive_descriptor_service.hpp:221:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/reactive_descriptor_service.hpp:241:      p.p->ec_ = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/reactive_descriptor_service.hpp:266:    typedef buffer_sequence_adapter<boost::asi
::const_buffer,
/root/boost_1_87_0/boost/asio/detail/reactive_descriptor_service.hpp:309:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/reactive_descriptor_service.hpp:313:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/reactive_descriptor_service.hpp:330:        buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/reactive_descriptor_service.hpp:344:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/reactive_descriptor_service.hpp:348:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/reactive_descriptor_service.hpp:374:    typedef buffer_sequence_adapter<boost::asi
::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/reactive_descriptor_service.hpp:418:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/reactive_descriptor_service.hpp:422:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/reactive_descriptor_service.hpp:439:        buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/reactive_descriptor_service.hpp:453:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/reactive_descriptor_service.hpp:457:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/reactive_null_buffers_op.hpp:62:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/reactive_null_buffers_op.hpp:79:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/reactive_null_buffers_op.hpp:97:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/reactive_null_buffers_op.hpp:114:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_accept_op.hpp:123:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/reactive_socket_accept_op.hpp:146:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_accept_op.hpp:164:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/reactive_socket_accept_op.hpp:186:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_accept_op.hpp:235:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/reactive_socket_accept_op.hpp:260:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_accept_op.hpp:279:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/reactive_socket_accept_op.hpp:303:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_connect_op.hpp:88:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/reactive_socket_connect_op.hpp:107:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_connect_op.hpp:126:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/reactive_socket_connect_op.hpp:145:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_recv_op.hpp:57:    typedef buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/reactive_socket_recv_op.hpp:124:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/reactive_socket_recv_op.hpp:143:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_recv_op.hpp:161:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/reactive_socket_recv_op.hpp:180:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_recvfrom_op.hpp:58:    typedef buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/reactive_socket_recvfrom_op.hpp:129:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/reactive_socket_recvfrom_op.hpp:148:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_recvfrom_op.hpp:167:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/reactive_socket_recvfrom_op.hpp:186:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_recvmsg_op.hpp:58:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/reactive_socket_recvmsg_op.hpp:110:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/reactive_socket_recvmsg_op.hpp:129:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_recvmsg_op.hpp:148:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/reactive_socket_recvmsg_op.hpp:167:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_send_op.hpp:57:    typedef buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/reactive_socket_send_op.hpp:127:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/reactive_socket_send_op.hpp:146:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_send_op.hpp:164:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/reactive_socket_send_op.hpp:183:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_sendto_op.hpp:57:    typedef buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/reactive_socket_sendto_op.hpp:121:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/reactive_socket_sendto_op.hpp:140:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_sendto_op.hpp:158:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/reactive_socket_sendto_op.hpp:177:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service.hpp:242:    typedef buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service.hpp:289:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service.hpp:294:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service.hpp:325:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service.hpp:329:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service.hpp:357:    typedef buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service.hpp:411:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service.hpp:416:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service.hpp:450:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service.hpp:454:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service.hpp:487:      ec = boost::asio::error::already_open;
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service.hpp:521:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service.hpp:525:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service.hpp:556:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service.hpp:561:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service.hpp:601:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service.hpp:605:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service_base.hpp:190:      ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service_base.hpp:207:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service_base.hpp:211:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service_base.hpp:231:      p.p->ec_ = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service_base.hpp:257:    typedef buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service_base.hpp:295:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service_base.hpp:300:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service_base.hpp:318:          && buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service_base.hpp:332:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service_base.hpp:336:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service_base.hpp:362:    typedef buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service_base.hpp:401:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service_base.hpp:406:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service_base.hpp:428:          && buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service_base.hpp:443:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service_base.hpp:447:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service_base.hpp:477:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service_base.hpp:512:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service_base.hpp:517:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service_base.hpp:553:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/reactive_socket_service_base.hpp:557:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/reactive_wait_op.hpp:62:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/reactive_wait_op.hpp:79:    p.h = boost::asio::detail::addressof(handler.handler_);/root/boost_1_87_0/boost/asio/detail/reactive_wait_op.hpp:97:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/reactive_wait_op.hpp:114:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/reactor_op_queue.hpp:76:        boost::asio::error::operation_aborted)
/root/boost_1_87_0/boost/asio/detail/reactor_op_queue.hpp:99:        boost::asio::error::operation_aborted)
/root/boost_1_87_0/boost/asio/detail/reactor_op_queue.hpp:111:        boost::asio::error::operation_aborted)
/root/boost_1_87_0/boost/asio/detail/reactor_op_queue.hpp:142:        boost::asio::error::operation_aborted)
/root/boost_1_87_0/boost/asio/detail/recycling_allocator.hpp:57:    void* p = boost::asio::aligned_new(alignof(T), sizeof(T) * n);
/root/boost_1_87_0/boost/asio/detail/recycling_allocator.hpp:69:    boost::asio::aligned_delete(p);
/root/boost_1_87_0/boost/asio/detail/resolve_endpoint_op.hpp:48:  typedef boost::asio::ip::basic_resolver_results<Protocol> results_type;
/root/boost_1_87_0/boost/asio/detail/resolve_endpoint_op.hpp:75:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/resolve_endpoint_op.hpp:114:      p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/resolve_query_op.hpp:48:  typedef boost::asio::ip::basic_resolver_query<Protocol> query_type;
/root/boost_1_87_0/boost/asio/detail/resolve_query_op.hpp:49:  typedef boost::asio::ip::basic_resolver_results<Protocol> results_type;
/root/boost_1_87_0/boost/asio/detail/resolve_query_op.hpp:83:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/resolve_query_op.hpp:119:      p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/resolve_query_op.hpp:143:  boost::asio::detail::addrinfo_type* addrinfo_;
/root/boost_1_87_0/boost/asio/detail/resolver_service.hpp:49:  typedef boost::asio::ip::basic_resolver_query<Protocol> query_type;
/root/boost_1_87_0/boost/asio/detail/resolver_service.hpp:52:  typedef boost::asio::ip::basic_resolver_results<Protocol> results_type;
/root/boost_1_87_0/boost/asio/detail/resolver_service.hpp:77:    boost::asio::detail::addrinfo_type* address_info = 0;
/root/boost_1_87_0/boost/asio/detail/resolver_service.hpp:95:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/resolver_service.hpp:128:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/resolver_service_base.hpp:101:    : private boost::asio::detail::noncopyable
/root/boost_1_87_0/boost/asio/detail/resolver_service_base.hpp:104:    explicit auto_addrinfo(boost::asio::detail::addrinfo_type* ai)
/root/boost_1_87_0/boost/asio/detail/resolver_service_base.hpp:115:    operator boost::asio::detail::addrinfo_type*()
/root/boost_1_87_0/boost/asio/detail/resolver_service_base.hpp:121:    boost::asio::detail::addrinfo_type* ai_;
/root/boost_1_87_0/boost/asio/detail/resolver_service_base.hpp:141:  boost::asio::detail::mutex mutex_;
/root/boost_1_87_0/boost/asio/detail/resolver_service_base.hpp:144:  boost::asio::detail::scoped_ptr<scheduler_impl> work_scheduler_;
/root/boost_1_87_0/boost/asio/detail/resolver_service_base.hpp:147:  boost::asio::detail::scoped_ptr<boost::asio::detail::thread> work_thread_;
/root/boost_1_87_0/boost/asio/detail/scheduler.hpp:48:      boost::asio::execution_context&);
/root/boost_1_87_0/boost/asio/detail/scheduler.hpp:51:  BOOST_ASIO_DECL scheduler(boost::asio::execution_context& ctx,
/root/boost_1_87_0/boost/asio/detail/scheduler.hpp:169:      boost::asio::execution_context& ctx);
/root/boost_1_87_0/boost/asio/detail/scheduler.hpp:229:  boost::asio::detail::thread* thread_;
/root/boost_1_87_0/boost/asio/detail/select_reactor.hpp:72:  BOOST_ASIO_DECL select_reactor(boost::asio::execution_context& ctx);
/root/boost_1_87_0/boost/asio/detail/select_reactor.hpp:82:      boost::asio::execution_context::fork_event fork_ev);
/root/boost_1_87_0/boost/asio/detail/select_reactor.hpp:224:  boost::asio::detail::mutex mutex_;
/root/boost_1_87_0/boost/asio/detail/select_reactor.hpp:247:  boost::asio::detail::thread* thread_;
/root/boost_1_87_0/boost/asio/detail/service_registry.hpp:145:  mutable boost::asio::detail::mutex mutex_;
/root/boost_1_87_0/boost/asio/detail/signal_handler.hpp:51:    ptr p = { boost::asio::detail::addressof(h->handler_), h, h };
/root/boost_1_87_0/boost/asio/detail/signal_handler.hpp:68:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/signal_set_service.hpp:136:      boost::asio::execution_context::fork_event fork_ev);
/root/boost_1_87_0/boost/asio/detail/signal_set_service.hpp:178:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/signal_set_service.hpp:182:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/socket_option.hpp:125:        boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/detail/socket_option.hpp:206:      boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/detail/socket_option.hpp:303:      boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/detail/std_mutex.hpp:35:  typedef boost::asio::detail::scoped_lock<std_mutex> scoped_lock;/root/boost_1_87_0/boost/asio/detail/std_static_mutex.hpp:35:  typedef boost::asio::detail::scoped_lock<std_static_mutex> scoped_lock;
/root/boost_1_87_0/boost/asio/detail/strand_service.hpp:33:  : public boost::asio::detail::service_base<strand_service>
/root/boost_1_87_0/boost/asio/detail/strand_service.hpp:58:    boost::asio::detail::mutex mutex_;
/root/boost_1_87_0/boost/asio/detail/strand_service.hpp:79:  BOOST_ASIO_DECL explicit strand_service(boost::asio::io_context& io_context);
/root/boost_1_87_0/boost/asio/detail/strand_service.hpp:118:  boost::asio::detail::mutex mutex_;
/root/boost_1_87_0/boost/asio/detail/string_view.hpp:44:# define BOOST_ASIO_STRING_VIEW_PARAM boost::asio::string_view
/root/boost_1_87_0/boost/asio/detail/thread_group.hpp:87:    boost::asio::detail::thread thread_;
/root/boost_1_87_0/boost/asio/detail/timed_cancel_op.hpp:136:      ptr p = { boost::asio::detail::addressof(handler_), this, this };
/root/boost_1_87_0/boost/asio/detail/timed_cancel_op.hpp:138:      p.h = boost::asio::detail::addressof(handler);
/root/boost_1_87_0/boost/asio/detail/timed_cancel_op.hpp:147:      ptr p = { boost::asio::detail::addressof(handler_), this, this };
/root/boost_1_87_0/boost/asio/detail/timed_cancel_op.hpp:150:      p.h = boost::asio::detail::addressof(handler.handler());
/root/boost_1_87_0/boost/asio/detail/timer_queue.hpp:190:        op->ec_ = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/detail/timer_queue.hpp:213:          op->ec_ = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/detail/wait_handler.hpp:51:    ptr p = { boost::asio::detail::addressof(h->handler_), h, h };
/root/boost_1_87_0/boost/asio/detail/wait_handler.hpp:68:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/win_iocp_file_service.hpp:174:    impl.offset_ += boost::asio::buffer_size(buffers);
/root/boost_1_87_0/boost/asio/detail/win_iocp_file_service.hpp:186:    impl.offset_ += boost::asio::buffer_size(buffers);
/root/boost_1_87_0/boost/asio/detail/win_iocp_file_service.hpp:215:    impl.offset_ += boost::asio::buffer_size(buffers);
/root/boost_1_87_0/boost/asio/detail/win_iocp_file_service.hpp:228:    impl.offset_ += boost::asio::buffer_size(buffers);
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_read_op.hpp:62:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_read_op.hpp:75:      buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_read_op.hpp:82:      ec = boost::asio::error::eof;
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_read_op.hpp:94:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_service.hpp:142:    boost::asio::const_buffer buffer =
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_service.hpp:143:      buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_service.hpp:157:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_service.hpp:162:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_service.hpp:174:        buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_service.hpp:187:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_service.hpp:192:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_service.hpp:204:        buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_service.hpp:222:    boost::asio::mutable_buffer buffer =
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_service.hpp:223:      buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_service.hpp:238:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_service.hpp:243:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_service.hpp:255:        buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_service.hpp:270:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_service.hpp:275:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_service.hpp:287:        buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_service.hpp:322:      uint64_t offset, const boost::asio::const_buffer& buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_service.hpp:327:      uint64_t offset, const boost::asio::const_buffer& buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_service.hpp:332:      uint64_t offset, const boost::asio::mutable_buffer& buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_service.hpp:337:      uint64_t offset, const boost::asio::mutable_buffer& buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_write_op.hpp:61:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_write_op.hpp:74:      buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_handle_write_op.hpp:89:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/win_iocp_io_context.hpp:51:      boost::asio::execution_context& ctx, bool own_thread = true);
/root/boost_1_87_0/boost/asio/detail/win_iocp_null_buffers_op.hpp:68:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/win_iocp_null_buffers_op.hpp:85:        ec = boost::asio::error::operation_aborted;/root/boost_1_87_0/boost/asio/detail/win_iocp_null_buffers_op.hpp:87:        ec = boost::asio::error::connection_reset;
/root/boost_1_87_0/boost/asio/detail/win_iocp_null_buffers_op.hpp:91:      ec = boost::asio::error::connection_refused;
/root/boost_1_87_0/boost/asio/detail/win_iocp_null_buffers_op.hpp:104:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/win_iocp_overlapped_op.hpp:57:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/win_iocp_overlapped_op.hpp:76:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/win_iocp_overlapped_ptr.hpp:84:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/win_iocp_overlapped_ptr.hpp:143:        boost::asio::query(ex, execution::context));
/root/boost_1_87_0/boost/asio/detail/win_iocp_overlapped_ptr.hpp:158:    return &boost::asio::query(ex, execution::context).impl_;
/root/boost_1_87_0/boost/asio/detail/win_iocp_serial_port_service.hpp:140:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_accept_op.hpp:93:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_accept_op.hpp:106:      if (ec == boost::asio::error::connection_aborted
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_accept_op.hpp:154:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_accept_op.hpp:239:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_accept_op.hpp:252:      if (ec == boost::asio::error::connection_aborted
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_accept_op.hpp:302:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_connect_op.hpp:87:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_connect_op.hpp:114:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_recv_op.hpp:66:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_recv_op.hpp:79:      buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_recv_op.hpp:85:        buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_recv_op.hpp:99:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_recvfrom_op.hpp:74:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_recvfrom_op.hpp:87:      buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_recvfrom_op.hpp:107:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_recvmsg_op.hpp:69:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_recvmsg_op.hpp:82:      buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_recvmsg_op.hpp:100:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_send_op.hpp:64:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_send_op.hpp:77:      buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_send_op.hpp:94:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service.hpp:322:    buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service.hpp:353:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service.hpp:358:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service.hpp:366:    buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service.hpp:387:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service.hpp:406:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service.hpp:447:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service.hpp:452:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service.hpp:460:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service.hpp:479:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service.hpp:483:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service.hpp:521:      ec = boost::asio::error::already_open;
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service.hpp:552:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service.hpp:557:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service.hpp:591:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service.hpp:596:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service.hpp:640:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service.hpp:644:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service_base.hpp:204:      ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service_base.hpp:218:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service_base.hpp:225:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service_base.hpp:256:        p.p->ec_ = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service_base.hpp:277:    buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service_base.hpp:302:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service_base.hpp:307:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service_base.hpp:315:    buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service_base.hpp:335:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service_base.hpp:352:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service_base.hpp:378:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service_base.hpp:383:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service_base.hpp:391:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service_base.hpp:411:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service_base.hpp:415:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service_base.hpp:450:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service_base.hpp:482:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service_base.hpp:487:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service_base.hpp:495:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service_base.hpp:514:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service_base.hpp:518:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/win_iocp_socket_service_base.hpp:813:  boost::asio::detail::mutex mutex_;
/root/boost_1_87_0/boost/asio/detail/win_iocp_wait_op.hpp:69:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/win_iocp_wait_op.hpp:86:        ec = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/detail/win_iocp_wait_op.hpp:88:        ec = boost::asio::error::connection_reset;
/root/boost_1_87_0/boost/asio/detail/win_iocp_wait_op.hpp:92:      ec = boost::asio::error::connection_refused;
/root/boost_1_87_0/boost/asio/detail/win_iocp_wait_op.hpp:105:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/win_mutex.hpp:36:  typedef boost::asio::detail::scoped_lock<win_mutex> scoped_lock;/root/boost_1_87_0/boost/asio/detail/win_object_handle_service.hpp:143:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/win_static_mutex.hpp:32:  typedef boost::asio::detail::scoped_lock<win_static_mutex> scoped_lock;
/root/boost_1_87_0/boost/asio/detail/winapp_thread.hpp:52:          boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/winapp_thread.hpp:53:      boost::asio::detail::throw_error(ec, "thread");
/root/boost_1_87_0/boost/asio/detail/wince_thread.hpp:52:          boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/detail/wince_thread.hpp:53:      boost::asio::detail::throw_error(ec, "thread");
/root/boost_1_87_0/boost/asio/detail/winrt_async_manager.hpp:83:          promise->set_value(boost::asio::error::operation_aborted);
/root/boost_1_87_0/boost/asio/detail/winrt_async_manager.hpp:115:          promise->set_value(boost::asio::error::operation_aborted);
/root/boost_1_87_0/boost/asio/detail/winrt_async_manager.hpp:152:            promise->set_value(boost::asio::error::operation_aborted);
/root/boost_1_87_0/boost/asio/detail/winrt_async_manager.hpp:183:          handler->ec_ = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/detail/winrt_async_manager.hpp:218:          handler->ec_ = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/detail/winrt_async_manager.hpp:259:            handler->ec_ = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/detail/winrt_resolve_op.hpp:47:  typedef boost::asio::ip::basic_resolver_query<Protocol> query_type;
/root/boost_1_87_0/boost/asio/detail/winrt_resolve_op.hpp:48:  typedef boost::asio::ip::basic_resolver_results<Protocol> results_type;
/root/boost_1_87_0/boost/asio/detail/winrt_resolve_op.hpp:68:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/winrt_resolve_op.hpp:100:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/winrt_resolver_service.hpp:58:  typedef boost::asio::ip::basic_resolver_query<Protocol> query_type;
/root/boost_1_87_0/boost/asio/detail/winrt_resolver_service.hpp:61:  typedef boost::asio::ip::basic_resolver_results<Protocol> results_type;
/root/boost_1_87_0/boost/asio/detail/winrt_resolver_service.hpp:151:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/winrt_resolver_service.hpp:180:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/winrt_resolver_service.hpp:189:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/winrt_resolver_service.hpp:191:    boost::asio::post(io_ex, detail::bind_handler(handler, ec, results));
/root/boost_1_87_0/boost/asio/detail/winrt_socket_connect_op.hpp:57:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/winrt_socket_connect_op.hpp:74:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/winrt_socket_recv_op.hpp:60:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/winrt_socket_recv_op.hpp:73:      buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/winrt_socket_recv_op.hpp:80:        !buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/winrt_socket_recv_op.hpp:83:      o->ec_ = boost::asio::error::eof;
/root/boost_1_87_0/boost/asio/detail/winrt_socket_recv_op.hpp:94:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/winrt_socket_send_op.hpp:59:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/detail/winrt_socket_send_op.hpp:72:      buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/winrt_socket_send_op.hpp:85:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service.hpp:117:      ec = boost::asio::error::already_open;
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service.hpp:143:      ec = boost::asio::error::already_open;
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service.hpp:158:    ec = boost::asio::error::operation_not_supported;/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service.hpp:186:    ec = boost::asio::error::operation_not_supported;/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service.hpp:232:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service_base.hpp:115:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service_base.hpp:123:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service_base.hpp:131:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service_base.hpp:140:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service_base.hpp:154:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service_base.hpp:168:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service_base.hpp:179:        buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service_base.hpp:187:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service_base.hpp:203:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service_base.hpp:211:        buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service_base.hpp:222:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service_base.hpp:224:    boost::asio::post(io_ex,
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service_base.hpp:235:        buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service_base.hpp:243:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service_base.hpp:260:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service_base.hpp:268:        buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service_base.hpp:279:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service_base.hpp:281:    boost::asio::post(io_ex,
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service_base.hpp:315:      base_implementation_type& impl, const boost::asio::const_buffer& data,
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service_base.hpp:320:      const boost::asio::const_buffer& data, socket_base::message_flags flags,
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service_base.hpp:325:      base_implementation_type& impl, const boost::asio::mutable_buffer& data,
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service_base.hpp:330:      const boost::asio::mutable_buffer& data, socket_base::message_flags flags,
/root/boost_1_87_0/boost/asio/detail/winrt_ssocket_service_base.hpp:346:  boost::asio::detail::mutex mutex_;
/root/boost_1_87_0/boost/asio/detail/winrt_timer_scheduler.hpp:118:  boost::asio::detail::mutex mutex_;
/root/boost_1_87_0/boost/asio/detail/winrt_timer_scheduler.hpp:121:  boost::asio::detail::event event_;
/root/boost_1_87_0/boost/asio/detail/winrt_timer_scheduler.hpp:127:  boost::asio::detail::thread* thread_;
/root/boost_1_87_0/boost/asio/detail/winrt_utils.hpp:86:  using boost::asio::buffer_size;
/root/boost_1_87_0/boost/asio/detail/winrt_utils.hpp:94:  boost::asio::buffer_copy(boost::asio::buffer(bytes, size), buffers);
/root/boost_1_87_0/boost/asio/detail/winsock_init.hpp:85:  //   boost::asio::detail::winsock_init<>::manual manual_winsock_init;
/root/boost_1_87_0/boost/asio/detail/work_dispatcher.hpp:61:      executor_(boost::asio::prefer(handler_ex,
/root/boost_1_87_0/boost/asio/detail/work_dispatcher.hpp:81:    boost::asio::prefer(executor_, execution::allocator(alloc)).execute(
/root/boost_1_87_0/boost/asio/detail/work_dispatcher.hpp:82:        boost::asio::detail::bind_handler(
/root/boost_1_87_0/boost/asio/detail/work_dispatcher.hpp:127:        boost::asio::detail::bind_handler(
/root/boost_1_87_0/boost/asio/disposition.hpp:131:#define BOOST_ASIO_DISPOSITION ::boost::asio::disposition
/root/boost_1_87_0/boost/asio/error.hpp:289:  = boost::asio::error::get_system_category();
/root/boost_1_87_0/boost/asio/error.hpp:292:  = boost::asio::error::get_netdb_category();
/root/boost_1_87_0/boost/asio/error.hpp:295:  = boost::asio::error::get_addrinfo_category();
/root/boost_1_87_0/boost/asio/error.hpp:298:  = boost::asio::error::get_misc_category();
/root/boost_1_87_0/boost/asio/error.hpp:307:template<> struct is_error_code_enum<boost::asio::error::basic_errors>
/root/boost_1_87_0/boost/asio/error.hpp:312:template<> struct is_error_code_enum<boost::asio::error::netdb_errors>
/root/boost_1_87_0/boost/asio/error.hpp:317:template<> struct is_error_code_enum<boost::asio::error::addrinfo_errors>
/root/boost_1_87_0/boost/asio/error.hpp:322:template<> struct is_error_code_enum<boost::asio::error::misc_errors>
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:109:   * boost::asio::require and boost::asio::prefer customisation points.
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:113:   * auto ex2 = boost::asio::require(ex, execution::blocking.possibly); @endcode
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:121:   * boost::asio::prefer customisation point.
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:125:   * auto ex2 = boost::asio::prefer(ex, execution::blocking.possibly); @endcode
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:133:   * boost::asio::query customisation point.
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:137:   * size_t n = boost::asio::query(ex, execution::occupancy); @endcode
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:144:   * Throws boost::asio::bad_executor if the polymorphic wrapper has no target.
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:439:      boost::asio::detail::ref_count_up(impl_->ref_count_);/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:451:      if (boost::asio::detail::ref_count_down(impl_->ref_count_))
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:472:    boost::asio::detail::atomic_count ref_count_;
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:676:        boost::asio::detail::non_const_lvalue<F> f2(f);
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:688:      boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:855:  typedef boost::asio::detail::executor_function function;
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:856:  typedef boost::asio::detail::executor_function_view function_view;
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:944:    boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:950:        boost::asio::can_query<const Ex&, const Prop&>::value
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:954:    boost::asio::query(*static_cast<const Ex*>(ex),
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:961:        !boost::asio::can_query<const Ex&, const Prop&>::value
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:970:        boost::asio::can_query<const Ex&, const Prop&>::value
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:978:            boost::asio::query(*static_cast<const Ex*>(ex),/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:985:        !boost::asio::can_query<const Ex&, const Prop&>::value
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:996:        boost::asio::can_query<const Ex&, const Prop&>::value
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:1003:          boost::asio::query(*static_cast<const Ex*>(ex),
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:1010:        !boost::asio::can_query<const Ex&, const Prop&>::value
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:1022:        boost::asio::can_query<const Ex&, const Prop&>::value
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:1030:          boost::asio::query(*static_cast<const Ex*>(ex),
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:1072:    boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:1082:    return boost::asio::require(*static_cast<const Ex*>(ex),
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:1105:    boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:1115:    return boost::asio::prefer(*static_cast<const Ex*>(ex),
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:1147:    return boost::asio::query(ex, execution::blocking);
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:1196:      sizeof(boost::asio::detail::shared_ptr<void>) + sizeof(void*),
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:1197:      alignment_of<boost::asio::detail::shared_ptr<void>>::value
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:1682:      boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:1706:      boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:1732:      boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:1762:      boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:1768:    return *boost::asio::detail::scoped_ptr<
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:1787:      boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/execution/any_executor.hpp:1809:      boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/execution/blocking.hpp:399:    return boost::asio::query(ex, possibly_t());
/root/boost_1_87_0/boost/asio/execution/blocking.hpp:419:    return boost::asio::query(ex, always_t());
/root/boost_1_87_0/boost/asio/execution/blocking.hpp:442:    return boost::asio::query(ex, never_t());
/root/boost_1_87_0/boost/asio/execution/blocking.hpp:634:    return boost::asio::query(executor_, p);
/root/boost_1_87_0/boost/asio/execution/blocking.hpp:643:    return boost::asio::require(executor_, possibly_t<I>());
/root/boost_1_87_0/boost/asio/execution/blocking.hpp:652:    return boost::asio::require(executor_, never_t<I>());
/root/boost_1_87_0/boost/asio/execution/blocking.hpp:663:        0, boost::asio::require(executor_, p));
/root/boost_1_87_0/boost/asio/execution/blocking.hpp:674:        0, boost::asio::prefer(executor_, p));
/root/boost_1_87_0/boost/asio/execution/blocking_adaptation.hpp:330:    return boost::asio::query(ex, disallowed_t());
/root/boost_1_87_0/boost/asio/execution/blocking_adaptation.hpp:351:    return boost::asio::query(ex, allowed_t());
/root/boost_1_87_0/boost/asio/execution/blocking_adaptation.hpp:551:    return boost::asio::query(executor_, p);
/root/boost_1_87_0/boost/asio/execution/blocking_adaptation.hpp:571:        0, boost::asio::require(executor_, p));
/root/boost_1_87_0/boost/asio/execution/blocking_adaptation.hpp:585:        0, boost::asio::prefer(executor_, p));
/root/boost_1_87_0/boost/asio/execution/blocking_adaptation.hpp:712:    boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/execution/blocking_adaptation.hpp:721:      boost::asio::detail::mutex::scoped_lock lock(state_->mutex_);
/root/boost_1_87_0/boost/asio/execution/blocking_adaptation.hpp:741:  boost::asio::detail::mutex mutex_;
/root/boost_1_87_0/boost/asio/execution/blocking_adaptation.hpp:742:  boost::asio::detail::event event_;
/root/boost_1_87_0/boost/asio/execution/context_as.hpp:120:    return boost::asio::query(ex, context);
/root/boost_1_87_0/boost/asio/execution/executor.hpp:104:#define BOOST_ASIO_EXECUTION_EXECUTOR ::boost::asio::execution::executor
/root/boost_1_87_0/boost/asio/execution/mapping.hpp:383:    return boost::asio::query(ex, thread_t());
/root/boost_1_87_0/boost/asio/execution/mapping.hpp:404:    return boost::asio::query(ex, new_thread_t());
/root/boost_1_87_0/boost/asio/execution/mapping.hpp:427:    return boost::asio::query(ex, other_t());
/root/boost_1_87_0/boost/asio/execution/outstanding_work.hpp:325:    return boost::asio::query(ex, untracked_t());
/root/boost_1_87_0/boost/asio/execution/outstanding_work.hpp:346:    return boost::asio::query(ex, tracked_t());
/root/boost_1_87_0/boost/asio/execution/prefer_only.hpp:114:      decltype(boost::asio::declval<const InnerProperty>().value())
/root/boost_1_87_0/boost/asio/execution/prefer_only.hpp:126:    noexcept(noexcept(boost::asio::declval<const InnerProperty>().value()))
/root/boost_1_87_0/boost/asio/execution/prefer_only.hpp:127:    -> decltype(boost::asio::declval<const InnerProperty>().value())
/root/boost_1_87_0/boost/asio/execution/prefer_only.hpp:233:    return boost::asio::prefer(ex, p.property);
/root/boost_1_87_0/boost/asio/execution/prefer_only.hpp:252:    return boost::asio::query(ex, p.property);
/root/boost_1_87_0/boost/asio/execution/relationship.hpp:324:    return boost::asio::query(ex, fork_t());
/root/boost_1_87_0/boost/asio/execution/relationship.hpp:345:    return boost::asio::query(ex, continuation_t());
/root/boost_1_87_0/boost/asio/execution_context.hpp:248:   * @throws boost::asio::service_already_exists Thrown if a service of the
/root/boost_1_87_0/boost/asio/execution_context.hpp:266:   * @throws boost::asio::service_already_exists Thrown if a service of the
/root/boost_1_87_0/boost/asio/execution_context.hpp:269:   * @throws boost::asio::invalid_service_owner Thrown if the service's owning
/root/boost_1_87_0/boost/asio/execution_context.hpp:291:  boost::asio::detail::service_registry* service_registry_;
/root/boost_1_87_0/boost/asio/execution_context.hpp:334:  friend class boost::asio::detail::service_registry;
/root/boost_1_87_0/boost/asio/executor.hpp:329:      boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/executor.hpp:354:BOOST_ASIO_USES_ALLOCATOR(boost::asio::executor)
/root/boost_1_87_0/boost/asio/executor_work_guard.hpp:170:    new (&work_) work_type(boost::asio::prefer(executor_,
/root/boost_1_87_0/boost/asio/executor_work_guard.hpp:180:      new (&work_) work_type(boost::asio::prefer(executor_,
/root/boost_1_87_0/boost/asio/experimental/basic_channel.hpp:108:  typedef detail::channel_service<boost::asio::detail::null_mutex> service_type;
/root/boost_1_87_0/boost/asio/experimental/basic_channel.hpp:115:      boost::asio::detail::completion_payload<PayloadSignatures...>*,
/root/boost_1_87_0/boost/asio/experimental/basic_channel.hpp:151:    : service_(&boost::asio::use_service<service_type>(/root/boost_1_87_0/boost/asio/experimental/basic_channel.hpp:176:    : service_(&boost::asio::use_service<service_type>(context)),
/root/boost_1_87_0/boost/asio/experimental/basic_channel.hpp:317:   * @c boost::asio::experimental::error::channel_cancelled. Outstanding receive
/root/boost_1_87_0/boost/asio/experimental/basic_channel.hpp:432:    return boost::asio::query(t, execution::context);
/root/boost_1_87_0/boost/asio/experimental/basic_channel.hpp:462:      boost::asio::detail::non_const_lvalue<SendHandler> handler2(handler);
/root/boost_1_87_0/boost/asio/experimental/basic_channel.hpp:490:      boost::asio::detail::non_const_lvalue<ReceiveHandler> handler2(handler);
/root/boost_1_87_0/boost/asio/experimental/basic_concurrent_channel.hpp:108:  typedef detail::channel_service<boost::asio::detail::mutex> service_type;
/root/boost_1_87_0/boost/asio/experimental/basic_concurrent_channel.hpp:115:      boost::asio::detail::completion_payload<PayloadSignatures...>*,
/root/boost_1_87_0/boost/asio/experimental/basic_concurrent_channel.hpp:152:    : service_(&boost::asio::use_service<service_type>(
/root/boost_1_87_0/boost/asio/experimental/basic_concurrent_channel.hpp:178:    : service_(&boost::asio::use_service<service_type>(context)),
/root/boost_1_87_0/boost/asio/experimental/basic_concurrent_channel.hpp:324:   * @c boost::asio::experimental::error::channel_cancelled. Outstanding receive
/root/boost_1_87_0/boost/asio/experimental/basic_concurrent_channel.hpp:432:    return boost::asio::query(t, execution::context);
/root/boost_1_87_0/boost/asio/experimental/basic_concurrent_channel.hpp:462:      boost::asio::detail::non_const_lvalue<SendHandler> handler2(handler);
/root/boost_1_87_0/boost/asio/experimental/basic_concurrent_channel.hpp:490:      boost::asio::detail::non_const_lvalue<ReceiveHandler> handler2(handler);
/root/boost_1_87_0/boost/asio/experimental/channel_error.hpp:42:  = boost::asio::experimental::error::get_channel_category();
/root/boost_1_87_0/boost/asio/experimental/channel_error.hpp:58:    boost::asio::experimental::error::channel_errors>
/root/boost_1_87_0/boost/asio/experimental/co_composed.hpp:27:using boost::asio::co_composed;
/root/boost_1_87_0/boost/asio/experimental/coro.hpp:55:  /// The traits of the coroutine. See boost::asio::experimental::coro_traits
/root/boost_1_87_0/boost/asio/experimental/coro.hpp:160:        boost::asio::dispatch(coro_->get_executor(), destroyer{handle});
/root/boost_1_87_0/boost/asio/experimental/coro.hpp:278:template<typename T, typename Executor = boost::asio::any_io_executor,
/root/boost_1_87_0/boost/asio/experimental/coro.hpp:283:template<typename T, typename Executor = boost::asio::any_io_executor,
/root/boost_1_87_0/boost/asio/experimental/detail/channel_operation.hpp:79:  friend class boost::asio::detail::op_queue_access;
/root/boost_1_87_0/boost/asio/experimental/detail/channel_operation.hpp:99:    : executor_(boost::asio::prefer(ex, execution::outstanding_work.tracked))
/root/boost_1_87_0/boost/asio/experimental/detail/channel_operation.hpp:111:    (boost::asio::detail::initiate_post_with_executor<IoExecutor>(io_exec))(
/root/boost_1_87_0/boost/asio/experimental/detail/channel_operation.hpp:121:    boost::asio::prefer(executor_,
/root/boost_1_87_0/boost/asio/experimental/detail/channel_operation.hpp:148:    : executor_(boost::asio::prefer(ex, execution::outstanding_work.tracked))
/root/boost_1_87_0/boost/asio/experimental/detail/channel_operation.hpp:163:    boost::asio::prefer(
/root/boost_1_87_0/boost/asio/experimental/detail/channel_operation.hpp:164:        boost::asio::require(executor_, execution::blocking.never),
/root/boost_1_87_0/boost/asio/experimental/detail/channel_operation.hpp:175:    boost::asio::prefer(executor_,
/root/boost_1_87_0/boost/asio/experimental/detail/channel_operation.hpp:272:    (boost::asio::detail::initiate_dispatch_with_executor<immediate_ex_type>(
/root/boost_1_87_0/boost/asio/experimental/detail/channel_operation.hpp:288:    (boost::asio::detail::initiate_post_with_executor<
/root/boost_1_87_0/boost/asio/experimental/detail/channel_operation.hpp:336:    (boost::asio::detail::initiate_dispatch_with_executor<immediate_ex_type>(
/root/boost_1_87_0/boost/asio/experimental/detail/channel_receive_op.hpp:77:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/experimental/detail/channel_receive_op.hpp:95:      boost::asio::detail::completion_payload_handler<Payload, Handler> handler(
/root/boost_1_87_0/boost/asio/experimental/detail/channel_receive_op.hpp:97:      p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/experimental/detail/channel_receive_op.hpp:110:      boost::asio::detail::binder0<Handler> handler(o->handler_);
/root/boost_1_87_0/boost/asio/experimental/detail/channel_receive_op.hpp:111:      p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/experimental/detail/channel_send_functions.hpp:40:    is_constructible<boost::asio::detail::completion_message<R(Args...)>,
/root/boost_1_87_0/boost/asio/experimental/detail/channel_send_functions.hpp:45:    typedef boost::asio::detail::completion_message<R(Args...)> message_type;
/root/boost_1_87_0/boost/asio/experimental/detail/channel_send_functions.hpp:53:    is_constructible<boost::asio::detail::completion_message<R(Args...)>,
/root/boost_1_87_0/boost/asio/experimental/detail/channel_send_functions.hpp:58:    typedef boost::asio::detail::completion_message<R(Args...)> message_type;
/root/boost_1_87_0/boost/asio/experimental/detail/channel_send_functions.hpp:66:    is_constructible<boost::asio::detail::completion_message<R(Args...)>,
/root/boost_1_87_0/boost/asio/experimental/detail/channel_send_functions.hpp:71:    typedef boost::asio::detail::completion_message<R(Args...)> message_type;
/root/boost_1_87_0/boost/asio/experimental/detail/channel_send_functions.hpp:79:    is_constructible<boost::asio::detail::completion_message<R(Args...)>,
/root/boost_1_87_0/boost/asio/experimental/detail/channel_send_functions.hpp:84:    typedef boost::asio::detail::completion_message<R(Args...)> message_type;
/root/boost_1_87_0/boost/asio/experimental/detail/channel_send_functions.hpp:104:    typedef boost::asio::detail::completion_message<R(Args...)> message_type;
/root/boost_1_87_0/boost/asio/experimental/detail/channel_send_functions.hpp:123:    is_constructible<boost::asio::detail::completion_message<R(Args...)>,
/root/boost_1_87_0/boost/asio/experimental/detail/channel_send_functions.hpp:128:    typedef boost::asio::detail::completion_message<R(Args...)> message_type;
/root/boost_1_87_0/boost/asio/experimental/detail/channel_send_functions.hpp:136:    is_constructible<boost::asio::detail::completion_message<R(Args...)>,
/root/boost_1_87_0/boost/asio/experimental/detail/channel_send_functions.hpp:141:    typedef boost::asio::detail::completion_message<R(Args...)> message_type;
/root/boost_1_87_0/boost/asio/experimental/detail/channel_send_functions.hpp:149:    is_constructible<boost::asio::detail::completion_message<R(Args...)>,
/root/boost_1_87_0/boost/asio/experimental/detail/channel_send_functions.hpp:154:    typedef boost::asio::detail::completion_message<R(Args...)> message_type;
/root/boost_1_87_0/boost/asio/experimental/detail/channel_send_functions.hpp:162:    is_constructible<boost::asio::detail::completion_message<R(Args...)>,
/root/boost_1_87_0/boost/asio/experimental/detail/channel_send_functions.hpp:167:    typedef boost::asio::detail::completion_message<R(Args...)> message_type;
/root/boost_1_87_0/boost/asio/experimental/detail/channel_send_functions.hpp:187:    typedef boost::asio::detail::completion_message<R(Args...)> message_type;
/root/boost_1_87_0/boost/asio/experimental/detail/channel_send_op.hpp:92:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/root/boost_1_87_0/boost/asio/experimental/detail/channel_send_op.hpp:120:    boost::asio::detail::binder1<Handler, boost::system::error_code>
/root/boost_1_87_0/boost/asio/experimental/detail/channel_send_op.hpp:122:    p.h = boost::asio::detail::addressof(handler.handler_);
/root/boost_1_87_0/boost/asio/experimental/detail/channel_service.hpp:40:  : public boost::asio::detail::execution_context_service_base<
/root/boost_1_87_0/boost/asio/experimental/detail/channel_service.hpp:74:    boost::asio::detail::op_queue<channel_operation> waiters_;
/root/boost_1_87_0/boost/asio/experimental/detail/channel_service.hpp:89:  channel_service(boost::asio::execution_context& ctx);
/root/boost_1_87_0/boost/asio/experimental/detail/channel_service.hpp:160:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/experimental/detail/channel_service.hpp:166:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/experimental/detail/channel_service.hpp:198:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/experimental/detail/channel_service.hpp:204:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/root/boost_1_87_0/boost/asio/experimental/detail/channel_service.hpp:237:          boost::asio::detail::completion_message<Signature>(0,
/root/boost_1_87_0/boost/asio/experimental/detail/channel_service.hpp:288:  boost::asio::detail::mutex mutex_;
/root/boost_1_87_0/boost/asio/experimental/detail/channel_service.hpp:313:        boost::asio::detail::completion_payload<Signatures...>,
/root/boost_1_87_0/boost/asio/experimental/detail/channel_service.hpp:314:        boost::asio::detail::completion_payload<
/root/boost_1_87_0/boost/asio/experimental/detail/channel_service.hpp:325:        boost::asio::detail::completion_payload<
/root/boost_1_87_0/boost/asio/experimental/detail/channel_service.hpp:329:        boost::asio::detail::completion_payload<
/root/boost_1_87_0/boost/asio/experimental/detail/channel_service.hpp:410:        boost::asio::detail::completion_payload<R()>,
/root/boost_1_87_0/boost/asio/experimental/detail/channel_service.hpp:411:        boost::asio::detail::completion_payload<
/root/boost_1_87_0/boost/asio/experimental/detail/channel_service.hpp:422:        boost::asio::detail::completion_payload<
/root/boost_1_87_0/boost/asio/experimental/detail/channel_service.hpp:426:        boost::asio::detail::completion_payload<
/root/boost_1_87_0/boost/asio/experimental/detail/channel_service.hpp:471:    return payload_type(boost::asio::detail::completion_message<R()>(0));
/root/boost_1_87_0/boost/asio/experimental/detail/channel_service.hpp:513:        boost::asio::detail::completion_payload<R(boost::system::error_code)>,
/root/boost_1_87_0/boost/asio/experimental/detail/channel_service.hpp:514:        boost::asio::detail::completion_payload<
/root/boost_1_87_0/boost/asio/experimental/detail/channel_service.hpp:525:        boost::asio::detail::completion_payload<
/root/boost_1_87_0/boost/asio/experimental/detail/channel_service.hpp:529:        boost::asio::detail::completion_payload<
/root/boost_1_87_0/boost/asio/experimental/detail/coro_completion_handler.hpp:117:    boost::asio::detail::throw_exception(
/root/boost_1_87_0/boost/asio/experimental/detail/coro_completion_handler.hpp:145:    boost::asio::detail::throw_exception(
/root/boost_1_87_0/boost/asio/experimental/detail/coro_completion_handler.hpp:159:    boost::asio::detail::throw_exception(
/root/boost_1_87_0/boost/asio/experimental/detail/impl/channel_service.hpp:27:    boost::asio::execution_context& ctx)
/root/boost_1_87_0/boost/asio/experimental/detail/impl/channel_service.hpp:28:  : boost::asio::detail::execution_context_service_base<channel_service>(ctx),
/root/boost_1_87_0/boost/asio/experimental/detail/impl/channel_service.hpp:38:  boost::asio::detail::op_queue<channel_operation> ops;
/root/boost_1_87_0/boost/asio/experimental/detail/impl/channel_service.hpp:39:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/experimental/detail/impl/channel_service.hpp:58:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/experimental/detail/impl/channel_service.hpp:90:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/experimental/detail/impl/channel_service.hpp:111:    boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/experimental/detail/impl/channel_service.hpp:132:    boost::asio::detail::mutex::scoped_lock lock(other_service.mutex_);
/root/boost_1_87_0/boost/asio/experimental/detail/impl/channel_service.hpp:146:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/root/boost_1_87_0/boost/asio/experimental/detail/impl/channel_service.hpp:268:  boost::asio::detail::op_queue<channel_operation> other_ops;
/root/boost_1_87_0/boost/asio/experimental/detail/impl/channel_service.hpp:520:      boost::asio::detail::non_const_lvalue<Handler> handler2(handler);
/root/boost_1_87_0/boost/asio/experimental/detail/impl/channel_service.hpp:521:      boost::asio::detail::completion_payload_handler<
/root/boost_1_87_0/boost/asio/experimental/detail/impl/channel_service.hpp:536:      boost::asio::detail::non_const_lvalue<Handler> handler2(handler);
/root/boost_1_87_0/boost/asio/experimental/detail/impl/channel_service.hpp:537:      boost::asio::detail::completion_payload_handler<
/root/boost_1_87_0/boost/asio/experimental/detail/partial_promise.hpp:79:    return boost::asio::detail::suspend_always{};
/root/boost_1_87_0/boost/asio/experimental/detail/partial_promise.hpp:90:      auto await_suspend(boost::asio::detail::coroutine_handle<>) noexcept
/root/boost_1_87_0/boost/asio/experimental/detail/partial_promise.hpp:125:    boost::asio::experimental::detail::partial_coro,
/root/boost_1_87_0/boost/asio/experimental/detail/partial_promise.hpp:129:    boost::asio::experimental::detail::partial_promise<
/root/boost_1_87_0/boost/asio/experimental/detail/partial_promise.hpp:130:      boost::asio::associated_allocator_t<Completion>>;
/root/boost_1_87_0/boost/asio/experimental/detail/partial_promise.hpp:141:    boost::asio::experimental::detail::partial_coro,
/root/boost_1_87_0/boost/asio/experimental/detail/partial_promise.hpp:145:    boost::asio::experimental::detail::partial_promise<
/root/boost_1_87_0/boost/asio/experimental/detail/partial_promise.hpp:146:      boost::asio::associated_allocator_t<Completion>>;
/root/boost_1_87_0/boost/asio/experimental/detail/partial_promise.hpp:163:  post(exec, boost::asio::append(std::move(token), std::move(args)...));
/root/boost_1_87_0/boost/asio/experimental/detail/partial_promise.hpp:172:  post(ctx, boost::asio::append(std::move(token), std::move(args)...));
/root/boost_1_87_0/boost/asio/experimental/detail/partial_promise.hpp:181:  dispatch(exec, boost::asio::append(std::move(token), std::move(args)...));
/root/boost_1_87_0/boost/asio/experimental/detail/partial_promise.hpp:190:  dispatch(ctx, boost::asio::append(std::move(token), std::move(args)...));
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:104:    return boost::asio::error::fault;
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:109:    return boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:114:    return boost::asio::error::interrupted;
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:119:    return boost::asio::error::broken_pipe;
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:180:          boost::asio::detail::throw_error(
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:181:              boost::asio::error::operation_aborted, "coro-cancelled");
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:197:              boost::asio::prefer(hp.get_executor(),
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:222:            boost::asio::dispatch(e, [ct, st = st]() mutable
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:600:  using cancellation_slot_type = boost::asio::cancellation_slot;
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:704:      const boost::asio::cancellation_state& value;
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:715:      boost::asio::cancellation_state await_resume() const noexcept
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:903:      boost::asio::detail::throw_error(
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:904:          boost::asio::error::operation_aborted, "coro-cancelled");
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:969:        boost::asio::detail::throw_error(
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:970:            boost::asio::error::operation_aborted, "coro-cancelled");
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:985:          boost::asio::prefer(hp.get_executor(),
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:1011:          boost::asio::dispatch(e,
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:1051:  typedef boost::asio::cancellation_slot cancellation_slot_type;
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:1120:        return boost::asio::post(exec,
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:1121:            boost::asio::append(std::move(h),
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:1126:        return boost::asio::post(exec,
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:1127:            boost::asio::append(std::move(h),
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:1130:        return boost::asio::post(exec,
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:1131:            boost::asio::append(std::move(h),
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:1153:        return boost::asio::post(exec,
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:1154:            boost::asio::append(std::move(h),
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:1160:        return boost::asio::post(exec,
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:1161:            boost::asio::append(std::move(h),
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:1164:        return boost::asio::post(exec,
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:1165:            boost::asio::append(std::move(h),
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:1180:    const auto exec = boost::asio::prefer(
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:1187:    boost::asio::dispatch(get_executor(),
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:1196:    const auto exec = boost::asio::prefer(
/root/boost_1_87_0/boost/asio/experimental/impl/coro.hpp:1203:    boost::asio::dispatch(get_executor(),
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:98:          boost::asio::prefer(
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:99:            boost::asio::get_associated_executor(handler_),
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:111:    this->invoke(boost::asio::detail::make_index_sequence<sizeof...(Ops)>());
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:115:  void invoke(boost::asio::detail::index_sequence<I...>)
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:124:        boost::asio::detail::index_sequence_for<Args...>());
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:129:      boost::asio::detail::index_sequence<I...>)
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:176:  boost::asio::cancellation_signal cancellation_signals_[sizeof...(Ops)];
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:190:  typedef boost::asio::cancellation_slot cancellation_slot_type;
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:231:      boost::asio::dispatch(std::move(state_->handler_));
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:245:  typedef boost::asio::cancellation_slot cancellation_slot_type;
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:284:        boost::asio::cancellation_signal* sig = &signal_;
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:285:        boost::asio::dispatch(executor_,
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:291:    boost::asio::cancellation_signal signal_;
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:308:    ex_type ex = boost::asio::get_associated_executor(op);
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:363:    std::tuple<Ops...>& ops, boost::asio::detail::index_sequence<I...>)
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:368:    = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:373:      boost::asio::detail::recycling_allocator<state_type,
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:374:        boost::asio::detail::thread_info_base::parallel_group_tag>(),
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:420:          boost::asio::prefer(
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:421:            boost::asio::get_associated_executor(handler_),
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:440:        boost::asio::detail::make_index_sequence</root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:445:  void invoke(boost::asio::detail::index_sequence<I...>)
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:500:            boost::asio::cancellation_signal)(allocator)),
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:528:  std::deque<boost::asio::cancellation_signal,
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:529:    BOOST_ASIO_REBIND_ALLOC(Allocator, boost::asio::cancellation_signal)>
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:544:  typedef boost::asio::cancellation_slot cancellation_slot_type;
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:588:      boost::asio::dispatch(std::move(state_->handler_));
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:605:  typedef boost::asio::cancellation_slot cancellation_slot_type;
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:646:        boost::asio::cancellation_signal* sig = &signal_;
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:647:        boost::asio::dispatch(executor_,
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:654:    boost::asio::cancellation_signal signal_;
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:695:    = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:704:      boost::asio::detail::recycling_allocator<state_type,
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:705:        boost::asio::detail::thread_info_base::parallel_group_tag>(),
/root/boost_1_87_0/boost/asio/experimental/impl/parallel_group.hpp:713:    ex_type ex = boost::asio::get_associated_executor(op);
/root/boost_1_87_0/boost/asio/experimental/impl/promise.hpp:32:    typename Executor = boost::asio::any_io_executor,
/root/boost_1_87_0/boost/asio/experimental/impl/promise.hpp:69:  void apply_impl(Func f, boost::asio::detail::index_sequence<Idx...>)
/root/boost_1_87_0/boost/asio/experimental/impl/promise.hpp:85:        boost::asio::detail::make_index_sequence<sizeof...(Ts)>{});
/root/boost_1_87_0/boost/asio/experimental/impl/promise.hpp:103:        typename boost::asio::decay<Alloc>::type>::template
/root/boost_1_87_0/boost/asio/experimental/impl/promise.hpp:121:  typename boost::asio::aligned_storage<sizeof(void*) * 4,
/root/boost_1_87_0/boost/asio/experimental/impl/promise.hpp:131:      typename boost::asio::decay<Alloc>::type, Handler>;
/root/boost_1_87_0/boost/asio/experimental/impl/promise.hpp:133:      typename boost::asio::decay<Alloc>::type>::template rebind_alloc<impl_t>;
/root/boost_1_87_0/boost/asio/experimental/impl/promise.hpp:149:  void complete_with_result_impl(boost::asio::detail::index_sequence<Idx...>)
/root/boost_1_87_0/boost/asio/experimental/impl/promise.hpp:158:        boost::asio::detail::make_index_sequence<sizeof...(Ts)>{});
/root/boost_1_87_0/boost/asio/experimental/impl/promise.hpp:167:            boost::asio::error::operation_aborted)),
/root/boost_1_87_0/boost/asio/experimental/impl/promise.hpp:174:    complete(boost::asio::error::operation_aborted, T_{}...);
/root/boost_1_87_0/boost/asio/experimental/impl/promise.hpp:190:    typename Executor = boost::asio::any_io_executor,
/root/boost_1_87_0/boost/asio/experimental/impl/use_coro.hpp:36:      boost::asio::associated_executor_t<Initiation>, Allocator>
/root/boost_1_87_0/boost/asio/experimental/impl/use_coro.hpp:43:  static auto initiate_impl(boost::asio::detail::initiation_archetype<R()>,
/root/boost_1_87_0/boost/asio/experimental/impl/use_coro.hpp:46:      boost::asio::any_io_executor, Allocator>;
/root/boost_1_87_0/boost/asio/experimental/impl/use_coro.hpp:65:      boost::asio::associated_executor_t<Initiation>, Allocator>
/root/boost_1_87_0/boost/asio/experimental/impl/use_coro.hpp:74:      boost::asio::detail::initiation_archetype<R(boost::system::error_code)>,
/root/boost_1_87_0/boost/asio/experimental/impl/use_coro.hpp:77:      boost::asio::any_io_executor, Allocator>;
/root/boost_1_87_0/boost/asio/experimental/impl/use_coro.hpp:96:      boost::asio::associated_executor_t<Initiation>, Allocator>
/root/boost_1_87_0/boost/asio/experimental/impl/use_coro.hpp:105:      boost::asio::detail::initiation_archetype<R(std::exception_ptr)>,
/root/boost_1_87_0/boost/asio/experimental/impl/use_coro.hpp:108:      boost::asio::any_io_executor, Allocator>;
/root/boost_1_87_0/boost/asio/experimental/impl/use_coro.hpp:127:      boost::asio::associated_executor_t<Initiation>, Allocator>
/root/boost_1_87_0/boost/asio/experimental/impl/use_coro.hpp:134:  static auto initiate_impl(boost::asio::detail::initiation_archetype<R(T)>,
/root/boost_1_87_0/boost/asio/experimental/impl/use_coro.hpp:137:      boost::asio::any_io_executor, Allocator>;
/root/boost_1_87_0/boost/asio/experimental/impl/use_coro.hpp:156:      boost::asio::associated_executor_t<Initiation>, Allocator>
/root/boost_1_87_0/boost/asio/experimental/impl/use_coro.hpp:165:      boost::asio::detail::initiation_archetype<
/root/boost_1_87_0/boost/asio/experimental/impl/use_coro.hpp:168:    -> experimental::coro<void(), T, boost::asio::any_io_executor, Allocator>;
/root/boost_1_87_0/boost/asio/experimental/impl/use_coro.hpp:187:      boost::asio::associated_executor_t<Initiation>, Allocator>
/root/boost_1_87_0/boost/asio/experimental/impl/use_coro.hpp:196:      boost::asio::detail::initiation_archetype<R(std::exception_ptr, T)>,
/root/boost_1_87_0/boost/asio/experimental/impl/use_coro.hpp:198:    -> experimental::coro<void(), T, boost::asio::any_io_executor, Allocator>;
/root/boost_1_87_0/boost/asio/experimental/impl/use_promise.hpp:49:      boost::asio::associated_executor_t<Initiation>, Allocator>
/root/boost_1_87_0/boost/asio/experimental/impl/use_promise.hpp:53:      boost::asio::associated_executor_t<Initiation>, Allocator>;
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:53:  typedef boost::asio::detail::array<std::size_t, N> order_type;
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:63:  typedef boost::asio::detail::array<std::size_t, N> order_type;
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:72:  typedef boost::asio::detail::array<std::size_t, N> order_type;
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:84:    std::tuple<Ops...>& ops, boost::asio::detail::index_sequence<I...>);
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:139: * See the documentation for boost::asio::experimental::make_parallel_group for
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:153:          ops, boost::asio::detail::index_sequence_for<Ops...>());
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:178:   * operations, it must return a boost::asio::cancellation_type value other
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:179:   * than <tt>boost::asio::cancellation_type::none</tt>.
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:187:   * @li boost::asio::experimental::wait_for_all
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:188:   * @li boost::asio::experimental::wait_for_one
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:189:   * @li boost::asio::experimental::wait_for_one_error/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:190:   * @li boost::asio::experimental::wait_for_one_success
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:197:      boost::asio::async_initiate<CompletionToken, signature>(
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:201:    return boost::asio::async_initiate<CompletionToken, signature>(
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:210: * @code boost::asio::experimental::make_parallel_group(
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:211: *    in.async_read_some(boost::asio::buffer(data)),
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:214: *    boost::asio::experimental::wait_for_all(),
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:240: * @code boost::asio::experimental::make_parallel_group(
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:243: *      return in.async_read_some(boost::asio::buffer(data), token);
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:250: *    boost::asio::experimental::wait_for_all(),
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:284: * See the documentation for boost::asio::experimental::make_parallel_group for
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:328:   * operations, it must return a boost::asio::cancellation_type value other
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:329:   * than <tt>boost::asio::cancellation_type::none</tt>.
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:338:   * @li boost::asio::experimental::wait_for_all
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:339:   * @li boost::asio::experimental::wait_for_one
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:340:   * @li boost::asio::experimental::wait_for_one_error/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:341:   * @li boost::asio::experimental::wait_for_one_success
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:348:      boost::asio::async_initiate<CompletionToken, signature>(
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:353:    return boost::asio::async_initiate<CompletionToken, signature>(
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:367: *   decltype(socket1.async_read_some(boost::asio::buffer(data1)));
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:370: * ops.push_back(socket1.async_read_some(boost::asio::buffer(data1)));
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:371: * ops.push_back(socket2.async_read_some(boost::asio::buffer(data2)));
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:373: * boost::asio::experimental::make_parallel_group(ops).async_wait(
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:374: *     boost::asio::experimental::wait_for_all(),
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:410: *   decltype(socket1.async_read_some(boost::asio::buffer(data1)));
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:413: * ops.push_back(socket1.async_read_some(boost::asio::buffer(data1)));
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:414: * ops.push_back(socket2.async_read_some(boost::asio::buffer(data2)));
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:416: * boost::asio::experimental::make_parallel_group(
/root/boost_1_87_0/boost/asio/experimental/parallel_group.hpp:421: *     boost::asio::experimental::wait_for_all(),
/root/boost_1_87_0/boost/asio/experimental/promise.hpp:85: * awaitable<void> read_write_some(boost::asio::ip::tcp::socket & sock,
/root/boost_1_87_0/boost/asio/experimental/promise.hpp:86: *     boost::asio::mutable_buffer read_buf, boost::asio::const_buffer to_write)
/root/boost_1_87_0/boost/asio/experimental/promise.hpp:88: *   auto p = boost::asio::async_read(read_buf,
/root/boost_1_87_0/boost/asio/experimental/promise.hpp:89: *       boost::asio::experimental::use_promise);
/root/boost_1_87_0/boost/asio/experimental/promise.hpp:90: *   co_await boost::asio::async_write_some(to_write);
/root/boost_1_87_0/boost/asio/experimental/promise.hpp:96:    typename Executor = boost::asio::any_io_executor,
/root/boost_1_87_0/boost/asio/experimental/promise.hpp:112:      boost::asio::dispatch(impl_->executor,
/root/boost_1_87_0/boost/asio/experimental/promise.hpp:175:        auto exec = boost::asio::get_associated_executor(
/root/boost_1_87_0/boost/asio/experimental/promise.hpp:178:        boost::asio::post(exec,
/root/boost_1_87_0/boost/asio/experimental/use_coro.hpp:52: * token @c boost::asio::deferred for that) but does provide type erasure, as it
/root/boost_1_87_0/boost/asio/experimental/use_coro.hpp:68:      , boost::asio::detail::source_location location =
/root/boost_1_87_0/boost/asio/experimental/use_coro.hpp:69:        boost::asio::detail::source_location::current()
/root/boost_1_87_0/boost/asio/experimental/use_coro.hpp:174: * See the documentation for boost::asio::use_coro_t for a usage example.
/root/boost_1_87_0/boost/asio/generic/basic_endpoint.hpp:29: * The boost::asio::generic::basic_endpoint class template describes an endpoint
/root/boost_1_87_0/boost/asio/generic/basic_endpoint.hpp:54:  typedef boost::asio::detail::socket_addr_type data_type;
/root/boost_1_87_0/boost/asio/generic/basic_endpoint.hpp:182:  boost::asio::generic::detail::endpoint impl_;
/root/boost_1_87_0/boost/asio/generic/datagram_protocol.hpp:34: * The boost::asio::generic::datagram_protocol class contains flags necessary
/root/boost_1_87_0/boost/asio/generic/datagram_protocol.hpp:41: * @code datagram_protocol p(boost::asio::ip::udp::v4()); @endcode
/root/boost_1_87_0/boost/asio/generic/datagram_protocol.hpp:72:      boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/generic/detail/endpoint.hpp:71:  boost::asio::detail::socket_addr_type* data()
/root/boost_1_87_0/boost/asio/generic/detail/endpoint.hpp:77:  const boost::asio::detail::socket_addr_type* data() const/root/boost_1_87_0/boost/asio/generic/detail/endpoint.hpp:94:    return sizeof(boost::asio::detail::sockaddr_storage_type);
/root/boost_1_87_0/boost/asio/generic/detail/endpoint.hpp:109:    boost::asio::detail::socket_addr_type base;
/root/boost_1_87_0/boost/asio/generic/detail/endpoint.hpp:110:    boost::asio::detail::sockaddr_storage_type generic;
/root/boost_1_87_0/boost/asio/generic/detail/impl/endpoint.ipp:48:  if (new_size > sizeof(boost::asio::detail::sockaddr_storage_type))
/root/boost_1_87_0/boost/asio/generic/detail/impl/endpoint.ipp:50:    boost::system::error_code ec(boost::asio::error::invalid_argument);
/root/boost_1_87_0/boost/asio/generic/detail/impl/endpoint.ipp:51:    boost::asio::detail::throw_error(ec);
/root/boost_1_87_0/boost/asio/generic/detail/impl/endpoint.ipp:90:  if (sock_addr_size > sizeof(boost::asio::detail::sockaddr_storage_type))
/root/boost_1_87_0/boost/asio/generic/detail/impl/endpoint.ipp:92:    boost::system::error_code ec(boost::asio::error::invalid_argument);
/root/boost_1_87_0/boost/asio/generic/detail/impl/endpoint.ipp:93:    boost::asio::detail::throw_error(ec);
/root/boost_1_87_0/boost/asio/generic/detail/impl/endpoint.ipp:97:  memset(&data_.generic, 0, sizeof(boost::asio::detail::sockaddr_storage_type));
/root/boost_1_87_0/boost/asio/generic/raw_protocol.hpp:34: * The boost::asio::generic::raw_protocol class contains flags necessary for
/root/boost_1_87_0/boost/asio/generic/raw_protocol.hpp:41: * @code raw_protocol p(boost::asio::ip::icmp::v4()); @endcode/root/boost_1_87_0/boost/asio/generic/raw_protocol.hpp:72:      boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/generic/seq_packet_protocol.hpp:34: * The boost::asio::generic::seq_packet_protocol class contains flags necessary
/root/boost_1_87_0/boost/asio/generic/seq_packet_protocol.hpp:71:      boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/generic/stream_protocol.hpp:35: * The boost::asio::generic::stream_protocol class contains flags necessary for
/root/boost_1_87_0/boost/asio/generic/stream_protocol.hpp:42: * @code stream_protocol p(boost::asio::ip::tcp::v4()); @endcode
/root/boost_1_87_0/boost/asio/generic/stream_protocol.hpp:73:      boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/immediate.hpp:71: * boost::asio::dispatch() on the handler's associated immediate executor.
/root/boost_1_87_0/boost/asio/immediate.hpp:74: * executor, then the handler is submitted as if by calling boost::asio::post()
/root/boost_1_87_0/boost/asio/immediate.hpp:110: * boost::asio::dispatch() on the handler's associated immediate executor.
/root/boost_1_87_0/boost/asio/immediate.hpp:113: * executor, then the handler is submitted as if by calling boost::asio::post()
/root/boost_1_87_0/boost/asio/impl/awaitable.hpp:94:    return boost::asio::detail::thread_info_base::allocate(
/root/boost_1_87_0/boost/asio/impl/awaitable.hpp:95:        boost::asio::detail::thread_info_base::awaitable_frame_tag(),
/root/boost_1_87_0/boost/asio/impl/awaitable.hpp:96:        boost::asio::detail::thread_context::top_of_thread_call_stack(),
/root/boost_1_87_0/boost/asio/impl/awaitable.hpp:102:    boost::asio::detail::thread_info_base::deallocate(
/root/boost_1_87_0/boost/asio/impl/awaitable.hpp:103:        boost::asio::detail::thread_info_base::awaitable_frame_tag(),
/root/boost_1_87_0/boost/asio/impl/awaitable.hpp:104:        boost::asio::detail::thread_context::top_of_thread_call_stack(),
/root/boost_1_87_0/boost/asio/impl/awaitable.hpp:171:        throw_error(boost::asio::error::operation_aborted, "co_await");
/root/boost_1_87_0/boost/asio/impl/awaitable.hpp:187:        throw_error(boost::asio::error::operation_aborted, "co_await");
/root/boost_1_87_0/boost/asio/impl/awaitable.hpp:650:  boost::asio::cancellation_slot parent_cancellation_slot_;
/root/boost_1_87_0/boost/asio/impl/awaitable.hpp:651:  boost::asio::cancellation_state cancellation_state_;
/root/boost_1_87_0/boost/asio/impl/awaitable.hpp:871:      boost::asio::throw_exception(static_cast<Disposition&&>(d));
/root/boost_1_87_0/boost/asio/impl/awaitable.hpp:912:      boost::asio::throw_exception(static_cast<Disposition&&>(d));
/root/boost_1_87_0/boost/asio/impl/awaitable.hpp:990:      boost::asio::throw_exception(static_cast<Disposition&&>(d));
/root/boost_1_87_0/boost/asio/impl/awaitable.hpp:1071:struct coroutine_traits<boost::asio::awaitable<T, Executor>, Args...>
/root/boost_1_87_0/boost/asio/impl/awaitable.hpp:1073:  typedef boost::asio::detail::awaitable_frame<T, Executor> promise_type;
/root/boost_1_87_0/boost/asio/impl/awaitable.hpp:1083:struct coroutine_traits<boost::asio::awaitable<T, Executor>, Args...>
/root/boost_1_87_0/boost/asio/impl/awaitable.hpp:1085:  typedef boost::asio::detail::awaitable_frame<T, Executor> promise_type;
/root/boost_1_87_0/boost/asio/impl/buffered_read_stream.hpp:196:  using boost::asio::buffer_size;
/root/boost_1_87_0/boost/asio/impl/buffered_read_stream.hpp:213:  using boost::asio::buffer_size;
/root/boost_1_87_0/boost/asio/impl/buffered_read_stream.hpp:260:        const std::size_t bytes_copied = boost::asio::buffer_copy(
/root/boost_1_87_0/boost/asio/impl/buffered_read_stream.hpp:309:      using boost::asio::buffer_size;
/root/boost_1_87_0/boost/asio/impl/buffered_write_stream.hpp:176:  using boost::asio::buffer_size;
/root/boost_1_87_0/boost/asio/impl/buffered_write_stream.hpp:193:  using boost::asio::buffer_size;
/root/boost_1_87_0/boost/asio/impl/buffered_write_stream.hpp:240:        using boost::asio::buffer_size;
/root/boost_1_87_0/boost/asio/impl/buffered_write_stream.hpp:247:        const std::size_t bytes_copied = boost::asio::buffer_copy(
/root/boost_1_87_0/boost/asio/impl/buffered_write_stream.hpp:295:      using boost::asio::buffer_size;
/root/boost_1_87_0/boost/asio/impl/buffered_write_stream.hpp:371:  using boost::asio::buffer_size;
/root/boost_1_87_0/boost/asio/impl/buffered_write_stream.hpp:377:  return boost::asio::buffer_copy(
/root/boost_1_87_0/boost/asio/impl/cancel_after.hpp:45:    typename op::ptr p = { boost::asio::detail::addressof(handler2.value),
/root/boost_1_87_0/boost/asio/impl/cancel_after.hpp:66:    typename op::ptr p = { boost::asio::detail::addressof(handler2.value),
/root/boost_1_87_0/boost/asio/impl/cancel_after.hpp:96:    typename op::ptr p = { boost::asio::detail::addressof(handler2.value),
/root/boost_1_87_0/boost/asio/impl/cancel_after.hpp:116:    typename op::ptr p = { boost::asio::detail::addressof(handler2.value),
/root/boost_1_87_0/boost/asio/impl/cancel_at.hpp:45:    typename op::ptr p = { boost::asio::detail::addressof(handler2.value),
/root/boost_1_87_0/boost/asio/impl/cancel_at.hpp:66:    typename op::ptr p = { boost::asio::detail::addressof(handler2.value),
/root/boost_1_87_0/boost/asio/impl/cancel_at.hpp:96:    typename op::ptr p = { boost::asio::detail::addressof(handler2.value),
/root/boost_1_87_0/boost/asio/impl/cancel_at.hpp:116:    typename op::ptr p = { boost::asio::detail::addressof(handler2.value),
/root/boost_1_87_0/boost/asio/impl/co_spawn.hpp:46:    : executor_(boost::asio::prefer(ex, execution::outstanding_work.tracked))
/root/boost_1_87_0/boost/asio/impl/co_spawn.hpp:83:      handler_work(boost::asio::get_associated_executor(handler, ex)),
/root/boost_1_87_0/boost/asio/impl/co_spawn.hpp:121:    -> decltype(boost::asio::dispatch(std::forward<CompletionToken>(token)))
/root/boost_1_87_0/boost/asio/impl/co_spawn.hpp:123:    return boost::asio::dispatch(std::forward<CompletionToken>(token));
/root/boost_1_87_0/boost/asio/impl/co_spawn.hpp:131:    -> decltype(boost::asio::post(std::forward<CompletionToken>(token)))
/root/boost_1_87_0/boost/asio/impl/co_spawn.hpp:133:    return boost::asio::post(std::forward<CompletionToken>(token));
/root/boost_1_87_0/boost/asio/impl/co_spawn.hpp:266:    boost::asio::dispatch(ex_, [sig, type]{ sig->emit(type); });
/root/boost_1_87_0/boost/asio/impl/co_spawn.hpp:329:    auto slot = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/impl/connect.hpp:87:  boost::asio::detail::throw_error(ec, "connect");
/root/boost_1_87_0/boost/asio/impl/connect.hpp:109:  boost::asio::detail::throw_error(ec, "connect");
/root/boost_1_87_0/boost/asio/impl/connect.hpp:135:  boost::asio::detail::throw_error(ec, "connect");
/root/boost_1_87_0/boost/asio/impl/connect.hpp:167:  boost::asio::detail::throw_error(ec, "connect");
/root/boost_1_87_0/boost/asio/impl/connect.hpp:197:    ec = boost::asio::error::not_found;
/root/boost_1_87_0/boost/asio/impl/connect.hpp:322:            ec = boost::asio::error::not_found;
/root/boost_1_87_0/boost/asio/impl/connect.hpp:324:            boost::asio::post(socket_.get_executor(),
/root/boost_1_87_0/boost/asio/impl/connect.hpp:337:            ec = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/impl/connect.hpp:346:            ec = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/impl/connect.hpp:482:            ec = boost::asio::error::not_found;
/root/boost_1_87_0/boost/asio/impl/connect.hpp:484:            boost::asio::post(socket_.get_executor(),
/root/boost_1_87_0/boost/asio/impl/connect.hpp:497:            ec = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/impl/connect.hpp:506:            ec = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/impl/connect_pipe.hpp:35:  boost::asio::connect_pipe(read_end, write_end, ec);
/root/boost_1_87_0/boost/asio/impl/connect_pipe.hpp:36:  boost::asio::detail::throw_error(ec, "connect_pipe");
/root/boost_1_87_0/boost/asio/impl/connect_pipe.ipp:76:    ec.assign(last_error, boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/impl/connect_pipe.ipp:87:    ec.assign(last_error, boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/impl/connect_pipe.ipp:96:    ec = boost::asio::error::connection_aborted;
/root/boost_1_87_0/boost/asio/impl/connect_pipe.ipp:106:    ec = boost::asio::error::connection_aborted;
/root/boost_1_87_0/boost/asio/impl/connect_pipe.ipp:118:    ec = boost::asio::error::connection_aborted;
/root/boost_1_87_0/boost/asio/impl/connect_pipe.ipp:125:  boost::asio::error::clear(ec);
/root/boost_1_87_0/boost/asio/impl/detached.hpp:50:  typedef boost::asio::detail::detached_handler completion_handler_type;
/root/boost_1_87_0/boost/asio/impl/execution_context.ipp:28:  : service_registry_(new boost::asio::detail::service_registry(*this))
/root/boost_1_87_0/boost/asio/impl/execution_context.ipp:34:  : service_registry_(new boost::asio::detail::service_registry(*this))
/root/boost_1_87_0/boost/asio/impl/execution_context.ipp:57:    boost::asio::execution_context::fork_event event)
/root/boost_1_87_0/boost/asio/impl/io_context.hpp:99:    boost::asio::detail::throw_error(ec);
/root/boost_1_87_0/boost/asio/impl/io_context.hpp:310:inline boost::asio::io_context& io_context::service::get_io_context()
/root/boost_1_87_0/boost/asio/impl/io_context.hpp:312:  return static_cast<boost::asio::io_context&>(context());
/root/boost_1_87_0/boost/asio/impl/io_context.ipp:58:  boost::asio::detail::scoped_ptr<impl_type> scoped_impl(impl);
/root/boost_1_87_0/boost/asio/impl/io_context.ipp:59:  boost::asio::add_service<impl_type>(*this, scoped_impl.get());
/root/boost_1_87_0/boost/asio/impl/io_context.ipp:72:  boost::asio::detail::throw_error(ec);
/root/boost_1_87_0/boost/asio/impl/io_context.ipp:80:  boost::asio::detail::throw_error(ec);
/root/boost_1_87_0/boost/asio/impl/io_context.ipp:88:  boost::asio::detail::throw_error(ec);
/root/boost_1_87_0/boost/asio/impl/io_context.ipp:96:  boost::asio::detail::throw_error(ec);
/root/boost_1_87_0/boost/asio/impl/io_context.ipp:115:io_context::service::service(boost::asio::io_context& owner)
/root/boost_1_87_0/boost/asio/impl/read.hpp:48:    boost::asio::detail::consuming_buffers<mutable_buffer,
/root/boost_1_87_0/boost/asio/impl/read.hpp:74:      boost::asio::buffer_sequence_begin(buffers),
/root/boost_1_87_0/boost/asio/impl/read.hpp:86:  boost::asio::detail::throw_error(ec, "read");
/root/boost_1_87_0/boost/asio/impl/read.hpp:114:  boost::asio::detail::throw_error(ec, "read");
/root/boost_1_87_0/boost/asio/impl/read.hpp:172:  boost::asio::detail::throw_error(ec, "read");
/root/boost_1_87_0/boost/asio/impl/read.hpp:210:  boost::asio::detail::throw_error(ec, "read");
/root/boost_1_87_0/boost/asio/impl/read.hpp:220:    boost::asio::basic_streambuf<Allocator>& b,
/root/boost_1_87_0/boost/asio/impl/read.hpp:232:    boost::asio::basic_streambuf<Allocator>& b)
/root/boost_1_87_0/boost/asio/impl/read.hpp:239:    boost::asio::basic_streambuf<Allocator>& b,
/root/boost_1_87_0/boost/asio/impl/read.hpp:248:    boost::asio::basic_streambuf<Allocator>& b,
/root/boost_1_87_0/boost/asio/impl/read.hpp:308:  boost::asio::detail::throw_error(ec, "read");
/root/boost_1_87_0/boost/asio/impl/read.hpp:338:  boost::asio::detail::throw_error(ec, "read");
/root/boost_1_87_0/boost/asio/impl/read.hpp:422:    typedef boost::asio::detail::consuming_buffers<mutable_buffer,
/root/boost_1_87_0/boost/asio/impl/read.hpp:485:          boost::asio::buffer_sequence_begin(buffers),
/root/boost_1_87_0/boost/asio/impl/read_at.hpp:49:    boost::asio::detail::consuming_buffers<mutable_buffer,
/root/boost_1_87_0/boost/asio/impl/read_at.hpp:76:      boost::asio::buffer_sequence_begin(buffers),
/root/boost_1_87_0/boost/asio/impl/read_at.hpp:87:  boost::asio::detail::throw_error(ec, "read_at");
/root/boost_1_87_0/boost/asio/impl/read_at.hpp:111:  boost::asio::detail::throw_error(ec, "read_at");
/root/boost_1_87_0/boost/asio/impl/read_at.hpp:121:    uint64_t offset, boost::asio::basic_streambuf<Allocator>& b,
/root/boost_1_87_0/boost/asio/impl/read_at.hpp:147:    uint64_t offset, boost::asio::basic_streambuf<Allocator>& b)
/root/boost_1_87_0/boost/asio/impl/read_at.hpp:152:  boost::asio::detail::throw_error(ec, "read_at");
/root/boost_1_87_0/boost/asio/impl/read_at.hpp:158:    uint64_t offset, boost::asio::basic_streambuf<Allocator>& b,
/root/boost_1_87_0/boost/asio/impl/read_at.hpp:167:    uint64_t offset, boost::asio::basic_streambuf<Allocator>& b,
/root/boost_1_87_0/boost/asio/impl/read_at.hpp:176:  boost::asio::detail::throw_error(ec, "read_at");
/root/boost_1_87_0/boost/asio/impl/read_at.hpp:256:            ec = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/impl/read_at.hpp:268:    typedef boost::asio::detail::consuming_buffers<mutable_buffer,
/root/boost_1_87_0/boost/asio/impl/read_at.hpp:333:          boost::asio::buffer_sequence_begin(buffers),
/root/boost_1_87_0/boost/asio/impl/read_at.hpp:454:            ec = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/impl/read_at.hpp:468:    boost::asio::basic_streambuf<Allocator>& streambuf_;
/root/boost_1_87_0/boost/asio/impl/read_until.hpp:102:  boost::asio::detail::throw_error(ec, "read_until");
/root/boost_1_87_0/boost/asio/impl/read_until.hpp:176:  boost::asio::detail::throw_error(ec, "read_until");
/root/boost_1_87_0/boost/asio/impl/read_until.hpp:261:  boost::asio::detail::throw_error(ec, "read_until");
/root/boost_1_87_0/boost/asio/impl/read_until.hpp:352:  boost::asio::detail::throw_error(ec, "read_until");
/root/boost_1_87_0/boost/asio/impl/read_until.hpp:425:    boost::asio::basic_streambuf<Allocator>& b, char delim)
/root/boost_1_87_0/boost/asio/impl/read_until.hpp:432:    boost::asio::basic_streambuf<Allocator>& b, char delim,
/root/boost_1_87_0/boost/asio/impl/read_until.hpp:440:    boost::asio::basic_streambuf<Allocator>& b,
/root/boost_1_87_0/boost/asio/impl/read_until.hpp:448:    boost::asio::basic_streambuf<Allocator>& b,
/root/boost_1_87_0/boost/asio/impl/read_until.hpp:458:    boost::asio::basic_streambuf<Allocator>& b,
/root/boost_1_87_0/boost/asio/impl/read_until.hpp:466:    boost::asio::basic_streambuf<Allocator>& b,
/root/boost_1_87_0/boost/asio/impl/read_until.hpp:477:    boost::asio::basic_streambuf<Allocator>& b, MatchCondition match_condition,
/root/boost_1_87_0/boost/asio/impl/read_until.hpp:485:    boost::asio::basic_streambuf<Allocator>& b,
/root/boost_1_87_0/boost/asio/impl/read_until.hpp:506:  boost::asio::detail::throw_error(ec, "read_until");
/root/boost_1_87_0/boost/asio/impl/read_until.hpp:575:  boost::asio::detail::throw_error(ec, "read_until");
/root/boost_1_87_0/boost/asio/impl/read_until.hpp:656:  boost::asio::detail::throw_error(ec, "read_until");
/root/boost_1_87_0/boost/asio/impl/read_until.hpp:743:  boost::asio::detail::throw_error(ec, "read_until");
/root/boost_1_87_0/boost/asio/impl/serial_port_base.ipp:114:    ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/impl/serial_port_base.ipp:202:    ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/impl/serial_port_base.ipp:217:    boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/impl/serial_port_base.ipp:277:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/impl/serial_port_base.ipp:335:    boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/impl/serial_port_base.ipp:430:    boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/impl/serial_port_base.ipp:462:    ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/impl/serial_port_base.ipp:503:    boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/impl/spawn.hpp:113:        throw_error(boost::asio::error::operation_aborted, "yield");
/root/boost_1_87_0/boost/asio/impl/spawn.hpp:395:      boost::asio::throw_exception(static_cast<Disposition&&>(*result));
/root/boost_1_87_0/boost/asio/impl/spawn.hpp:506:      boost::asio::throw_exception(
/root/boost_1_87_0/boost/asio/impl/spawn.hpp:628:      boost::asio::throw_exception(
/root/boost_1_87_0/boost/asio/impl/spawn.hpp:904:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/impl/spawn.hpp:939:      = boost::asio::get_associated_cancellation_slot(handler);
/root/boost_1_87_0/boost/asio/impl/system_context.ipp:85:  boost::asio::add_service<detail::scheduler>(*this, scoped_impl.get());
/root/boost_1_87_0/boost/asio/impl/thread_pool.ipp:80:    boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/impl/thread_pool.ipp:144:  boost::asio::add_service<detail::scheduler>(*this, scoped_impl.get());
/root/boost_1_87_0/boost/asio/impl/use_future.hpp:119:    return boost::asio::query(system_executor(), execution::context);
/root/boost_1_87_0/boost/asio/impl/use_future.hpp:142:    boost::asio::require(system_executor(), Blocking()).execute(
/root/boost_1_87_0/boost/asio/impl/use_future.hpp:545:    boost::asio::detail::promise_executor<T, Blocking>>
/root/boost_1_87_0/boost/asio/impl/use_future.hpp:557:    boost::asio::detail::promise_executor<T, Blocking>, Function>
/root/boost_1_87_0/boost/asio/impl/use_future.hpp:570:    boost::asio::detail::promise_executor<T, Blocking>,
/root/boost_1_87_0/boost/asio/impl/use_future.hpp:572:    typename boost::asio::enable_if<
/root/boost_1_87_0/boost/asio/impl/use_future.hpp:573:      boost::asio::is_convertible<
/root/boost_1_87_0/boost/asio/impl/use_future.hpp:575:        boost::asio::execution::blocking_t
/root/boost_1_87_0/boost/asio/impl/use_future.hpp:596:    boost::asio::detail::promise_executor<T, Blocking>,
/root/boost_1_87_0/boost/asio/impl/use_future.hpp:602:  typedef boost::asio::system_context& result_type;
/root/boost_1_87_0/boost/asio/impl/use_future.hpp:611:    boost::asio::detail::promise_executor<T, Blocking>,
/root/boost_1_87_0/boost/asio/impl/use_future.hpp:617:  typedef boost::asio::detail::promise_executor<T,
/root/boost_1_87_0/boost/asio/impl/use_future.hpp:623:    boost::asio::detail::promise_executor<T, Blocking>,
/root/boost_1_87_0/boost/asio/impl/use_future.hpp:629:  typedef boost::asio::detail::promise_executor<T,
/root/boost_1_87_0/boost/asio/impl/write.hpp:46:    boost::asio::detail::consuming_buffers<const_buffer,
/root/boost_1_87_0/boost/asio/impl/write.hpp:72:      boost::asio::buffer_sequence_begin(buffers),
/root/boost_1_87_0/boost/asio/impl/write.hpp:84:  boost::asio::detail::throw_error(ec, "write");
/root/boost_1_87_0/boost/asio/impl/write.hpp:112:  boost::asio::detail::throw_error(ec, "write");
/root/boost_1_87_0/boost/asio/impl/write.hpp:156:  boost::asio::detail::throw_error(ec, "write");
/root/boost_1_87_0/boost/asio/impl/write.hpp:194:  boost::asio::detail::throw_error(ec, "write");
/root/boost_1_87_0/boost/asio/impl/write.hpp:204:    boost::asio::basic_streambuf<Allocator>& b,
/root/boost_1_87_0/boost/asio/impl/write.hpp:216:    boost::asio::basic_streambuf<Allocator>& b)
/root/boost_1_87_0/boost/asio/impl/write.hpp:223:    boost::asio::basic_streambuf<Allocator>& b,
/root/boost_1_87_0/boost/asio/impl/write.hpp:232:    boost::asio::basic_streambuf<Allocator>& b,
/root/boost_1_87_0/boost/asio/impl/write.hpp:273:  boost::asio::detail::throw_error(ec, "write");
/root/boost_1_87_0/boost/asio/impl/write.hpp:303:  boost::asio::detail::throw_error(ec, "write");
/root/boost_1_87_0/boost/asio/impl/write.hpp:387:    typedef boost::asio::detail::consuming_buffers<const_buffer,
/root/boost_1_87_0/boost/asio/impl/write.hpp:450:          boost::asio::buffer_sequence_begin(buffers),
/root/boost_1_87_0/boost/asio/impl/write_at.hpp:47:    boost::asio::detail::consuming_buffers<const_buffer,
/root/boost_1_87_0/boost/asio/impl/write_at.hpp:74:      boost::asio::buffer_sequence_begin(buffers),
/root/boost_1_87_0/boost/asio/impl/write_at.hpp:85:  boost::asio::detail::throw_error(ec, "write_at");
/root/boost_1_87_0/boost/asio/impl/write_at.hpp:109:  boost::asio::detail::throw_error(ec, "write_at");
/root/boost_1_87_0/boost/asio/impl/write_at.hpp:119:    uint64_t offset, boost::asio::basic_streambuf<Allocator>& b,
/root/boost_1_87_0/boost/asio/impl/write_at.hpp:133:    uint64_t offset, boost::asio::basic_streambuf<Allocator>& b)
/root/boost_1_87_0/boost/asio/impl/write_at.hpp:137:  boost::asio::detail::throw_error(ec, "write_at");
/root/boost_1_87_0/boost/asio/impl/write_at.hpp:143:    uint64_t offset, boost::asio::basic_streambuf<Allocator>& b,
/root/boost_1_87_0/boost/asio/impl/write_at.hpp:152:    uint64_t offset, boost::asio::basic_streambuf<Allocator>& b,
/root/boost_1_87_0/boost/asio/impl/write_at.hpp:161:  boost::asio::detail::throw_error(ec, "write_at");
/root/boost_1_87_0/boost/asio/impl/write_at.hpp:241:            ec = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/impl/write_at.hpp:253:    typedef boost::asio::detail::consuming_buffers<const_buffer,
/root/boost_1_87_0/boost/asio/impl/write_at.hpp:318:          boost::asio::buffer_sequence_begin(buffers),
/root/boost_1_87_0/boost/asio/impl/write_at.hpp:370:        boost::asio::basic_streambuf<Allocator>& streambuf,
/root/boost_1_87_0/boost/asio/impl/write_at.hpp:397:    boost::asio::basic_streambuf<Allocator>& streambuf_;
/root/boost_1_87_0/boost/asio/io_context.hpp:71: * @li boost::asio::ip::tcp::socket
/root/boost_1_87_0/boost/asio/io_context.hpp:72: * @li boost::asio::ip::tcp::acceptor
/root/boost_1_87_0/boost/asio/io_context.hpp:73: * @li boost::asio::ip::udp::socket
/root/boost_1_87_0/boost/asio/io_context.hpp:74: * @li boost::asio::deadline_timer.
/root/boost_1_87_0/boost/asio/io_context.hpp:119: * boost::asio::io_context io_context;
/root/boost_1_87_0/boost/asio/io_context.hpp:137: * To submit functions to the io_context, use the @ref boost::asio::dispatch,
/root/boost_1_87_0/boost/asio/io_context.hpp:138: * @ref boost::asio::post or @ref boost::asio::defer free functions.
/root/boost_1_87_0/boost/asio/io_context.hpp:149: * boost::asio::io_context io_context;
/root/boost_1_87_0/boost/asio/io_context.hpp:152: * boost::asio::post(io_context, my_task);
/root/boost_1_87_0/boost/asio/io_context.hpp:155: * boost::asio::post(io_context,
/root/boost_1_87_0/boost/asio/io_context.hpp:171: * boost::asio::executor_work_guard<io_context::executor_type>:
/root/boost_1_87_0/boost/asio/io_context.hpp:173: * @code boost::asio::io_context io_context;
/root/boost_1_87_0/boost/asio/io_context.hpp:174: * boost::asio::executor_work_guard<boost::asio::io_context::executor_type>
/root/boost_1_87_0/boost/asio/io_context.hpp:175: *   = boost::asio::make_work_guard(io_context);
/root/boost_1_87_0/boost/asio/io_context.hpp:186: * @code boost::asio::io_context io_context;
/root/boost_1_87_0/boost/asio/io_context.hpp:187: * boost::asio::executor_work_guard<boost::asio::io_context::executor_type>
/root/boost_1_87_0/boost/asio/io_context.hpp:188: *   = boost::asio::make_work_guard(io_context);
/root/boost_1_87_0/boost/asio/io_context.hpp:439:  /// (Deprecated: Use boost::asio::bind_executor().) Create a new handler that
/root/boost_1_87_0/boost/asio/io_context.hpp:459:   * @code boost::asio::dispatch(io_context,
/root/boost_1_87_0/boost/asio/io_context.hpp:542:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/io_context.hpp:546:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/io_context.hpp:547:   *     boost::asio::execution::blocking.possibly); @endcode
/root/boost_1_87_0/boost/asio/io_context.hpp:558:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/io_context.hpp:562:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/io_context.hpp:563:   *     boost::asio::execution::blocking.never); @endcode
/root/boost_1_87_0/boost/asio/io_context.hpp:574:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/io_context.hpp:578:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/io_context.hpp:579:   *     boost::asio::execution::relationship.fork); @endcode
/root/boost_1_87_0/boost/asio/io_context.hpp:590:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/io_context.hpp:594:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/io_context.hpp:595:   *     boost::asio::execution::relationship.continuation); @endcode
/root/boost_1_87_0/boost/asio/io_context.hpp:607:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/io_context.hpp:611:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/io_context.hpp:612:   *     boost::asio::execution::outstanding_work.tracked); @endcode
/root/boost_1_87_0/boost/asio/io_context.hpp:625:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/io_context.hpp:629:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/io_context.hpp:630:   *     boost::asio::execution::outstanding_work.untracked); @endcode
/root/boost_1_87_0/boost/asio/io_context.hpp:643:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/io_context.hpp:647:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/io_context.hpp:648:   *     boost::asio::execution::allocator(my_allocator)); @endcode
/root/boost_1_87_0/boost/asio/io_context.hpp:661:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/io_context.hpp:665:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/io_context.hpp:666:   *     boost::asio::execution::allocator); @endcode
/root/boost_1_87_0/boost/asio/io_context.hpp:678:  friend struct boost::asio::execution::detail::mapping_t<0>;
/root/boost_1_87_0/boost/asio/io_context.hpp:679:  friend struct boost::asio::execution::detail::outstanding_work_t<0>;
/root/boost_1_87_0/boost/asio/io_context.hpp:685:   * boost::asio::query customisation point.
/root/boost_1_87_0/boost/asio/io_context.hpp:689:   * if (boost::asio::query(ex, boost::asio::execution::mapping)
/root/boost_1_87_0/boost/asio/io_context.hpp:690:   *       == boost::asio::execution::mapping.thread)
/root/boost_1_87_0/boost/asio/io_context.hpp:701:   * boost::asio::query customisation point.
/root/boost_1_87_0/boost/asio/io_context.hpp:705:   * boost::asio::io_context& ctx = boost::asio::query(
/root/boost_1_87_0/boost/asio/io_context.hpp:706:   *     ex, boost::asio::execution::context); @endcode
/root/boost_1_87_0/boost/asio/io_context.hpp:716:   * boost::asio::query customisation point.
/root/boost_1_87_0/boost/asio/io_context.hpp:720:   * if (boost::asio::query(ex, boost::asio::execution::blocking)
/root/boost_1_87_0/boost/asio/io_context.hpp:721:   *       == boost::asio::execution::blocking.always)
/root/boost_1_87_0/boost/asio/io_context.hpp:734:   * boost::asio::query customisation point.
/root/boost_1_87_0/boost/asio/io_context.hpp:738:   * if (boost::asio::query(ex, boost::asio::execution::relationship)
/root/boost_1_87_0/boost/asio/io_context.hpp:739:   *       == boost::asio::execution::relationship.continuation)
/root/boost_1_87_0/boost/asio/io_context.hpp:753:   * boost::asio::query customisation point.
/root/boost_1_87_0/boost/asio/io_context.hpp:757:   * if (boost::asio::query(ex, boost::asio::execution::outstanding_work)
/root/boost_1_87_0/boost/asio/io_context.hpp:758:   *       == boost::asio::execution::outstanding_work.tracked)
/root/boost_1_87_0/boost/asio/io_context.hpp:772:   * boost::asio::query customisation point.
/root/boost_1_87_0/boost/asio/io_context.hpp:776:   * auto alloc = boost::asio::query(ex,
/root/boost_1_87_0/boost/asio/io_context.hpp:777:   *     boost::asio::execution::allocator); @endcode
/root/boost_1_87_0/boost/asio/io_context.hpp:789:   * boost::asio::query customisation point.
/root/boost_1_87_0/boost/asio/io_context.hpp:793:   * auto alloc = boost::asio::query(ex,
/root/boost_1_87_0/boost/asio/io_context.hpp:794:   *     boost::asio::execution::allocator); @endcode
/root/boost_1_87_0/boost/asio/io_context.hpp:954:  boost::asio::io_context& get_io_context();
/root/boost_1_87_0/boost/asio/io_context.hpp:974:  BOOST_ASIO_DECL service(boost::asio::io_context& owner);
/root/boost_1_87_0/boost/asio/io_context.hpp:985:  : public boost::asio::io_context::service
/root/boost_1_87_0/boost/asio/io_context.hpp:988:  static boost::asio::detail::service_id<Type> id;
/root/boost_1_87_0/boost/asio/io_context.hpp:991:  service_base(boost::asio::io_context& io_context)
/root/boost_1_87_0/boost/asio/io_context.hpp:992:    : boost::asio::io_context::service(io_context)
/root/boost_1_87_0/boost/asio/io_context.hpp:998:boost::asio::detail::service_id<Type> service_base<Type>::id;
/root/boost_1_87_0/boost/asio/io_context.hpp:1010:    boost::asio::io_context::basic_executor_type<Allocator, Bits>
/root/boost_1_87_0/boost/asio/io_context.hpp:1023:    boost::asio::io_context::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/io_context.hpp:1038:    boost::asio::io_context::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/io_context.hpp:1039:    boost::asio::execution::blocking_t::possibly_t
/root/boost_1_87_0/boost/asio/io_context.hpp:1044:  typedef boost::asio::io_context::basic_executor_type<
/root/boost_1_87_0/boost/asio/io_context.hpp:1050:    boost::asio::io_context::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/io_context.hpp:1051:    boost::asio::execution::blocking_t::never_t
/root/boost_1_87_0/boost/asio/io_context.hpp:1056:  typedef boost::asio::io_context::basic_executor_type<
/root/boost_1_87_0/boost/asio/io_context.hpp:1062:    boost::asio::io_context::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/io_context.hpp:1063:    boost::asio::execution::relationship_t::fork_t
/root/boost_1_87_0/boost/asio/io_context.hpp:1068:  typedef boost::asio::io_context::basic_executor_type<
/root/boost_1_87_0/boost/asio/io_context.hpp:1074:    boost::asio::io_context::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/io_context.hpp:1075:    boost::asio::execution::relationship_t::continuation_t
/root/boost_1_87_0/boost/asio/io_context.hpp:1080:  typedef boost::asio::io_context::basic_executor_type<
/root/boost_1_87_0/boost/asio/io_context.hpp:1086:    boost::asio::io_context::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/io_context.hpp:1087:    boost::asio::execution::outstanding_work_t::tracked_t
/root/boost_1_87_0/boost/asio/io_context.hpp:1088:  > : boost::asio::detail::io_context_bits
/root/boost_1_87_0/boost/asio/io_context.hpp:1092:  typedef boost::asio::io_context::basic_executor_type<
/root/boost_1_87_0/boost/asio/io_context.hpp:1098:    boost::asio::io_context::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/io_context.hpp:1099:    boost::asio::execution::outstanding_work_t::untracked_t
/root/boost_1_87_0/boost/asio/io_context.hpp:1100:  > : boost::asio::detail::io_context_bits
/root/boost_1_87_0/boost/asio/io_context.hpp:1104:  typedef boost::asio::io_context::basic_executor_type<
/root/boost_1_87_0/boost/asio/io_context.hpp:1110:    boost::asio::io_context::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/io_context.hpp:1111:    boost::asio::execution::allocator_t<void>
/root/boost_1_87_0/boost/asio/io_context.hpp:1116:  typedef boost::asio::io_context::basic_executor_type<
/root/boost_1_87_0/boost/asio/io_context.hpp:1123:    boost::asio::io_context::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/io_context.hpp:1124:    boost::asio::execution::allocator_t<OtherAllocator>
/root/boost_1_87_0/boost/asio/io_context.hpp:1129:  typedef boost::asio::io_context::basic_executor_type<
/root/boost_1_87_0/boost/asio/io_context.hpp:1139:    boost::asio::io_context::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/io_context.hpp:1141:    typename boost::asio::enable_if<
/root/boost_1_87_0/boost/asio/io_context.hpp:1142:      boost::asio::is_convertible<
/root/boost_1_87_0/boost/asio/io_context.hpp:1144:        boost::asio::execution::outstanding_work_t
/root/boost_1_87_0/boost/asio/io_context.hpp:1147:  > : boost::asio::detail::io_context_bits
/root/boost_1_87_0/boost/asio/io_context.hpp:1151:  typedef boost::asio::execution::outstanding_work_t result_type;
/root/boost_1_87_0/boost/asio/io_context.hpp:1163:    boost::asio::io_context::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/io_context.hpp:1165:    typename boost::asio::enable_if<
/root/boost_1_87_0/boost/asio/io_context.hpp:1166:      boost::asio::is_convertible<
/root/boost_1_87_0/boost/asio/io_context.hpp:1168:        boost::asio::execution::mapping_t
/root/boost_1_87_0/boost/asio/io_context.hpp:1175:  typedef boost::asio::execution::mapping_t::thread_t result_type;
/root/boost_1_87_0/boost/asio/io_context.hpp:1189:    boost::asio::io_context::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/io_context.hpp:1191:    typename boost::asio::enable_if<
/root/boost_1_87_0/boost/asio/io_context.hpp:1192:      boost::asio::is_convertible<
/root/boost_1_87_0/boost/asio/io_context.hpp:1194:        boost::asio::execution::blocking_t
/root/boost_1_87_0/boost/asio/io_context.hpp:1201:  typedef boost::asio::execution::blocking_t result_type;
/root/boost_1_87_0/boost/asio/io_context.hpp:1206:    boost::asio::io_context::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/io_context.hpp:1208:    typename boost::asio::enable_if<
/root/boost_1_87_0/boost/asio/io_context.hpp:1209:      boost::asio::is_convertible<
/root/boost_1_87_0/boost/asio/io_context.hpp:1211:        boost::asio::execution::relationship_t
/root/boost_1_87_0/boost/asio/io_context.hpp:1218:  typedef boost::asio::execution::relationship_t result_type;
/root/boost_1_87_0/boost/asio/io_context.hpp:1223:    boost::asio::io_context::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/io_context.hpp:1224:    boost::asio::execution::context_t
/root/boost_1_87_0/boost/asio/io_context.hpp:1229:  typedef boost::asio::io_context& result_type;
/root/boost_1_87_0/boost/asio/io_context.hpp:1234:    boost::asio::io_context::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/io_context.hpp:1235:    boost::asio::execution::allocator_t<void>
/root/boost_1_87_0/boost/asio/io_context.hpp:1245:    boost::asio::io_context::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/io_context.hpp:1246:    boost::asio::execution::allocator_t<OtherAllocator>
/root/boost_1_87_0/boost/asio/io_context_strand.hpp:99:  explicit strand(boost::asio::io_context& io_context)
/root/boost_1_87_0/boost/asio/io_context_strand.hpp:100:    : service_(boost::asio::use_service<
/root/boost_1_87_0/boost/asio/io_context_strand.hpp:101:        boost::asio::detail::strand_service>(io_context))
/root/boost_1_87_0/boost/asio/io_context_strand.hpp:129:  boost::asio::io_context& context() const noexcept
/root/boost_1_87_0/boost/asio/io_context_strand.hpp:218:  /// (Deprecated: Use boost::asio::bind_executor().) Create a new handler that
/root/boost_1_87_0/boost/asio/io_context_strand.hpp:237:   * @code boost::asio::dispatch(strand, boost::bind(f, a1, ... an)); @endcode
/root/boost_1_87_0/boost/asio/io_context_strand.hpp:284:  boost::asio::detail::strand_service& service_;
/root/boost_1_87_0/boost/asio/io_context_strand.hpp:285:  mutable boost::asio::detail::strand_service::implementation_type impl_;
/root/boost_1_87_0/boost/asio/ip/address.hpp:41: * The boost::asio::ip::address class provides the ability to use either IP
/root/boost_1_87_0/boost/asio/ip/address.hpp:56:      const boost::asio::ip::address_v4& ipv4_address) noexcept;
/root/boost_1_87_0/boost/asio/ip/address.hpp:60:      const boost::asio::ip::address_v6& ipv6_address) noexcept;
/root/boost_1_87_0/boost/asio/ip/address.hpp:76:      const boost::asio::ip::address_v4& ipv4_address) noexcept;
/root/boost_1_87_0/boost/asio/ip/address.hpp:80:      const boost::asio::ip::address_v6& ipv6_address) noexcept;
/root/boost_1_87_0/boost/asio/ip/address.hpp:95:  BOOST_ASIO_DECL boost::asio::ip::address_v4 to_v4() const;
/root/boost_1_87_0/boost/asio/ip/address.hpp:98:  BOOST_ASIO_DECL boost::asio::ip::address_v6 to_v6() const;
/root/boost_1_87_0/boost/asio/ip/address.hpp:153:  boost::asio::ip::address_v4 ipv4_address_;
/root/boost_1_87_0/boost/asio/ip/address.hpp:156:  boost::asio::ip::address_v6 ipv6_address_;
/root/boost_1_87_0/boost/asio/ip/address.hpp:222: * @relates boost::asio::ip::address
/root/boost_1_87_0/boost/asio/ip/address.hpp:237:struct hash<boost::asio::ip::address>
/root/boost_1_87_0/boost/asio/ip/address.hpp:239:  std::size_t operator()(const boost::asio::ip::address& addr)
/root/boost_1_87_0/boost/asio/ip/address.hpp:243:      ? std::hash<boost::asio::ip::address_v4>()(addr.to_v4())
/root/boost_1_87_0/boost/asio/ip/address.hpp:244:      : std::hash<boost::asio::ip::address_v6>()(addr.to_v6());
/root/boost_1_87_0/boost/asio/ip/address_v4.hpp:40: * The boost::asio::ip::address_v4 class provides the ability to use and
/root/boost_1_87_0/boost/asio/ip/address_v4.hpp:61:  typedef boost::asio::detail::array<unsigned char, 4> bytes_type;
/root/boost_1_87_0/boost/asio/ip/address_v4.hpp:256:  boost::asio::detail::in4_addr_type addr_;
/root/boost_1_87_0/boost/asio/ip/address_v4.hpp:334: * @relates boost::asio::ip::address_v4
/root/boost_1_87_0/boost/asio/ip/address_v4.hpp:349:struct hash<boost::asio::ip::address_v4>
/root/boost_1_87_0/boost/asio/ip/address_v4.hpp:351:  std::size_t operator()(const boost::asio::ip::address_v4& addr)
/root/boost_1_87_0/boost/asio/ip/address_v6.hpp:46: * The boost::asio::ip::address_v6 class provides the ability to use and
/root/boost_1_87_0/boost/asio/ip/address_v6.hpp:64:  typedef boost::asio::detail::array<unsigned char, 16> bytes_type;
/root/boost_1_87_0/boost/asio/ip/address_v6.hpp:227:  boost::asio::detail::in6_addr_type addr_;
/root/boost_1_87_0/boost/asio/ip/address_v6.hpp:318: * @relates boost::asio::ip::address_v6
/root/boost_1_87_0/boost/asio/ip/address_v6.hpp:333:struct hash<boost::asio::ip::address_v6>
/root/boost_1_87_0/boost/asio/ip/address_v6.hpp:335:  std::size_t operator()(const boost::asio::ip::address_v6& addr)
/root/boost_1_87_0/boost/asio/ip/address_v6.hpp:338:    const boost::asio::ip::address_v6::bytes_type bytes = addr.to_bytes();
/root/boost_1_87_0/boost/asio/ip/basic_endpoint.hpp:39: * The boost::asio::ip::basic_endpoint class template describes an endpoint that
/root/boost_1_87_0/boost/asio/ip/basic_endpoint.hpp:61:  typedef boost::asio::detail::socket_addr_type data_type;
/root/boost_1_87_0/boost/asio/ip/basic_endpoint.hpp:78:   * boost::asio::ip::tcp::endpoint ep(boost::asio::ip::tcp::v4(), 1234);
/root/boost_1_87_0/boost/asio/ip/basic_endpoint.hpp:83:   * boost::asio::ip::udp::endpoint ep(boost::asio::ip::udp::v6(), 9876);
/root/boost_1_87_0/boost/asio/ip/basic_endpoint.hpp:95:  basic_endpoint(const boost::asio::ip::address& addr,
/root/boost_1_87_0/boost/asio/ip/basic_endpoint.hpp:180:  boost::asio::ip::address address() const noexcept
/root/boost_1_87_0/boost/asio/ip/basic_endpoint.hpp:186:  void address(const boost::asio::ip::address& addr) noexcept
/root/boost_1_87_0/boost/asio/ip/basic_endpoint.hpp:235:  boost::asio::ip::detail::endpoint impl_;
/root/boost_1_87_0/boost/asio/ip/basic_endpoint.hpp:250: * @relates boost::asio::ip::basic_endpoint
/root/boost_1_87_0/boost/asio/ip/basic_endpoint.hpp:266:struct hash<boost::asio::ip::basic_endpoint<InternetProtocol>>
/root/boost_1_87_0/boost/asio/ip/basic_endpoint.hpp:269:      const boost::asio::ip::basic_endpoint<InternetProtocol>& ep)
/root/boost_1_87_0/boost/asio/ip/basic_endpoint.hpp:272:    std::size_t hash1 = std::hash<boost::asio::ip::address>()(ep.address());
/root/boost_1_87_0/boost/asio/ip/basic_resolver.hpp:221:   * will be invoked with the boost::asio::error::operation_aborted error code.
/root/boost_1_87_0/boost/asio/ip/basic_resolver.hpp:352:    boost::asio::detail::throw_error(ec, "resolve");
/root/boost_1_87_0/boost/asio/ip/basic_resolver.hpp:539:    boost::asio::detail::throw_error(ec, "resolve");
/root/boost_1_87_0/boost/asio/ip/basic_resolver.hpp:622:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/ip/basic_resolver.hpp:648:      boost::asio::async_initiate<ResolveToken,
/root/boost_1_87_0/boost/asio/ip/basic_resolver.hpp:691:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/ip/basic_resolver.hpp:717:      boost::asio::async_initiate<ResolveToken,
/root/boost_1_87_0/boost/asio/ip/basic_resolver.hpp:725:    return boost::asio::async_initiate<ResolveToken,
/root/boost_1_87_0/boost/asio/ip/basic_resolver.hpp:762:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/ip/basic_resolver.hpp:788:      boost::asio::async_initiate<ResolveToken,
/root/boost_1_87_0/boost/asio/ip/basic_resolver.hpp:834:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/ip/basic_resolver.hpp:861:      boost::asio::async_initiate<ResolveToken,
/root/boost_1_87_0/boost/asio/ip/basic_resolver.hpp:870:    return boost::asio::async_initiate<ResolveToken,
/root/boost_1_87_0/boost/asio/ip/basic_resolver.hpp:894:    boost::asio::detail::throw_error(ec, "resolve");
/root/boost_1_87_0/boost/asio/ip/basic_resolver.hpp:939:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/ip/basic_resolver.hpp:953:      boost::asio::async_initiate<ResolveToken,
/root/boost_1_87_0/boost/asio/ip/basic_resolver.hpp:957:    return boost::asio::async_initiate<ResolveToken,
/root/boost_1_87_0/boost/asio/ip/basic_resolver.hpp:991:      boost::asio::detail::non_const_lvalue<ResolveHandler> handler2(handler);
/root/boost_1_87_0/boost/asio/ip/basic_resolver.hpp:1002:  boost::asio::detail::io_object_impl<
/root/boost_1_87_0/boost/asio/ip/basic_resolver.hpp:1003:    boost::asio::detail::winrt_resolver_service<InternetProtocol>,
/root/boost_1_87_0/boost/asio/ip/basic_resolver.hpp:1006:  boost::asio::detail::io_object_impl<
/root/boost_1_87_0/boost/asio/ip/basic_resolver.hpp:1007:    boost::asio::detail::resolver_service<InternetProtocol>,
/root/boost_1_87_0/boost/asio/ip/basic_resolver_entry.hpp:30: * The boost::asio::ip::basic_resolver_entry class template describes an entry
/root/boost_1_87_0/boost/asio/ip/basic_resolver_iterator.hpp:41: * The boost::asio::ip::basic_resolver_iterator class template is used to define
/root/boost_1_87_0/boost/asio/ip/basic_resolver_iterator.hpp:179:  typedef boost::asio::detail::shared_ptr<values_type> values_ptr_type;
/root/boost_1_87_0/boost/asio/ip/basic_resolver_query.hpp:31: * The boost::asio::ip::basic_resolver_query class template describes a query
/root/boost_1_87_0/boost/asio/ip/basic_resolver_query.hpp:233:  const boost::asio::detail::addrinfo_type& hints() const
/root/boost_1_87_0/boost/asio/ip/basic_resolver_query.hpp:251:  boost::asio::detail::addrinfo_type hints_;
/root/boost_1_87_0/boost/asio/ip/basic_resolver_results.hpp:37: * The boost::asio::ip::basic_resolver_results class template is used to define
/root/boost_1_87_0/boost/asio/ip/basic_resolver_results.hpp:118:      boost::asio::detail::addrinfo_type* address_info,
/root/boost_1_87_0/boost/asio/ip/basic_resolver_results.hpp:188:      const boost::asio::detail::addrinfo_type& hints,
/root/boost_1_87_0/boost/asio/ip/basic_resolver_results.hpp:213:                  boost::asio::detail::winrt_utils::string(
/root/boost_1_87_0/boost/asio/ip/basic_resolver_results.hpp:215:                boost::asio::detail::winrt_utils::integer(
/root/boost_1_87_0/boost/asio/ip/detail/endpoint.hpp:44:  BOOST_ASIO_DECL endpoint(const boost::asio::ip::address& addr,/root/boost_1_87_0/boost/asio/ip/detail/endpoint.hpp:61:  boost::asio::detail::socket_addr_type* data() noexcept
/root/boost_1_87_0/boost/asio/ip/detail/endpoint.hpp:67:  const boost::asio::detail::socket_addr_type* data() const noexcept
/root/boost_1_87_0/boost/asio/ip/detail/endpoint.hpp:76:      return sizeof(boost::asio::detail::sockaddr_in4_type);
/root/boost_1_87_0/boost/asio/ip/detail/endpoint.hpp:78:      return sizeof(boost::asio::detail::sockaddr_in6_type);
/root/boost_1_87_0/boost/asio/ip/detail/endpoint.hpp:97:  BOOST_ASIO_DECL boost::asio::ip::address address() const noexcept;
/root/boost_1_87_0/boost/asio/ip/detail/endpoint.hpp:101:      const boost::asio::ip::address& addr) noexcept;
/root/boost_1_87_0/boost/asio/ip/detail/endpoint.hpp:126:    boost::asio::detail::socket_addr_type base;
/root/boost_1_87_0/boost/asio/ip/detail/endpoint.hpp:127:    boost::asio::detail::sockaddr_in4_type v4;
/root/boost_1_87_0/boost/asio/ip/detail/endpoint.hpp:128:    boost::asio::detail::sockaddr_in6_type v6;
/root/boost_1_87_0/boost/asio/ip/detail/impl/endpoint.ipp:51:      boost::asio::detail::socket_ops::host_to_network_short(port_num);
/root/boost_1_87_0/boost/asio/ip/detail/impl/endpoint.ipp:58:      boost::asio::detail::socket_ops::host_to_network_short(port_num);
/root/boost_1_87_0/boost/asio/ip/detail/impl/endpoint.ipp:72:endpoint::endpoint(const boost::asio::ip::address& addr,
/root/boost_1_87_0/boost/asio/ip/detail/impl/endpoint.ipp:81:      boost::asio::detail::socket_ops::host_to_network_short(port_num);
/root/boost_1_87_0/boost/asio/ip/detail/impl/endpoint.ipp:83:      boost::asio::detail::socket_ops::host_to_network_long(
/root/boost_1_87_0/boost/asio/ip/detail/impl/endpoint.ipp:90:      boost::asio::detail::socket_ops::host_to_network_short(port_num);
/root/boost_1_87_0/boost/asio/ip/detail/impl/endpoint.ipp:92:    boost::asio::ip::address_v6 v6_addr = addr.to_v6();
/root/boost_1_87_0/boost/asio/ip/detail/impl/endpoint.ipp:93:    boost::asio::ip::address_v6::bytes_type bytes = v6_addr.to_bytes();
/root/boost_1_87_0/boost/asio/ip/detail/impl/endpoint.ipp:96:      static_cast<boost::asio::detail::u_long_type>(
/root/boost_1_87_0/boost/asio/ip/detail/impl/endpoint.ipp:103:  if (new_size > sizeof(boost::asio::detail::sockaddr_storage_type))
/root/boost_1_87_0/boost/asio/ip/detail/impl/endpoint.ipp:105:    boost::system::error_code ec(boost::asio::error::invalid_argument);
/root/boost_1_87_0/boost/asio/ip/detail/impl/endpoint.ipp:106:    boost::asio::detail::throw_error(ec);
/root/boost_1_87_0/boost/asio/ip/detail/impl/endpoint.ipp:114:    return boost::asio::detail::socket_ops::network_to_host_short(
/root/boost_1_87_0/boost/asio/ip/detail/impl/endpoint.ipp:119:    return boost::asio::detail::socket_ops::network_to_host_short(
/root/boost_1_87_0/boost/asio/ip/detail/impl/endpoint.ipp:129:      = boost::asio::detail::socket_ops::host_to_network_short(port_num);
/root/boost_1_87_0/boost/asio/ip/detail/impl/endpoint.ipp:134:      = boost::asio::detail::socket_ops::host_to_network_short(port_num);
/root/boost_1_87_0/boost/asio/ip/detail/impl/endpoint.ipp:138:boost::asio::ip::address endpoint::address() const noexcept
/root/boost_1_87_0/boost/asio/ip/detail/impl/endpoint.ipp:143:    return boost::asio::ip::address_v4(
/root/boost_1_87_0/boost/asio/ip/detail/impl/endpoint.ipp:144:        boost::asio::detail::socket_ops::network_to_host_long(
/root/boost_1_87_0/boost/asio/ip/detail/impl/endpoint.ipp:149:    boost::asio::ip::address_v6::bytes_type bytes;
/root/boost_1_87_0/boost/asio/ip/detail/impl/endpoint.ipp:151:    return boost::asio::ip::address_v6(bytes, data_.v6.sin6_scope_id);
/root/boost_1_87_0/boost/asio/ip/detail/impl/endpoint.ipp:155:void endpoint::address(const boost::asio::ip::address& addr) noexcept
/root/boost_1_87_0/boost/asio/ip/detail/socket_option.hpp:145:        boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/ip/detail/socket_option.hpp:154:        boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/ip/detail/socket_option.hpp:241:      boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/ip/detail/socket_option.hpp:278:      boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/ip/detail/socket_option.hpp:290:      boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/ip/detail/socket_option.hpp:357:        boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/ip/detail/socket_option.hpp:371:        boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/ip/detail/socket_option.hpp:410:        boost::asio::detail::socket_ops::host_to_network_long(
/root/boost_1_87_0/boost/asio/ip/detail/socket_option.hpp:413:        boost::asio::detail::socket_ops::host_to_network_long(
/root/boost_1_87_0/boost/asio/ip/detail/socket_option.hpp:424:      boost::asio::detail::socket_ops::host_to_network_long(
/root/boost_1_87_0/boost/asio/ip/detail/socket_option.hpp:427:      boost::asio::detail::socket_ops::host_to_network_long(
/root/boost_1_87_0/boost/asio/ip/detail/socket_option.hpp:483:  boost::asio::detail::in4_mreq_type ipv4_value_;
/root/boost_1_87_0/boost/asio/ip/detail/socket_option.hpp:484:  boost::asio::detail::in6_mreq_type ipv6_value_;
/root/boost_1_87_0/boost/asio/ip/detail/socket_option.hpp:496:      boost::asio::detail::socket_ops::host_to_network_long(
/root/boost_1_87_0/boost/asio/ip/detail/socket_option.hpp:505:      boost::asio::detail::socket_ops::host_to_network_long(
/root/boost_1_87_0/boost/asio/ip/detail/socket_option.hpp:514:      boost::asio::detail::socket_ops::host_to_network_long(
/root/boost_1_87_0/boost/asio/ip/detail/socket_option.hpp:556:  boost::asio::detail::in4_addr_type ipv4_value_;
/root/boost_1_87_0/boost/asio/ip/icmp.hpp:34: * The boost::asio::ip::icmp class contains flags necessary for ICMP sockets.
/root/boost_1_87_0/boost/asio/ip/impl/address.ipp:41:    const boost::asio::ip::address_v4& ipv4_address) noexcept
/root/boost_1_87_0/boost/asio/ip/impl/address.ipp:49:    const boost::asio::ip::address_v6& ipv6_address) noexcept
/root/boost_1_87_0/boost/asio/ip/impl/address.ipp:87:    const boost::asio::ip::address_v4& ipv4_address) noexcept
/root/boost_1_87_0/boost/asio/ip/impl/address.ipp:91:  ipv6_address_ = boost::asio::ip::address_v6();
/root/boost_1_87_0/boost/asio/ip/impl/address.ipp:96:    const boost::asio::ip::address_v6& ipv6_address) noexcept
/root/boost_1_87_0/boost/asio/ip/impl/address.ipp:99:  ipv4_address_ = boost::asio::ip::address_v4();
/root/boost_1_87_0/boost/asio/ip/impl/address.ipp:108:  boost::asio::detail::throw_error(ec);
/root/boost_1_87_0/boost/asio/ip/impl/address.ipp:115:  boost::asio::ip::address_v6 ipv6_address =
/root/boost_1_87_0/boost/asio/ip/impl/address.ipp:116:    boost::asio::ip::make_address_v6(str, ec);
/root/boost_1_87_0/boost/asio/ip/impl/address.ipp:120:  boost::asio::ip::address_v4 ipv4_address =
/root/boost_1_87_0/boost/asio/ip/impl/address.ipp:121:    boost::asio::ip::make_address_v4(str, ec);
/root/boost_1_87_0/boost/asio/ip/impl/address.ipp:154:boost::asio::ip::address_v4 address::to_v4() const
/root/boost_1_87_0/boost/asio/ip/impl/address.ipp:159:    boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/ip/impl/address.ipp:164:boost::asio::ip::address_v6 address::to_v6() const
/root/boost_1_87_0/boost/asio/ip/impl/address.ipp:169:    boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/ip/impl/address_v4.ipp:41:    boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/ip/impl/address_v4.ipp:54:    boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/ip/impl/address_v4.ipp:57:  addr_.s_addr = boost::asio::detail::socket_ops::host_to_network_long(
/root/boost_1_87_0/boost/asio/ip/impl/address_v4.ipp:58:      static_cast<boost::asio::detail::u_long_type>(addr));
/root/boost_1_87_0/boost/asio/ip/impl/address_v4.ipp:71:  return boost::asio::detail::socket_ops::network_to_host_long(addr_.s_addr);
/root/boost_1_87_0/boost/asio/ip/impl/address_v4.ipp:77:  char addr_str[boost::asio::detail::max_addr_v4_str_len];
/root/boost_1_87_0/boost/asio/ip/impl/address_v4.ipp:79:    boost::asio::detail::socket_ops::inet_ntop(
/root/boost_1_87_0/boost/asio/ip/impl/address_v4.ipp:81:        boost::asio::detail::max_addr_v4_str_len, 0, ec);
/root/boost_1_87_0/boost/asio/ip/impl/address_v4.ipp:83:    boost::asio::detail::throw_error(ec);
/root/boost_1_87_0/boost/asio/ip/impl/address_v4.ipp:106:  boost::asio::detail::throw_error(ec);
/root/boost_1_87_0/boost/asio/ip/impl/address_v4.ipp:114:  if (boost::asio::detail::socket_ops::inet_pton(
/root/boost_1_87_0/boost/asio/ip/impl/address_v6.ipp:51:      boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/ip/impl/address_v6.ipp:97:  char addr_str[boost::asio::detail::max_addr_v6_str_len];
/root/boost_1_87_0/boost/asio/ip/impl/address_v6.ipp:99:    boost::asio::detail::socket_ops::inet_ntop(
/root/boost_1_87_0/boost/asio/ip/impl/address_v6.ipp:101:        boost::asio::detail::max_addr_v6_str_len, scope_id_, ec);
/root/boost_1_87_0/boost/asio/ip/impl/address_v6.ipp:103:    boost::asio::detail::throw_error(ec);
/root/boost_1_87_0/boost/asio/ip/impl/address_v6.ipp:185:      sizeof(boost::asio::detail::in6_addr_type)) == 0
/root/boost_1_87_0/boost/asio/ip/impl/address_v6.ipp:193:      sizeof(boost::asio::detail::in6_addr_type));
/root/boost_1_87_0/boost/asio/ip/impl/address_v6.ipp:212:  boost::asio::detail::throw_error(ec);
/root/boost_1_87_0/boost/asio/ip/impl/address_v6.ipp:221:  if (boost::asio::detail::socket_ops::inet_pton(
/root/boost_1_87_0/boost/asio/ip/impl/address_v6.ipp:259:    boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/ip/impl/basic_endpoint.hpp:33:  boost::asio::ip::detail::endpoint tmp_ep(endpoint.address(), endpoint.port());
/root/boost_1_87_0/boost/asio/ip/impl/host_name.ipp:34:  if (boost::asio::detail::socket_ops::gethostname(name, sizeof(name), ec) != 0)
/root/boost_1_87_0/boost/asio/ip/impl/host_name.ipp:36:    boost::asio::detail::throw_error(ec);
/root/boost_1_87_0/boost/asio/ip/impl/host_name.ipp:45:  if (boost::asio::detail::socket_ops::gethostname(name, sizeof(name), ec) != 0)
/root/boost_1_87_0/boost/asio/ip/impl/network_v4.hpp:38:      boost::asio::detail::throw_error(ec);
/root/boost_1_87_0/boost/asio/ip/impl/network_v4.ipp:42:    boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/ip/impl/network_v4.ipp:59:        boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/ip/impl/network_v4.ipp:89:        boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/ip/impl/network_v4.ipp:124:  boost::asio::detail::throw_error(ec);
/root/boost_1_87_0/boost/asio/ip/impl/network_v4.ipp:157:  boost::asio::detail::throw_error(ec);
/root/boost_1_87_0/boost/asio/ip/impl/network_v4.ipp:168:    ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/ip/impl/network_v4.ipp:174:    ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/ip/impl/network_v4.ipp:181:    ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/ip/impl/network_v4.ipp:192:    ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/ip/impl/network_v6.hpp:37:      boost::asio::detail::throw_error(ec);
/root/boost_1_87_0/boost/asio/ip/impl/network_v6.ipp:42:    boost::asio::detail::throw_exception(ex);
/root/boost_1_87_0/boost/asio/ip/impl/network_v6.ipp:93:  boost::asio::detail::throw_error(ec);
/root/boost_1_87_0/boost/asio/ip/impl/network_v6.ipp:126:  boost::asio::detail::throw_error(ec);
/root/boost_1_87_0/boost/asio/ip/impl/network_v6.ipp:137:    ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/ip/impl/network_v6.ipp:143:    ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/ip/impl/network_v6.ipp:150:    ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/ip/impl/network_v6.ipp:161:    ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:36: * boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:38: * boost::asio::ip::address multicast_address =
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:39: *   boost::asio::ip::address::from_string("225.0.0.1");
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:40: * boost::asio::ip::multicast::join_group option(multicast_address);
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:50:typedef boost::asio::ip::detail::socket_option::multicast_request<
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:64: * boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:66: * boost::asio::ip::address multicast_address =
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:67: *   boost::asio::ip::address::from_string("225.0.0.1");
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:68: * boost::asio::ip::multicast::leave_group option(multicast_address);
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:78:typedef boost::asio::ip::detail::socket_option::multicast_request<
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:92: * boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:94: * boost::asio::ip::address_v4 local_interface =
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:95: *   boost::asio::ip::address_v4::from_string("1.2.3.4");
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:96: * boost::asio::ip::multicast::outbound_interface option(local_interface);
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:106:typedef boost::asio::ip::detail::socket_option::network_interface<
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:120: * boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:122: * boost::asio::ip::multicast::hops option(4);
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:129: * boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:131: * boost::asio::ip::multicast::hops option;
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:142:typedef boost::asio::ip::detail::socket_option::multicast_hops<
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:157: * boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:159: * boost::asio::ip::multicast::enable_loopback option(true);
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:166: * boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:168: * boost::asio::ip::multicast::enable_loopback option;
/root/boost_1_87_0/boost/asio/ip/multicast.hpp:179:typedef boost::asio::ip::detail::socket_option::multicast_enable_loopback<
/root/boost_1_87_0/boost/asio/ip/network_v4.hpp:33: * The boost::asio::ip::network_v4 class provides the ability to use and
/root/boost_1_87_0/boost/asio/ip/network_v4.hpp:240: * @relates boost::asio::ip::address_v4
/root/boost_1_87_0/boost/asio/ip/network_v6.hpp:33: * The boost::asio::ip::network_v6 class provides the ability to use and
/root/boost_1_87_0/boost/asio/ip/network_v6.hpp:214: * @relates boost::asio::ip::address_v6
/root/boost_1_87_0/boost/asio/ip/tcp.hpp:37: * The boost::asio::ip::tcp class contains flags necessary for TCP sockets.
/root/boost_1_87_0/boost/asio/ip/tcp.hpp:103:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/ip/tcp.hpp:105:   * boost::asio::ip::tcp::no_delay option(true);
/root/boost_1_87_0/boost/asio/ip/tcp.hpp:112:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/ip/tcp.hpp:114:   * boost::asio::ip::tcp::no_delay option;
/root/boost_1_87_0/boost/asio/ip/tcp.hpp:125:  typedef boost::asio::detail::socket_option::boolean<
/root/boost_1_87_0/boost/asio/ip/udp.hpp:34: * The boost::asio::ip::udp class contains flags necessary for UDP sockets.
/root/boost_1_87_0/boost/asio/ip/unicast.hpp:36: * boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/ip/unicast.hpp:38: * boost::asio::ip::unicast::hops option(4);
/root/boost_1_87_0/boost/asio/ip/unicast.hpp:45: * boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/ip/unicast.hpp:47: * boost::asio::ip::unicast::hops option;
/root/boost_1_87_0/boost/asio/ip/unicast.hpp:58:typedef boost::asio::ip::detail::socket_option::unicast_hops<
/root/boost_1_87_0/boost/asio/ip/v6_only.hpp:35: * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/ip/v6_only.hpp:37: * boost::asio::ip::v6_only option(true);
/root/boost_1_87_0/boost/asio/ip/v6_only.hpp:44: * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/ip/v6_only.hpp:46: * boost::asio::ip::v6_only option;
/root/boost_1_87_0/boost/asio/ip/v6_only.hpp:57:typedef boost::asio::detail::socket_option::boolean<
/root/boost_1_87_0/boost/asio/ip/v6_only.hpp:60:typedef boost::asio::detail::socket_option::boolean<
/root/boost_1_87_0/boost/asio/ip/v6_only.hpp:61:    boost::asio::detail::custom_socket_option_level,
/root/boost_1_87_0/boost/asio/ip/v6_only.hpp:62:    boost::asio::detail::always_fail_option> v6_only;
/root/boost_1_87_0/boost/asio/is_executor.hpp:38:  : boost::asio::detail::is_executor<T>
/root/boost_1_87_0/boost/asio/local/basic_endpoint.hpp:38: * The boost::asio::local::basic_endpoint class template describes an endpoint
/root/boost_1_87_0/boost/asio/local/basic_endpoint.hpp:60:  typedef boost::asio::detail::socket_addr_type data_type;
/root/boost_1_87_0/boost/asio/local/basic_endpoint.hpp:212:  boost::asio::local::detail::endpoint impl_;
/root/boost_1_87_0/boost/asio/local/basic_endpoint.hpp:225: * @relates boost::asio::local::basic_endpoint
/root/boost_1_87_0/boost/asio/local/connect_pair.hpp:51:  boost::asio::detail::throw_error(ec, "connect_pair");
/root/boost_1_87_0/boost/asio/local/connect_pair.hpp:60:  boost::asio::local::basic_endpoint<Protocol>* tmp
/root/boost_1_87_0/boost/asio/local/connect_pair.hpp:65:  boost::asio::detail::socket_type sv[2];
/root/boost_1_87_0/boost/asio/local/connect_pair.hpp:66:  if (boost::asio::detail::socket_ops::socketpair(protocol.family(),
/root/boost_1_87_0/boost/asio/local/connect_pair.hpp:68:      == boost::asio::detail::socket_error_retval)
/root/boost_1_87_0/boost/asio/local/connect_pair.hpp:75:    boost::asio::detail::socket_ops::state_type state[2] = { 0, 0 };
/root/boost_1_87_0/boost/asio/local/connect_pair.hpp:76:    boost::asio::detail::socket_ops::close(sv[0], state[0], true, temp_ec);
/root/boost_1_87_0/boost/asio/local/connect_pair.hpp:77:    boost::asio::detail::socket_ops::close(sv[1], state[1], true, temp_ec);
/root/boost_1_87_0/boost/asio/local/connect_pair.hpp:86:    boost::asio::detail::socket_ops::state_type state = 0;
/root/boost_1_87_0/boost/asio/local/connect_pair.hpp:87:    boost::asio::detail::socket_ops::close(sv[1], state, true, temp_ec);
/root/boost_1_87_0/boost/asio/local/datagram_protocol.hpp:35: * The boost::asio::local::datagram_protocol class contains flags necessary for
/root/boost_1_87_0/boost/asio/local/detail/endpoint.hpp:69:  boost::asio::detail::socket_addr_type* data()
/root/boost_1_87_0/boost/asio/local/detail/endpoint.hpp:75:  const boost::asio::detail::socket_addr_type* data() const
/root/boost_1_87_0/boost/asio/local/detail/endpoint.hpp:84:      + offsetof(boost::asio::detail::sockaddr_un_type, sun_path);
/root/boost_1_87_0/boost/asio/local/detail/endpoint.hpp:93:    return sizeof(boost::asio::detail::sockaddr_un_type);
/root/boost_1_87_0/boost/asio/local/detail/endpoint.hpp:117:    boost::asio::detail::socket_addr_type base;
/root/boost_1_87_0/boost/asio/local/detail/endpoint.hpp:118:    boost::asio::detail::sockaddr_un_type local;
/root/boost_1_87_0/boost/asio/local/detail/impl/endpoint.ipp:61:  if (new_size > sizeof(boost::asio::detail::sockaddr_un_type))
/root/boost_1_87_0/boost/asio/local/detail/impl/endpoint.ipp:63:    boost::system::error_code ec(boost::asio::error::invalid_argument);
/root/boost_1_87_0/boost/asio/local/detail/impl/endpoint.ipp:64:    boost::asio::detail::throw_error(ec);
/root/boost_1_87_0/boost/asio/local/detail/impl/endpoint.ipp:73:      - offsetof(boost::asio::detail::sockaddr_un_type, sun_path);
/root/boost_1_87_0/boost/asio/local/detail/impl/endpoint.ipp:112:    boost::system::error_code ec(boost::asio::error::name_too_long);
/root/boost_1_87_0/boost/asio/local/detail/impl/endpoint.ipp:113:    boost::asio::detail::throw_error(ec);
/root/boost_1_87_0/boost/asio/local/detail/impl/endpoint.ipp:117:  memset(&data_.local, 0, sizeof(boost::asio::detail::sockaddr_un_type));
/root/boost_1_87_0/boost/asio/local/seq_packet_protocol.hpp:36: * The boost::asio::local::seq_packet_protocol class contains flags necessary
/root/boost_1_87_0/boost/asio/local/stream_protocol.hpp:37: * The boost::asio::local::stream_protocol class contains flags necessary for
/root/boost_1_87_0/boost/asio/placeholders.hpp:36:/// functions such as boost::asio::basic_stream_socket::async_write_some or
/root/boost_1_87_0/boost/asio/placeholders.hpp:37:/// boost::asio::async_write.
/root/boost_1_87_0/boost/asio/placeholders.hpp:42:/// such as boost::asio::async_connect.
/root/boost_1_87_0/boost/asio/placeholders.hpp:47:/// such as boost::asio::basic_resolver::async_resolve.
/root/boost_1_87_0/boost/asio/placeholders.hpp:52:/// such as boost::asio::async_connect.
/root/boost_1_87_0/boost/asio/placeholders.hpp:57:/// functions such as boost::asio::signal_set::async_wait.
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:139:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:166:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:297:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:326:   * boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:335:    boost::asio::detail::throw_error(ec, "close");
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:342:   * boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:372:   * boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:383:   * passed the boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:391:    boost::asio::detail::throw_error(ec, "cancel");
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:398:   * passed the boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:417:   * boost::asio::posix::descriptor_base::bytes_readable @n/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:418:   * boost::asio::posix::descriptor_base::non_blocking_io
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:423:   * boost::asio::posix::stream_descriptor descriptor(my_context);
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:425:   * boost::asio::posix::stream_descriptor::bytes_readable command;
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:435:    boost::asio::detail::throw_error(ec, "io_control");
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:447:   * boost::asio::posix::descriptor_base::bytes_readable @n/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:448:   * boost::asio::posix::descriptor_base::non_blocking_io
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:453:   * boost::asio::posix::stream_descriptor descriptor(my_context);
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:455:   * boost::asio::posix::stream_descriptor::bytes_readable command;
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:476:   * boost::asio::error::would_block if they are unable to perform the requested
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:482:   * boost::asio::error::would_block.
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:492:   * with boost::asio::error::would_block if they are unable to perform the
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:500:   * boost::asio::error::would_block.
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:506:    boost::asio::detail::throw_error(ec, "non_blocking");
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:512:   * with boost::asio::error::would_block if they are unable to perform the
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:520:   * boost::asio::error::would_block.
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:536:   * direct system calls may fail with boost::asio::error::would_block (or the
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:556:   * mode and direct system calls may fail with boost::asi
::error::would_block
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:561:   * function fails with boost::asio::error::invalid_argument, as the
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:569:    boost::asio::detail::throw_error(ec, "native_non_blocking");
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:579:   * mode and direct system calls may fail with boost::asi
::error::would_block
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:584:   * function fails with boost::asio::error::invalid_argument, as the
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:606:   * boost::asio::posix::stream_descriptor descriptor(my_context);
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:608:   * descriptor.wait(boost::asio::posix::stream_descriptor::wait_read);
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:615:    boost::asio::detail::throw_error(ec, "wait");
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:631:   * boost::asio::posix::stream_descriptor descriptor(my_context);
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:634:   * descriptor.wait(boost::asio::posix::stream_descriptor::wait_read, ec);
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:664:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:681:   * boost::asio::posix::stream_descriptor descriptor(my_context);
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:684:   *     boost::asio::posix::stream_descriptor::wait_read,
/root/boost_1_87_0/boost/asio/posix/basic_descriptor.hpp:690:   * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/posix/basic_stream_descriptor.hpp:238:   * boost::asio::error::eof indicates that the connection was closed by the
/root/boost_1_87_0/boost/asio/posix/basic_stream_descriptor.hpp:248:   * descriptor.write_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/boost/asio/posix/basic_stream_descriptor.hpp:260:    boost::asio::detail::throw_error(ec, "write_some");
/root/boost_1_87_0/boost/asio/posix/basic_stream_descriptor.hpp:311:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/posix/basic_stream_descriptor.hpp:323:   * descriptor.async_write_some(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/posix/basic_stream_descriptor.hpp:331:   * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/posix/basic_stream_descriptor.hpp:365:   * boost::asio::error::eof indicates that the connection was closed by the
/root/boost_1_87_0/boost/asio/posix/basic_stream_descriptor.hpp:376:   * descriptor.read_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/boost/asio/posix/basic_stream_descriptor.hpp:388:    boost::asio::detail::throw_error(ec, "read_some");
/root/boost_1_87_0/boost/asio/posix/basic_stream_descriptor.hpp:440:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/posix/basic_stream_descriptor.hpp:453:   * descriptor.async_read_some(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/posix/basic_stream_descriptor.hpp:461:   * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/posix/descriptor_base.hpp:60:   * boost::asio::posix::stream_descriptor descriptor(my_context);
/root/boost_1_87_0/boost/asio/posix/descriptor_base.hpp:62:   * boost::asio::descriptor_base::bytes_readable command(true);
/root/boost_1_87_0/boost/asio/posix/descriptor_base.hpp:73:  typedef boost::asio::detail::io_control::bytes_readable bytes_readable;
/root/boost_1_87_0/boost/asio/prefer.hpp:37: * expression <tt>boost::asio::prefer(E, P0, Pn...)</tt> for some subexpressions
/root/boost_1_87_0/boost/asio/prefer.hpp:45: *   <tt>boost::asio::prefer(E, P0, Pn...)</tt> is ill-formed.
/root/boost_1_87_0/boost/asio/prefer.hpp:70: *   <tt>boost::asio::prefer(boost::asio::prefer(E, P0), Pn...)</tt>
/root/boost_1_87_0/boost/asio/prefer.hpp:72: *   <tt>boost::asio::prefer(boost::asio::prefer(E, P0), Pn...)</tt>
/root/boost_1_87_0/boost/asio/prefer.hpp:75: * @li Otherwise, <tt>boost::asio::prefer(E, P0, Pn...)</tt> is ill-formed.
/root/boost_1_87_0/boost/asio/prefer.hpp:82: * @c true_type if the expression <tt>boost::asio::prefer(std::declval<T>(),/root/boost_1_87_0/boost/asio/prefer.hpp:94: * @c true_type if the expression <tt>boost::asio::prefer(std::declval<T>(),/root/boost_1_87_0/boost/asio/prefer.hpp:106: * type of the expression <tt>boost::asio::prefer(std::declval<T>(),
/root/boost_1_87_0/boost/asio/prefer.hpp:123:using boost::asio::conditional_t;
/root/boost_1_87_0/boost/asio/prefer.hpp:124:using boost::asio::decay_t;
/root/boost_1_87_0/boost/asio/prefer.hpp:125:using boost::asio::declval;
/root/boost_1_87_0/boost/asio/prefer.hpp:126:using boost::asio::enable_if_t;
/root/boost_1_87_0/boost/asio/prefer.hpp:127:using boost::asio::is_applicable_property;
/root/boost_1_87_0/boost/asio/prefer.hpp:128:using boost::asio::traits::prefer_free;
/root/boost_1_87_0/boost/asio/prefer.hpp:129:using boost::asio::traits::prefer_member;
/root/boost_1_87_0/boost/asio/prefer.hpp:130:using boost::asio::traits::require_free;
/root/boost_1_87_0/boost/asio/prefer.hpp:131:using boost::asio::traits::require_member;
/root/boost_1_87_0/boost/asio/prefer.hpp:132:using boost::asio::traits::static_require;
/root/boost_1_87_0/boost/asio/query.hpp:35: * expression <tt>boost::asio::query(E, P)</tt> for some
/root/boost_1_87_0/boost/asio/query.hpp:41: *   constant expression with value <tt>true</tt>, <tt>boost::asio::query(E,
/root/boost_1_87_0/boost/asio/query.hpp:56: * @li Otherwise, <tt>boost::asio::query(E, P)</tt> is ill-formed.
/root/boost_1_87_0/boost/asio/query.hpp:63: * @c true_type if the expression <tt>boost::asio::query(std::declval<T>(),
/root/boost_1_87_0/boost/asio/query.hpp:76: * @c true_type if the expression <tt>boost::asio::query(std::declval<T>(),
/root/boost_1_87_0/boost/asio/query.hpp:88: * type of the expression <tt>boost::asio::query(std::declval<T>(),
/root/boost_1_87_0/boost/asio/query.hpp:105:using boost::asio::conditional_t;
/root/boost_1_87_0/boost/asio/query.hpp:106:using boost::asio::decay_t;
/root/boost_1_87_0/boost/asio/query.hpp:107:using boost::asio::declval;
/root/boost_1_87_0/boost/asio/query.hpp:108:using boost::asio::enable_if_t;
/root/boost_1_87_0/boost/asio/query.hpp:109:using boost::asio::is_applicable_property;
/root/boost_1_87_0/boost/asio/query.hpp:110:using boost::asio::traits::query_free;
/root/boost_1_87_0/boost/asio/query.hpp:111:using boost::asio::traits::query_member;
/root/boost_1_87_0/boost/asio/query.hpp:112:using boost::asio::traits::static_query;
/root/boost_1_87_0/boost/asio/read.hpp:44: * @defgroup read boost::asio::read
/root/boost_1_87_0/boost/asio/read.hpp:77: * @code boost::asio::read(s, boost::asio::buffer(data, size)); @endcode
/root/boost_1_87_0/boost/asio/read.hpp:83: * @code boost::asio::read(
/root/boost_1_87_0/boost/asio/read.hpp:85: *     boost::asio::transfer_all()); @endcode
/root/boost_1_87_0/boost/asio/read.hpp:119: * @code boost::asio::read(s, boost::asio::buffer(data, size), ec); @endcode
/root/boost_1_87_0/boost/asio/read.hpp:125: * @code boost::asio::read(
/root/boost_1_87_0/boost/asio/read.hpp:127: *     boost::asio::transfer_all(), ec); @endcode
/root/boost_1_87_0/boost/asio/read.hpp:176: * @code boost::asio::read(s, boost::asio::buffer(data, size),
/root/boost_1_87_0/boost/asio/read.hpp:177: *     boost::asio::transfer_at_least(32)); @endcode
/root/boost_1_87_0/boost/asio/read.hpp:268: * @code boost::asio::read(
/root/boost_1_87_0/boost/asio/read.hpp:270: *     boost::asio::transfer_all()); @endcode
/root/boost_1_87_0/boost/asio/read.hpp:304: * @code boost::asio::read(
/root/boost_1_87_0/boost/asio/read.hpp:306: *     boost::asio::transfer_all(), ec); @endcode
/root/boost_1_87_0/boost/asio/read.hpp:447: * @code boost::asio::read(
/root/boost_1_87_0/boost/asio/read.hpp:449: *     boost::asio::transfer_all()); @endcode
/root/boost_1_87_0/boost/asio/read.hpp:476: * @code boost::asio::read(
/root/boost_1_87_0/boost/asio/read.hpp:478: *     boost::asio::transfer_all(), ec); @endcode
/root/boost_1_87_0/boost/asio/read.hpp:598: * @code boost::asio::read(
/root/boost_1_87_0/boost/asio/read.hpp:600: *     boost::asio::transfer_all()); @endcode
/root/boost_1_87_0/boost/asio/read.hpp:630: * @code boost::asio::read(
/root/boost_1_87_0/boost/asio/read.hpp:632: *     boost::asio::transfer_all(), ec); @endcode
/root/boost_1_87_0/boost/asio/read.hpp:738: * @defgroup async_read boost::asio::async_read
/root/boost_1_87_0/boost/asio/read.hpp:790: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/read.hpp:798: * boost::asio::async_read(s, boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/read.hpp:805: * @code boost::asio::async_read(
/root/boost_1_87_0/boost/asio/read.hpp:807: *     boost::asio::transfer_all(),
/root/boost_1_87_0/boost/asio/read.hpp:812: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/read.hpp:899: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/read.hpp:906: * @code boost::asio::async_read(s,
/root/boost_1_87_0/boost/asio/read.hpp:907: *     boost::asio::buffer(data, size),
/root/boost_1_87_0/boost/asio/read.hpp:908: *     boost::asio::transfer_at_least(32),
/root/boost_1_87_0/boost/asio/read.hpp:916: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/read.hpp:999: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/read.hpp:1005: * @code boost::asio::async_read(
/root/boost_1_87_0/boost/asio/read.hpp:1007: *     boost::asio::transfer_all(),
/root/boost_1_87_0/boost/asio/read.hpp:1012: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/read.hpp:1107: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/read.hpp:1114: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/read.hpp:1200: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/read.hpp:1206: * @code boost::asio::async_read(
/root/boost_1_87_0/boost/asio/read.hpp:1208: *     boost::asio::transfer_all(),
/root/boost_1_87_0/boost/asio/read.hpp:1213: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/read.hpp:1300: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/read.hpp:1307: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/read.hpp:1390: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/read.hpp:1396: * @code boost::asio::async_read(
/root/boost_1_87_0/boost/asio/read.hpp:1398: *     boost::asio::transfer_all(),
/root/boost_1_87_0/boost/asio/read.hpp:1403: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/read.hpp:1495: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/read.hpp:1502: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/read_at.hpp:43: * @defgroup read_at boost::asio::read_at
/root/boost_1_87_0/boost/asio/read_at.hpp:80: * @code boost::asio::read_at(d, 42, boost::asio::buffer(data, size)); @endcode
/root/boost_1_87_0/boost/asio/read_at.hpp:86: * @code boost::asio::read_at(
/root/boost_1_87_0/boost/asio/read_at.hpp:88: *     boost::asio::transfer_all()); @endcode
/root/boost_1_87_0/boost/asio/read_at.hpp:124: * @code boost::asio::read_at(d, 42,
/root/boost_1_87_0/boost/asio/read_at.hpp:125: *     boost::asio::buffer(data, size), ec); @endcode
/root/boost_1_87_0/boost/asio/read_at.hpp:131: * @code boost::asio::read_at(
/root/boost_1_87_0/boost/asio/read_at.hpp:133: *     boost::asio::transfer_all(), ec); @endcode
/root/boost_1_87_0/boost/asio/read_at.hpp:184: * @code boost::asio::read_at(d, 42, boost::asio::buffer(data, size),
/root/boost_1_87_0/boost/asio/read_at.hpp:185: *     boost::asio::transfer_at_least(32)); @endcode
/root/boost_1_87_0/boost/asio/read_at.hpp:278: * @code boost::asio::read_at(
/root/boost_1_87_0/boost/asio/read_at.hpp:280: *     boost::asio::transfer_all()); @endcode
/root/boost_1_87_0/boost/asio/read_at.hpp:310: * @code boost::asio::read_at(
/root/boost_1_87_0/boost/asio/read_at.hpp:312: *     boost::asio::transfer_all(), ec); @endcode
/root/boost_1_87_0/boost/asio/read_at.hpp:417: * @defgroup async_read_at boost::asio::async_read_at
/root/boost_1_87_0/boost/asio/read_at.hpp:469: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/read_at.hpp:477: * boost::asio::async_read_at(d, 42, boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/read_at.hpp:484: * @code boost::asio::async_read_at(
/root/boost_1_87_0/boost/asio/read_at.hpp:486: *     boost::asio::transfer_all(),
/root/boost_1_87_0/boost/asio/read_at.hpp:491: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/read_at.hpp:579: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/read_at.hpp:586: * @code boost::asio::async_read_at(d, 42,
/root/boost_1_87_0/boost/asio/read_at.hpp:587: *     boost::asio::buffer(data, size),
/root/boost_1_87_0/boost/asio/read_at.hpp:588: *     boost::asio::transfer_at_least(32),
/root/boost_1_87_0/boost/asio/read_at.hpp:596: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/read_at.hpp:675: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/read_at.hpp:681: * @code boost::asio::async_read_at(
/root/boost_1_87_0/boost/asio/read_at.hpp:683: *     boost::asio::transfer_all(),
/root/boost_1_87_0/boost/asio/read_at.hpp:688: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/read_at.hpp:775: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/read_at.hpp:782: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/read_until.hpp:77:    value = boost::asio::is_function<remove_pointer_t<T>>::value
/root/boost_1_87_0/boost/asio/read_until.hpp:84: * @defgroup read_until boost::asio::read_until
/root/boost_1_87_0/boost/asio/read_until.hpp:132: * std::size_t n = boost::asio::read_until(s,
/root/boost_1_87_0/boost/asio/read_until.hpp:133: *     boost::asio::dynamic_buffer(data), '\n');
/root/boost_1_87_0/boost/asio/read_until.hpp:238: * std::size_t n = boost::asio::read_until(s,
/root/boost_1_87_0/boost/asio/read_until.hpp:239: *     boost::asio::dynamic_buffer(data), "\r\n");
/root/boost_1_87_0/boost/asio/read_until.hpp:353: * std::size_t n = boost::asio::read_until(s,
/root/boost_1_87_0/boost/asio/read_until.hpp:354: *     boost::asio::dynamic_buffer(data), boost::regex("\r\n"));
/root/boost_1_87_0/boost/asio/read_until.hpp:483: * @code typedef boost::asio::buffers_iterator<
/root/boost_1_87_0/boost/asio/read_until.hpp:484: *     boost::asio::const_buffer> iterator;
/root/boost_1_87_0/boost/asio/read_until.hpp:497: * boost::asio::read_until(s, data, match_whitespace);
/root/boost_1_87_0/boost/asio/read_until.hpp:527: * boost::asio::read_until(s, data, match_char('a'));
/root/boost_1_87_0/boost/asio/read_until.hpp:647: * @code boost::asio::streambuf b;
/root/boost_1_87_0/boost/asio/read_until.hpp:648: * boost::asio::read_until(s, b, '\n');
/root/boost_1_87_0/boost/asio/read_until.hpp:665:    boost::asio::basic_streambuf<Allocator>& b, char delim);
/root/boost_1_87_0/boost/asio/read_until.hpp:699:    boost::asio::basic_streambuf<Allocator>& b, char delim,
/root/boost_1_87_0/boost/asio/read_until.hpp:734: * @code boost::asio::streambuf b;
/root/boost_1_87_0/boost/asio/read_until.hpp:735: * boost::asio::read_until(s, b, "\r\n");
/root/boost_1_87_0/boost/asio/read_until.hpp:752:    boost::asio::basic_streambuf<Allocator>& b,
/root/boost_1_87_0/boost/asio/read_until.hpp:787:    boost::asio::basic_streambuf<Allocator>& b,
/root/boost_1_87_0/boost/asio/read_until.hpp:827: * @code boost::asio::streambuf b;
/root/boost_1_87_0/boost/asio/read_until.hpp:828: * boost::asio::read_until(s, b, boost::regex("\r\n"));
/root/boost_1_87_0/boost/asio/read_until.hpp:845:    boost::asio::basic_streambuf<Allocator>& b,
/root/boost_1_87_0/boost/asio/read_until.hpp:883:    boost::asio::basic_streambuf<Allocator>& b,
/root/boost_1_87_0/boost/asio/read_until.hpp:943: * @code typedef boost::asio::buffers_iterator<
/root/boost_1_87_0/boost/asio/read_until.hpp:944: *     boost::asio::streambuf::const_buffers_type> iterator;
/root/boost_1_87_0/boost/asio/read_until.hpp:956: * boost::asio::streambuf b;
/root/boost_1_87_0/boost/asio/read_until.hpp:957: * boost::asio::read_until(s, b, match_whitespace);
/root/boost_1_87_0/boost/asio/read_until.hpp:986: * boost::asio::streambuf b;
/root/boost_1_87_0/boost/asio/read_until.hpp:987: * boost::asio::read_until(s, b, match_char('a'));
/root/boost_1_87_0/boost/asio/read_until.hpp:992:    boost::asio::basic_streambuf<Allocator>& b, MatchCondition match_condition,
/root/boost_1_87_0/boost/asio/read_until.hpp:1048:    boost::asio::basic_streambuf<Allocator>& b,
/root/boost_1_87_0/boost/asio/read_until.hpp:1093: * std::size_t n = boost::asio::read_until(s,
/root/boost_1_87_0/boost/asio/read_until.hpp:1094: *     boost::asio::dynamic_buffer(data), '\n');
/root/boost_1_87_0/boost/asio/read_until.hpp:1191: * std::size_t n = boost::asio::read_until(s,
/root/boost_1_87_0/boost/asio/read_until.hpp:1192: *     boost::asio::dynamic_buffer(data), "\r\n");
/root/boost_1_87_0/boost/asio/read_until.hpp:1297: * std::size_t n = boost::asio::read_until(s,
/root/boost_1_87_0/boost/asio/read_until.hpp:1298: *     boost::asio::dynamic_buffer(data), boost::regex("\r\n"));
/root/boost_1_87_0/boost/asio/read_until.hpp:1421: * @code typedef boost::asio::buffers_iterator<
/root/boost_1_87_0/boost/asio/read_until.hpp:1422: *     boost::asio::const_buffer> iterator;
/root/boost_1_87_0/boost/asio/read_until.hpp:1435: * boost::asio::read_until(s, data, match_whitespace);
/root/boost_1_87_0/boost/asio/read_until.hpp:1465: * boost::asio::read_until(s, data, match_char('a'));
/root/boost_1_87_0/boost/asio/read_until.hpp:1547: * @defgroup async_read_until boost::asio::async_read_until
/root/boost_1_87_0/boost/asio/read_until.hpp:1606: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/read_until.hpp:1631: * boost::asio::async_read_until(s, data, '\n', handler); @endcode
/root/boost_1_87_0/boost/asio/read_until.hpp:1646: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/read_until.hpp:1729: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/read_until.hpp:1754: * boost::asio::async_read_until(s, data, "\r\n", handler); @endcode
/root/boost_1_87_0/boost/asio/read_until.hpp:1769: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/read_until.hpp:1864: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/read_until.hpp:1889: * boost::asio::async_read_until(s, data,
/root/boost_1_87_0/boost/asio/read_until.hpp:1905: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/read_until.hpp:2006: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/read_until.hpp:2024: * @code typedef boost::asio::buffers_iterator<
/root/boost_1_87_0/boost/asio/read_until.hpp:2025: *     boost::asio::const_buffer> iterator;
/root/boost_1_87_0/boost/asio/read_until.hpp:2040: * boost::asio::async_read_until(s, data, match_whitespace, handler);
/root/boost_1_87_0/boost/asio/read_until.hpp:2073: * boost::asio::async_read_until(s, data, match_char('a'), handler);
/root/boost_1_87_0/boost/asio/read_until.hpp:2078: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/read_until.hpp:2168: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/read_until.hpp:2180: * @code boost::asio::streambuf b;
/root/boost_1_87_0/boost/asio/read_until.hpp:2193: * boost::asio::async_read_until(s, b, '\n', handler); @endcode
/root/boost_1_87_0/boost/asio/read_until.hpp:2207: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/read_until.hpp:2221:    boost::asio::basic_streambuf<Allocator>& b, char delim,
/root/boost_1_87_0/boost/asio/read_until.hpp:2283: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/read_until.hpp:2295: * @code boost::asio::streambuf b;
/root/boost_1_87_0/boost/asio/read_until.hpp:2308: * boost::asio::async_read_until(s, b, "\r\n", handler); @endcode
/root/boost_1_87_0/boost/asio/read_until.hpp:2322: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/read_until.hpp:2336:    boost::asio::basic_streambuf<Allocator>& b,
/root/boost_1_87_0/boost/asio/read_until.hpp:2407: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/read_until.hpp:2420: * @code boost::asio::streambuf b;
/root/boost_1_87_0/boost/asio/read_until.hpp:2433: * boost::asio::async_read_until(s, b, boost::regex("\r\n"), handler); @endcode
/root/boost_1_87_0/boost/asio/read_until.hpp:2447: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/read_until.hpp:2461:    boost::asio::basic_streambuf<Allocator>& b,
/root/boost_1_87_0/boost/asio/read_until.hpp:2540: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/read_until.hpp:2557: * @code typedef boost::asio::buffers_iterator<
/root/boost_1_87_0/boost/asio/read_until.hpp:2558: *     boost::asio::streambuf::const_buffers_type> iterator;
/root/boost_1_87_0/boost/asio/read_until.hpp:2572: * boost::asio::streambuf b;
/root/boost_1_87_0/boost/asio/read_until.hpp:2573: * boost::asio::async_read_until(s, b, match_whitespace, handler);
/root/boost_1_87_0/boost/asio/read_until.hpp:2605: * boost::asio::streambuf b;
/root/boost_1_87_0/boost/asio/read_until.hpp:2606: * boost::asio::async_read_until(s, b, match_char('a'), handler);
/root/boost_1_87_0/boost/asio/read_until.hpp:2611: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/read_until.hpp:2625:    boost::asio::basic_streambuf<Allocator>& b, MatchCondition match_condition,
/root/boost_1_87_0/boost/asio/read_until.hpp:2694: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/read_until.hpp:2719: * boost::asio::async_read_until(s, data, '\n', handler); @endcode
/root/boost_1_87_0/boost/asio/read_until.hpp:2734: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/read_until.hpp:2814: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/read_until.hpp:2839: * boost::asio::async_read_until(s, data, "\r\n", handler); @endcode
/root/boost_1_87_0/boost/asio/read_until.hpp:2854: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/read_until.hpp:2945: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/read_until.hpp:2970: * boost::asio::async_read_until(s, data,
/root/boost_1_87_0/boost/asio/read_until.hpp:2986: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/read_until.hpp:3084: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/read_until.hpp:3102: * @code typedef boost::asio::buffers_iterator<
/root/boost_1_87_0/boost/asio/read_until.hpp:3103: *     boost::asio::const_buffer> iterator;
/root/boost_1_87_0/boost/asio/read_until.hpp:3118: * boost::asio::async_read_until(s, data, match_whitespace, handler);
/root/boost_1_87_0/boost/asio/read_until.hpp:3151: * boost::asio::async_read_until(s, data, match_char('a'), handler);
/root/boost_1_87_0/boost/asio/read_until.hpp:3156: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/redirect_error.hpp:54: * asynchronous operation's default completion token (or boost::asi
::deferred
/root/boost_1_87_0/boost/asio/require.hpp:36: * expression <tt>boost::asio::require(E, P0, Pn...)</tt> for some
/root/boost_1_87_0/boost/asio/require.hpp:44: *   <tt>boost::asio::require(E, P0, Pn...)</tt> is ill-formed.
/root/boost_1_87_0/boost/asio/require.hpp:59: *   <tt>boost::asio::require(boost::asio::require(E, P0), Pn...)</tt>
/root/boost_1_87_0/boost/asio/require.hpp:61: *   <tt>boost::asio::require(boost::asio::require(E, P0), Pn...)</tt>
/root/boost_1_87_0/boost/asio/require.hpp:64: * @li Otherwise, <tt>boost::asio::require(E, P0, Pn...)</tt> is ill-formed.
/root/boost_1_87_0/boost/asio/require.hpp:71: * @c true_type if the expression <tt>boost::asio::require(std::declval<T>(),
/root/boost_1_87_0/boost/asio/require.hpp:83: * @c true_type if the expression <tt>boost::asio::require(std::declval<T>(),
/root/boost_1_87_0/boost/asio/require.hpp:95: * type of the expression <tt>boost::asio::require(std::declval<T>(),
/root/boost_1_87_0/boost/asio/require.hpp:112:using boost::asio::conditional_t;
/root/boost_1_87_0/boost/asio/require.hpp:113:using boost::asio::decay_t;
/root/boost_1_87_0/boost/asio/require.hpp:114:using boost::asio::declval;
/root/boost_1_87_0/boost/asio/require.hpp:115:using boost::asio::enable_if_t;
/root/boost_1_87_0/boost/asio/require.hpp:116:using boost::asio::is_applicable_property;
/root/boost_1_87_0/boost/asio/require.hpp:117:using boost::asio::traits::require_free;
/root/boost_1_87_0/boost/asio/require.hpp:118:using boost::asio::traits::require_member;
/root/boost_1_87_0/boost/asio/require.hpp:119:using boost::asio::traits::static_require;
/root/boost_1_87_0/boost/asio/require_concept.hpp:36: * expression <tt>boost::asio::require_concept(E, P)</tt> for some
/root/boost_1_87_0/boost/asio/require_concept.hpp:43: *   with value <tt>true</tt>, <tt>boost::asio::require_concept(E, P)</tt> is
/root/boost_1_87_0/boost/asio/require_concept.hpp:58: * @li Otherwise, <tt>boost::asio::require_concept(E, P)</tt> is ill-formed.
/root/boost_1_87_0/boost/asio/require_concept.hpp:67: * <tt>boost::asio::require_concept(std::declval<T>(),
/root/boost_1_87_0/boost/asio/require_concept.hpp:81: * <tt>boost::asio::require_concept(std::declval<T>(),
/root/boost_1_87_0/boost/asio/require_concept.hpp:95: * <tt>boost::asio::require_concept(std::declval<T>(),
/root/boost_1_87_0/boost/asio/require_concept.hpp:112:using boost::asio::conditional_t;
/root/boost_1_87_0/boost/asio/require_concept.hpp:113:using boost::asio::decay_t;
/root/boost_1_87_0/boost/asio/require_concept.hpp:114:using boost::asio::declval;
/root/boost_1_87_0/boost/asio/require_concept.hpp:115:using boost::asio::enable_if_t;
/root/boost_1_87_0/boost/asio/require_concept.hpp:116:using boost::asio::is_applicable_property;
/root/boost_1_87_0/boost/asio/require_concept.hpp:117:using boost::asio::traits::require_concept_free;
/root/boost_1_87_0/boost/asio/require_concept.hpp:118:using boost::asio::traits::require_concept_member;
/root/boost_1_87_0/boost/asio/require_concept.hpp:119:using boost::asio::traits::static_require_concept;
/root/boost_1_87_0/boost/asio/socket_base.hpp:102:   * boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:104:   * boost::asio::socket_base::broadcast option(true);
/root/boost_1_87_0/boost/asio/socket_base.hpp:111:   * boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:113:   * boost::asio::socket_base::broadcast option;
/root/boost_1_87_0/boost/asio/socket_base.hpp:124:  typedef boost::asio::detail::socket_option::boolean<
/root/boost_1_87_0/boost/asio/socket_base.hpp:136:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:138:   * boost::asio::socket_base::debug option(true);
/root/boost_1_87_0/boost/asio/socket_base.hpp:145:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:147:   * boost::asio::socket_base::debug option;
/root/boost_1_87_0/boost/asio/socket_base.hpp:158:  typedef boost::asio::detail::socket_option::boolean<
/root/boost_1_87_0/boost/asio/socket_base.hpp:169:   * boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:171:   * boost::asio::socket_base::do_not_route option(true);
/root/boost_1_87_0/boost/asio/socket_base.hpp:178:   * boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:180:   * boost::asio::socket_base::do_not_route option;
/root/boost_1_87_0/boost/asio/socket_base.hpp:191:  typedef boost::asio::detail::socket_option::boolean<
/root/boost_1_87_0/boost/asio/socket_base.hpp:203:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:205:   * boost::asio::socket_base::keep_alive option(true);
/root/boost_1_87_0/boost/asio/socket_base.hpp:212:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:214:   * boost::asio::socket_base::keep_alive option;
/root/boost_1_87_0/boost/asio/socket_base.hpp:225:  typedef boost::asio::detail::socket_option::boolean<
/root/boost_1_87_0/boost/asio/socket_base.hpp:236:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:238:   * boost::asio::socket_base::send_buffer_size option(8192);
/root/boost_1_87_0/boost/asio/socket_base.hpp:245:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:247:   * boost::asio::socket_base::send_buffer_size option;
/root/boost_1_87_0/boost/asio/socket_base.hpp:258:  typedef boost::asio::detail::socket_option::integer<
/root/boost_1_87_0/boost/asio/socket_base.hpp:270:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:272:   * boost::asio::socket_base::send_low_watermark option(1024);
/root/boost_1_87_0/boost/asio/socket_base.hpp:279:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:281:   * boost::asio::socket_base::send_low_watermark option;
/root/boost_1_87_0/boost/asio/socket_base.hpp:292:  typedef boost::asio::detail::socket_option::integer<
/root/boost_1_87_0/boost/asio/socket_base.hpp:304:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:306:   * boost::asio::socket_base::receive_buffer_size option(8192);
/root/boost_1_87_0/boost/asio/socket_base.hpp:313:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:315:   * boost::asio::socket_base::receive_buffer_size option;
/root/boost_1_87_0/boost/asio/socket_base.hpp:326:  typedef boost::asio::detail::socket_option::integer<
/root/boost_1_87_0/boost/asio/socket_base.hpp:338:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:340:   * boost::asio::socket_base::receive_low_watermark option(1024);
/root/boost_1_87_0/boost/asio/socket_base.hpp:347:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:349:   * boost::asio::socket_base::receive_low_watermark option;
/root/boost_1_87_0/boost/asio/socket_base.hpp:360:  typedef boost::asio::detail::socket_option::integer<
/root/boost_1_87_0/boost/asio/socket_base.hpp:373:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:375:   * boost::asio::socket_base::reuse_address option(true);
/root/boost_1_87_0/boost/asio/socket_base.hpp:382:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:384:   * boost::asio::socket_base::reuse_address option;
/root/boost_1_87_0/boost/asio/socket_base.hpp:395:  typedef boost::asio::detail::socket_option::boolean<
/root/boost_1_87_0/boost/asio/socket_base.hpp:408:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:410:   * boost::asio::socket_base::linger option(true, 30);
/root/boost_1_87_0/boost/asio/socket_base.hpp:417:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:419:   * boost::asio::socket_base::linger option;
/root/boost_1_87_0/boost/asio/socket_base.hpp:431:  typedef boost::asio::detail::socket_option::linger<
/root/boost_1_87_0/boost/asio/socket_base.hpp:443:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:445:   * boost::asio::socket_base::out_of_band_inline option(true);
/root/boost_1_87_0/boost/asio/socket_base.hpp:452:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:454:   * boost::asio::socket_base::out_of_band_inline option;
/root/boost_1_87_0/boost/asio/socket_base.hpp:465:  typedef boost::asio::detail::socket_option::boolean<
/root/boost_1_87_0/boost/asio/socket_base.hpp:473:   * operation is permitted to fail with boost::asio::error::connection_aborted.
/root/boost_1_87_0/boost/asio/socket_base.hpp:479:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:481:   * boost::asio::socket_base::enable_connection_aborted option(true);/root/boost_1_87_0/boost/asio/socket_base.hpp:488:   * boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:490:   * boost::asio::socket_base::enable_connection_aborted option;
/root/boost_1_87_0/boost/asio/socket_base.hpp:501:  typedef boost::asio::detail::socket_option::boolean<
/root/boost_1_87_0/boost/asio/socket_base.hpp:502:    boost::asio::detail::custom_socket_option_level,
/root/boost_1_87_0/boost/asio/socket_base.hpp:503:    boost::asio::detail::enable_connection_aborted_option>
/root/boost_1_87_0/boost/asio/socket_base.hpp:514:   * boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/boost/asio/socket_base.hpp:516:   * boost::asio::socket_base::bytes_readable command(true);
/root/boost_1_87_0/boost/asio/socket_base.hpp:527:  typedef boost::asio::detail::io_control::bytes_readable bytes_readable;
/root/boost_1_87_0/boost/asio/spawn.hpp:127:  boost::asio::cancellation_slot parent_cancellation_slot_;
/root/boost_1_87_0/boost/asio/spawn.hpp:128:  boost::asio::cancellation_state cancellation_state_;
/root/boost_1_87_0/boost/asio/spawn.hpp:228:   * boost::asio::cancellation_state object <tt>S</tt>, constructed as
/root/boost_1_87_0/boost/asio/spawn.hpp:240:   * boost::asio::cancellation_state object <tt>S</tt>, constructed as <tt>S(P,
/root/boost_1_87_0/boost/asio/spawn.hpp:255:   * boost::asio::cancellation_state object <tt>S</tt>, constructed as <tt>S(P,
/root/boost_1_87_0/boost/asio/spawn.hpp:336: * @defgroup spawn boost::asio::spawn
/root/boost_1_87_0/boost/asio/spawn.hpp:344: * @code boost::asio::spawn(my_strand, do_echo, boost::asio::detached);
/root/boost_1_87_0/boost/asio/spawn.hpp:348: * void do_echo(boost::asio::yield_context yield)
/root/boost_1_87_0/boost/asio/spawn.hpp:357: *           boost::asio::buffer(data), yield);
/root/boost_1_87_0/boost/asio/spawn.hpp:359: *       boost::asio::async_write(my_socket,
/root/boost_1_87_0/boost/asio/spawn.hpp:360: *           boost::asio::buffer(data, length), yield);
/root/boost_1_87_0/boost/asio/ssl/context.hpp:750:  boost::asio::ssl::detail::openssl_init<> init_;
/root/boost_1_87_0/boost/asio/ssl/context_base.hpp:179:  // in the boost::asio::ssl namespace.
/root/boost_1_87_0/boost/asio/ssl/detail/buffered_handshake_op.hpp:42:      total_buffer_size_(boost::asio::buffer_size(buffers_))
/root/boost_1_87_0/boost/asio/ssl/detail/buffered_handshake_op.hpp:51:        boost::asio::buffer_sequence_begin(buffers_),
/root/boost_1_87_0/boost/asio/ssl/detail/buffered_handshake_op.hpp:52:        boost::asio::buffer_sequence_end(buffers_));
/root/boost_1_87_0/boost/asio/ssl/detail/engine.hpp:98:  BOOST_ASIO_DECL want write(const boost::asio::const_buffer& data,
/root/boost_1_87_0/boost/asio/ssl/detail/engine.hpp:102:  BOOST_ASIO_DECL want read(const boost::asio::mutable_buffer& data,
/root/boost_1_87_0/boost/asio/ssl/detail/engine.hpp:106:  BOOST_ASIO_DECL boost::asio::mutable_buffer get_output(
/root/boost_1_87_0/boost/asio/ssl/detail/engine.hpp:107:      const boost::asio::mutable_buffer& data);
/root/boost_1_87_0/boost/asio/ssl/detail/engine.hpp:110:  BOOST_ASIO_DECL boost::asio::const_buffer put_input(
/root/boost_1_87_0/boost/asio/ssl/detail/engine.hpp:111:      const boost::asio::const_buffer& data);
/root/boost_1_87_0/boost/asio/ssl/detail/engine.hpp:131:  BOOST_ASIO_DECL static boost::asio::detail::static_mutex& accept_mutex();
/root/boost_1_87_0/boost/asio/ssl/detail/impl/engine.ipp:40:        boost::asio::error::get_ssl_category());
/root/boost_1_87_0/boost/asio/ssl/detail/impl/engine.ipp:41:    boost::asio::detail::throw_error(ec, "engine");
/root/boost_1_87_0/boost/asio/ssl/detail/impl/engine.ipp:182:  return perform((type == boost::asio::ssl::stream_base::client)
/root/boost_1_87_0/boost/asio/ssl/detail/impl/engine.ipp:191:engine::want engine::write(const boost::asio::const_buffer& data,
/root/boost_1_87_0/boost/asio/ssl/detail/impl/engine.ipp:205:engine::want engine::read(const boost::asio::mutable_buffer& data,
/root/boost_1_87_0/boost/asio/ssl/detail/impl/engine.ipp:218:boost::asio::mutable_buffer engine::get_output(
/root/boost_1_87_0/boost/asio/ssl/detail/impl/engine.ipp:219:    const boost::asio::mutable_buffer& data)
/root/boost_1_87_0/boost/asio/ssl/detail/impl/engine.ipp:224:  return boost::asio::buffer(data,
/root/boost_1_87_0/boost/asio/ssl/detail/impl/engine.ipp:228:boost::asio::const_buffer engine::put_input(
/root/boost_1_87_0/boost/asio/ssl/detail/impl/engine.ipp:229:    const boost::asio::const_buffer& data)
/root/boost_1_87_0/boost/asio/ssl/detail/impl/engine.ipp:234:  return boost::asio::buffer(data +
/root/boost_1_87_0/boost/asio/ssl/detail/impl/engine.ipp:242:  if (ec != boost::asio::error::eof)
/root/boost_1_87_0/boost/asio/ssl/detail/impl/engine.ipp:248:    ec = boost::asio::ssl::error::stream_truncated;
/root/boost_1_87_0/boost/asio/ssl/detail/impl/engine.ipp:262:    ec = boost::asio::ssl::error::stream_truncated;
/root/boost_1_87_0/boost/asio/ssl/detail/impl/engine.ipp:269:boost::asio::detail::static_mutex& engine::accept_mutex()
/root/boost_1_87_0/boost/asio/ssl/detail/impl/engine.ipp:271:  static boost::asio::detail::static_mutex mutex = BOOST_ASIO_STATIC_MUTEX_INIT;
/root/boost_1_87_0/boost/asio/ssl/detail/impl/engine.ipp:290:        boost::asio::error::get_ssl_category());
/root/boost_1_87_0/boost/asio/ssl/detail/impl/engine.ipp:299:      ec = boost::asio::ssl::error::unspecified_system_error;
/root/boost_1_87_0/boost/asio/ssl/detail/impl/engine.ipp:304:          boost::asio::error::get_ssl_category());
/root/boost_1_87_0/boost/asio/ssl/detail/impl/engine.ipp:330:    ec = boost::asio::error::eof;
/root/boost_1_87_0/boost/asio/ssl/detail/impl/engine.ipp:340:    ec = boost::asio::ssl::error::unexpected_result;
/root/boost_1_87_0/boost/asio/ssl/detail/impl/engine.ipp:348:  boost::asio::detail::static_mutex::scoped_lock lock(accept_mutex());
/root/boost_1_87_0/boost/asio/ssl/detail/impl/openssl_init.ipp:46:      mutexes_[i].reset(new boost::asio::detail::mutex);
/root/boost_1_87_0/boost/asio/ssl/detail/impl/openssl_init.ipp:137:  std::vector<boost::asio::detail::shared_ptr<
/root/boost_1_87_0/boost/asio/ssl/detail/impl/openssl_init.ipp:138:        boost::asio::detail::mutex>> mutexes_;
/root/boost_1_87_0/boost/asio/ssl/detail/impl/openssl_init.ipp:148:boost::asio::detail::shared_ptr<openssl_init_base::do_init>
/root/boost_1_87_0/boost/asio/ssl/detail/impl/openssl_init.ipp:151:  static boost::asio::detail::shared_ptr<do_init> init(new do_init);
/root/boost_1_87_0/boost/asio/ssl/detail/io.hpp:47:      core.input_ = boost::asio::buffer(core.input_buffer_,
/root/boost_1_87_0/boost/asio/ssl/detail/io.hpp:63:    boost::asio::write(next_layer,
/root/boost_1_87_0/boost/asio/ssl/detail/io.hpp:75:    boost::asio::write(next_layer,
/root/boost_1_87_0/boost/asio/ssl/detail/io.hpp:99:  : public boost::asio::detail::base_from_cancellation_state<Handler>/root/boost_1_87_0/boost/asio/ssl/detail/io.hpp:104:    : boost::asio::detail::base_from_cancellation_state<Handler>(handler),
/root/boost_1_87_0/boost/asio/ssl/detail/io.hpp:116:    : boost::asio::detail::base_from_cancellation_state<Handler>(other),
/root/boost_1_87_0/boost/asio/ssl/detail/io.hpp:129:    : boost::asio::detail::base_from_cancellation_state<Handler>(
/root/boost_1_87_0/boost/asio/ssl/detail/io.hpp:131:          boost::asio::detail::base_from_cancellation_state<Handler>&&>(other)),
/root/boost_1_87_0/boost/asio/ssl/detail/io.hpp:177:                boost::asio::buffer(core_.input_buffer_),
/root/boost_1_87_0/boost/asio/ssl/detail/io.hpp:209:            boost::asio::async_write(next_layer_,
/root/boost_1_87_0/boost/asio/ssl/detail/io.hpp:239:                boost::asio::buffer(core_.input_buffer_, 0),
/root/boost_1_87_0/boost/asio/ssl/detail/io.hpp:264:          core_.input_ = boost::asio::buffer(
/root/boost_1_87_0/boost/asio/ssl/detail/io.hpp:274:            ec_ = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/ssl/detail/io.hpp:289:            ec_ = boost::asio::error::operation_aborted;
/root/boost_1_87_0/boost/asio/ssl/detail/openssl_init.hpp:43:  BOOST_ASIO_DECL static boost::asio::detail::shared_ptr<do_init> instance();
/root/boost_1_87_0/boost/asio/ssl/detail/openssl_init.hpp:86:  boost::asio::detail::shared_ptr<do_init> ref_;
/root/boost_1_87_0/boost/asio/ssl/detail/read_op.hpp:48:    boost::asio::mutable_buffer buffer =
/root/boost_1_87_0/boost/asio/ssl/detail/read_op.hpp:49:      boost::asio::detail::buffer_sequence_adapter<boost::asio::mutable_buffer,
/root/boost_1_87_0/boost/asio/ssl/detail/shutdown_op.hpp:50:    if (ec == boost::asio::error::eof)
/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:43:      output_buffer_(boost::asio::buffer(output_buffer_space_)),
/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:45:      input_buffer_(boost::asio::buffer(input_buffer_space_))
/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:57:      output_buffer_(boost::asio::buffer(output_buffer_space_)),
/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:59:      input_buffer_(boost::asio::buffer(input_buffer_space_))
/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:68:         static_cast<boost::asio::steady_timer&&>(
/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:71:         static_cast<boost::asio::steady_timer&&>(
/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:83:    other.output_buffer_ = boost::asio::mutable_buffer(0, 0);
/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:84:    other.input_buffer_ = boost::asio::mutable_buffer(0, 0);/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:85:    other.input_ = boost::asio::const_buffer(0, 0);
/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:98:        static_cast<boost::asio::steady_timer&&>(
/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:101:        static_cast<boost::asio::steady_timer&&>(
/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:112:      other.output_buffer_ = boost::asio::mutable_buffer(0, 0);
/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:113:      other.input_buffer_ = boost::asio::mutable_buffer(0, 0);
/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:114:      other.input_ = boost::asio::const_buffer(0, 0);
/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:123:  boost::asio::steady_timer pending_read_;
/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:126:  boost::asio::steady_timer pending_write_;
/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:129:  static boost::asio::steady_timer::time_point neg_infin()
/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:131:    return (boost::asio::steady_timer::time_point::min)();
/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:135:  static boost::asio::steady_timer::time_point pos_infin()
/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:137:    return (boost::asio::steady_timer::time_point::max)();
/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:141:  static boost::asio::steady_timer::time_point expiry(
/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:142:      const boost::asio::steady_timer& timer)
/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:151:  boost::asio::mutable_buffer output_buffer_;
/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:157:  boost::asio::mutable_buffer input_buffer_;
/root/boost_1_87_0/boost/asio/ssl/detail/stream_core.hpp:160:  boost::asio::const_buffer input_;
/root/boost_1_87_0/boost/asio/ssl/detail/write_op.hpp:49:      boost::asio::detail::buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/ssl/detail/write_op.hpp:52:    boost::asio::const_buffer buffer =
/root/boost_1_87_0/boost/asio/ssl/detail/write_op.hpp:53:      boost::asio::detail::buffer_sequence_adapter<boost::asio::const_buffer,
/root/boost_1_87_0/boost/asio/ssl/detail/write_op.hpp:54:        ConstBufferSequence>::linearise(buffers_, boost::asio::buffer(storage));
/root/boost_1_87_0/boost/asio/ssl/error.hpp:38:  = boost::asio::error::get_ssl_category();
/root/boost_1_87_0/boost/asio/ssl/error.hpp:75:  = boost::asio::ssl::error::get_stream_category();
/root/boost_1_87_0/boost/asio/ssl/error.hpp:85:template<> struct is_error_code_enum<boost::asio::error::ssl_errors>
/root/boost_1_87_0/boost/asio/ssl/error.hpp:90:template<> struct is_error_code_enum<boost::asio::ssl::error::stream_errors>
/root/boost_1_87_0/boost/asio/ssl/host_name_verification.hpp:37: * using boost::asio::ip::tcp;
/root/boost_1_87_0/boost/asio/ssl/host_name_verification.hpp:38: * namespace ssl = boost::asio::ssl;
/root/boost_1_87_0/boost/asio/ssl/host_name_verification.hpp:46: * boost::asio::io_context io_context;
/root/boost_1_87_0/boost/asio/ssl/host_name_verification.hpp:50: * boost::asio::connect(sock.lowest_layer(), resolver.resolve(query));
/root/boost_1_87_0/boost/asio/ssl/impl/context.hpp:34:  boost::asio::detail::throw_error(ec, "set_verify_callback");
/root/boost_1_87_0/boost/asio/ssl/impl/context.hpp:51:  boost::asio::detail::throw_error(ec, "set_password_callback");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:77:    boost::asio::detail::throw_error(
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:78:        boost::asio::error::invalid_argument, "context");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:122:    boost::asio::detail::throw_error(
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:123:        boost::asio::error::invalid_argument, "context");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:177:    boost::asio::detail::throw_error(
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:178:        boost::asio::error::invalid_argument, "context");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:222:    boost::asio::detail::throw_error(
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:223:        boost::asio::error::invalid_argument, "context");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:267:    boost::asio::detail::throw_error(
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:268:        boost::asio::error::invalid_argument, "context");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:306:    boost::asio::detail::throw_error(
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:307:        boost::asio::error::invalid_argument, "context");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:367:    boost::asio::detail::throw_error(ec, "context");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:378:    boost::asio::detail::throw_error(
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:379:        boost::asio::error::invalid_argument, "context");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:447:  boost::asio::detail::throw_error(ec, "clear_options");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:471:  ec = boost::asio::error::operation_not_supported;
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:481:  boost::asio::detail::throw_error(ec, "set_options");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:492:      boost::asio::ssl::detail::openssl_init<>::get_null_compression_methods();
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:508:  boost::asio::detail::throw_error(ec, "set_verify_mode");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:524:  boost::asio::detail::throw_error(ec, "set_verify_depth");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:540:  boost::asio::detail::throw_error(ec, "load_verify_file");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:562:  boost::asio::detail::throw_error(ec, "add_certificate_authority");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:606:  boost::asio::detail::throw_error(ec, "set_default_verify_paths");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:628:  boost::asio::detail::throw_error(ec, "add_verify_path");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:651:  boost::asio::detail::throw_error(ec, "use_certificate");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:688:    ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:701:  boost::asio::detail::throw_error(ec, "use_certificate_file");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:719:      ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:740:  boost::asio::detail::throw_error(ec, "use_certificate_chain");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:820:  boost::asio::detail::throw_error(ec, "use_certificate_chain_file");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:843:  boost::asio::detail::throw_error(ec, "use_private_key");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:879:        ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:903:  boost::asio::detail::throw_error(ec, "use_private_key_file");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:911:  boost::asio::detail::throw_error(ec, "use_rsa_private_key");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:948:        ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:982:        ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:1017:      ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:1039:  boost::asio::detail::throw_error(ec, "use_rsa_private_key_file");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:1068:        ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:1104:      ec = boost::asio::error::invalid_argument;
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:1127:  boost::asio::detail::throw_error(ec, "use_tmp_dh");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:1149:  boost::asio::detail::throw_error(ec, "use_tmp_dh_file");
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:1310:        boost::asio::error::get_system_category());
/root/boost_1_87_0/boost/asio/ssl/impl/context.ipp:1315:      boost::asio::error::get_ssl_category());
/root/boost_1_87_0/boost/asio/ssl/impl/error.ipp:82:  return boost::asio::error::get_ssl_category();
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:57: * boost::asio::io_context my_context;
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:58: * boost::asio::ssl::context ctx(boost::asio::ssl::context::sslv23);
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:59: * boost::asio::ssl::stream<boost::asio::ip::tcp::socket> sock(my_context, ctx);
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:191:   * boost::asio::ssl::stream<boost::asio::ip::tcp::socket> sock(io_ctx, ctx);
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:277:    boost::asio::detail::throw_error(ec, "set_verify_mode");
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:315:    boost::asio::detail::throw_error(ec, "set_verify_depth");
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:360:    boost::asio::detail::throw_error(ec, "set_verify_callback");
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:404:    boost::asio::detail::throw_error(ec, "handshake");
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:441:    boost::asio::detail::throw_error(ec, "handshake");
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:485:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:492:   * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:542:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:549:   * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:589:    boost::asio::detail::throw_error(ec, "shutdown");
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:622:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:629:   * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:675:    boost::asio::detail::throw_error(ec, "write_some");
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:726:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:738:   * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:783:    boost::asio::detail::throw_error(ec, "read_some");
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:834:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:846:   * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:894:      boost::asio::detail::non_const_lvalue<HandshakeHandler> handler2(handler);
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:928:      boost::asio::detail::non_const_lvalue<
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:961:      boost::asio::detail::non_const_lvalue<ShutdownHandler> handler2(handler);
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:993:      boost::asio::detail::non_const_lvalue<WriteHandler> handler2(handler);
/root/boost_1_87_0/boost/asio/ssl/stream.hpp:1025:      boost::asio::detail::non_const_lvalue<ReadHandler> handler2(handler);
/root/boost_1_87_0/boost/asio/ssl/stream_base.hpp:26:/// The stream_base class is used as a base for the boost::asio::ssl::stream
/root/boost_1_87_0/boost/asio/strand.hpp:160:   * boost::asio::query customisation point.
/root/boost_1_87_0/boost/asio/strand.hpp:163:   * @code boost::asio::strand<my_executor_type> ex = ...;
/root/boost_1_87_0/boost/asio/strand.hpp:164:   * if (boost::asio::query(ex, boost::asio::execution::blocking)
/root/boost_1_87_0/boost/asio/strand.hpp:165:   *       == boost::asio::execution::blocking.never)
/root/boost_1_87_0/boost/asio/strand.hpp:186:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/strand.hpp:189:   * @code boost::asio::strand<my_executor_type> ex1 = ...;
/root/boost_1_87_0/boost/asio/strand.hpp:190:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/strand.hpp:191:   *     boost::asio::execution::blocking.never); @endcode
/root/boost_1_87_0/boost/asio/strand.hpp:202:        boost::asio::require(executor_, p), impl_);
/root/boost_1_87_0/boost/asio/strand.hpp:208:   * boost::asio::prefer customisation point.
/root/boost_1_87_0/boost/asio/strand.hpp:211:   * @code boost::asio::strand<my_executor_type> ex1 = ...;
/root/boost_1_87_0/boost/asio/strand.hpp:212:   * auto ex2 = boost::asio::prefer(ex1,
/root/boost_1_87_0/boost/asio/strand.hpp:213:   *     boost::asio::execution::blocking.never); @endcode
/root/boost_1_87_0/boost/asio/strand.hpp:224:        boost::asio::prefer(executor_, p), impl_);
/root/boost_1_87_0/boost/asio/strand.hpp:381:        boost::asio::query(ex, execution::context)).create_implementation();
/root/boost_1_87_0/boost/asio/strand.hpp:404:    return boost::asio::query(executor_, property);
/root/boost_1_87_0/boost/asio/strand.hpp:410:    execution::blocking_t result = boost::asio::query(executor_, property);/root/boost_1_87_0/boost/asio/strand.hpp:419:/** @defgroup make_strand boost::asio::make_strand
/root/boost_1_87_0/boost/asio/strand.hpp:421: * @brief The boost::asio::make_strand function creates a @ref strand object for
/root/boost_1_87_0/boost/asio/system_executor.hpp:57:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/system_executor.hpp:60:   * @code boost::asio::system_executor ex1;
/root/boost_1_87_0/boost/asio/system_executor.hpp:61:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/system_executor.hpp:62:   *     boost::asio::execution::blocking.possibly); @endcode
/root/boost_1_87_0/boost/asio/system_executor.hpp:75:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/system_executor.hpp:78:   * @code boost::asio::system_executor ex1;
/root/boost_1_87_0/boost/asio/system_executor.hpp:79:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/system_executor.hpp:80:   *     boost::asio::execution::blocking.always); @endcode
/root/boost_1_87_0/boost/asio/system_executor.hpp:93:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/system_executor.hpp:96:   * @code boost::asio::system_executor ex1;
/root/boost_1_87_0/boost/asio/system_executor.hpp:97:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/system_executor.hpp:98:   *     boost::asio::execution::blocking.never); @endcode
/root/boost_1_87_0/boost/asio/system_executor.hpp:111:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/system_executor.hpp:114:   * @code boost::asio::system_executor ex1;
/root/boost_1_87_0/boost/asio/system_executor.hpp:115:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/system_executor.hpp:116:   *     boost::asio::execution::relationship.continuation); @endcode
/root/boost_1_87_0/boost/asio/system_executor.hpp:129:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/system_executor.hpp:132:   * @code boost::asio::system_executor ex1;
/root/boost_1_87_0/boost/asio/system_executor.hpp:133:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/system_executor.hpp:134:   *     boost::asio::execution::relationship.fork); @endcode
/root/boost_1_87_0/boost/asio/system_executor.hpp:147:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/system_executor.hpp:150:   * @code boost::asio::system_executor ex1;
/root/boost_1_87_0/boost/asio/system_executor.hpp:151:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/system_executor.hpp:152:   *     boost::asio::execution::allocator(my_allocator)); @endcode
/root/boost_1_87_0/boost/asio/system_executor.hpp:165:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/system_executor.hpp:168:   * @code boost::asio::system_executor ex1;
/root/boost_1_87_0/boost/asio/system_executor.hpp:169:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/system_executor.hpp:170:   *     boost::asio::execution::allocator); @endcode
/root/boost_1_87_0/boost/asio/system_executor.hpp:182:  friend struct boost::asio::execution::detail::blocking_t<0>;
/root/boost_1_87_0/boost/asio/system_executor.hpp:183:  friend struct boost::asio::execution::detail::mapping_t<0>;
/root/boost_1_87_0/boost/asio/system_executor.hpp:184:  friend struct boost::asio::execution::detail::outstanding_work_t<0>;
/root/boost_1_87_0/boost/asio/system_executor.hpp:185:  friend struct boost::asio::execution::detail::relationship_t<0>;/root/boost_1_87_0/boost/asio/system_executor.hpp:191:   * boost::asio::query customisation point.
/root/boost_1_87_0/boost/asio/system_executor.hpp:194:   * @code boost::asio::system_executor ex;
/root/boost_1_87_0/boost/asio/system_executor.hpp:195:   * if (boost::asio::query(ex, boost::asio::execution::mapping)
/root/boost_1_87_0/boost/asio/system_executor.hpp:196:   *       == boost::asio::execution::mapping.thread)
/root/boost_1_87_0/boost/asio/system_executor.hpp:208:   * boost::asio::query customisation point.
/root/boost_1_87_0/boost/asio/system_executor.hpp:211:   * @code boost::asio::system_executor ex;
/root/boost_1_87_0/boost/asio/system_executor.hpp:212:   * boost::asio::system_context& pool = boost::asio::query(
/root/boost_1_87_0/boost/asio/system_executor.hpp:213:   *     ex, boost::asio::execution::context); @endcode
/root/boost_1_87_0/boost/asio/system_executor.hpp:220:   * boost::asio::query customisation point.
/root/boost_1_87_0/boost/asio/system_executor.hpp:223:   * @code boost::asio::system_executor ex;
/root/boost_1_87_0/boost/asio/system_executor.hpp:224:   * if (boost::asio::query(ex, boost::asio::execution::blocking)
/root/boost_1_87_0/boost/asio/system_executor.hpp:225:   *       == boost::asio::execution::blocking.always)
/root/boost_1_87_0/boost/asio/system_executor.hpp:237:   * boost::asio::query customisation point.
/root/boost_1_87_0/boost/asio/system_executor.hpp:240:   * @code boost::asio::system_executor ex;
/root/boost_1_87_0/boost/asio/system_executor.hpp:241:   * if (boost::asio::query(ex, boost::asio::execution::relationship)
/root/boost_1_87_0/boost/asio/system_executor.hpp:242:   *       == boost::asio::execution::relationship.continuation)
/root/boost_1_87_0/boost/asio/system_executor.hpp:254:   * boost::asio::query customisation point.
/root/boost_1_87_0/boost/asio/system_executor.hpp:257:   * @code boost::asio::system_executor ex;
/root/boost_1_87_0/boost/asio/system_executor.hpp:258:   * auto alloc = boost::asio::query(ex,
/root/boost_1_87_0/boost/asio/system_executor.hpp:259:   *     boost::asio::execution::allocator); @endcode
/root/boost_1_87_0/boost/asio/system_executor.hpp:271:   * boost::asio::query customisation point.
/root/boost_1_87_0/boost/asio/system_executor.hpp:274:   * @code boost::asio::system_executor ex;
/root/boost_1_87_0/boost/asio/system_executor.hpp:275:   * auto alloc = boost::asio::query(ex,
/root/boost_1_87_0/boost/asio/system_executor.hpp:276:   *     boost::asio::execution::allocator); @endcode
/root/boost_1_87_0/boost/asio/system_executor.hpp:288:   * boost::asio::query customisation point.
/root/boost_1_87_0/boost/asio/system_executor.hpp:291:   * @code boost::asio::system_executor ex;
/root/boost_1_87_0/boost/asio/system_executor.hpp:292:   * std::size_t occupancy = boost::asio::query(
/root/boost_1_87_0/boost/asio/system_executor.hpp:293:   *     ex, boost::asio::execution::occupancy); @endcode
/root/boost_1_87_0/boost/asio/system_executor.hpp:443:    boost::asio::basic_system_executor<Blocking, Relationship, Allocator>
/root/boost_1_87_0/boost/asio/system_executor.hpp:457:    boost::asio::basic_system_executor<Blocking, Relationship, Allocator>,
/root/boost_1_87_0/boost/asio/system_executor.hpp:472:    boost::asio::basic_system_executor<Blocking, Relationship, Allocator>,
/root/boost_1_87_0/boost/asio/system_executor.hpp:473:    boost::asio::execution::blocking_t::possibly_t
/root/boost_1_87_0/boost/asio/system_executor.hpp:478:  typedef boost::asio::basic_system_executor<
/root/boost_1_87_0/boost/asio/system_executor.hpp:479:      boost::asio::execution::blocking_t::possibly_t,
/root/boost_1_87_0/boost/asio/system_executor.hpp:485:    boost::asio::basic_system_executor<Blocking, Relationship, Allocator>,
/root/boost_1_87_0/boost/asio/system_executor.hpp:486:    boost::asio::execution::blocking_t::always_t
/root/boost_1_87_0/boost/asio/system_executor.hpp:491:  typedef boost::asio::basic_system_executor<
/root/boost_1_87_0/boost/asio/system_executor.hpp:492:      boost::asio::execution::blocking_t::always_t,
/root/boost_1_87_0/boost/asio/system_executor.hpp:498:    boost::asio::basic_system_executor<Blocking, Relationship, Allocator>,
/root/boost_1_87_0/boost/asio/system_executor.hpp:499:    boost::asio::execution::blocking_t::never_t
/root/boost_1_87_0/boost/asio/system_executor.hpp:504:  typedef boost::asio::basic_system_executor<
/root/boost_1_87_0/boost/asio/system_executor.hpp:505:      boost::asio::execution::blocking_t::never_t,
/root/boost_1_87_0/boost/asio/system_executor.hpp:511:    boost::asio::basic_system_executor<Blocking, Relationship, Allocator>,
/root/boost_1_87_0/boost/asio/system_executor.hpp:512:    boost::asio::execution::relationship_t::fork_t
/root/boost_1_87_0/boost/asio/system_executor.hpp:517:  typedef boost::asio::basic_system_executor<Blocking,
/root/boost_1_87_0/boost/asio/system_executor.hpp:518:      boost::asio::execution::relationship_t::fork_t,
/root/boost_1_87_0/boost/asio/system_executor.hpp:524:    boost::asio::basic_system_executor<Blocking, Relationship, Allocator>,
/root/boost_1_87_0/boost/asio/system_executor.hpp:525:    boost::asio::execution::relationship_t::continuation_t
/root/boost_1_87_0/boost/asio/system_executor.hpp:530:  typedef boost::asio::basic_system_executor<Blocking,
/root/boost_1_87_0/boost/asio/system_executor.hpp:531:      boost::asio::execution::relationship_t::continuation_t,
/root/boost_1_87_0/boost/asio/system_executor.hpp:537:    boost::asio::basic_system_executor<Blocking, Relationship, Allocator>,
/root/boost_1_87_0/boost/asio/system_executor.hpp:538:    boost::asio::execution::allocator_t<void>
/root/boost_1_87_0/boost/asio/system_executor.hpp:543:  typedef boost::asio::basic_system_executor<Blocking,
/root/boost_1_87_0/boost/asio/system_executor.hpp:550:    boost::asio::basic_system_executor<Blocking, Relationship, Allocator>,
/root/boost_1_87_0/boost/asio/system_executor.hpp:551:    boost::asio::execution::allocator_t<OtherAllocator>
/root/boost_1_87_0/boost/asio/system_executor.hpp:556:  typedef boost::asio::basic_system_executor<Blocking,
/root/boost_1_87_0/boost/asio/system_executor.hpp:567:    boost::asio::basic_system_executor<Blocking, Relationship, Allocator>,
/root/boost_1_87_0/boost/asio/system_executor.hpp:569:    typename boost::asio::enable_if<
/root/boost_1_87_0/boost/asio/system_executor.hpp:570:      boost::asio::is_convertible<
/root/boost_1_87_0/boost/asio/system_executor.hpp:572:        boost::asio::execution::mapping_t
/root/boost_1_87_0/boost/asio/system_executor.hpp:579:  typedef boost::asio::execution::mapping_t::thread_t result_type;/root/boost_1_87_0/boost/asio/system_executor.hpp:594:    boost::asio::basic_system_executor<Blocking, Relationship, Allocator>,
/root/boost_1_87_0/boost/asio/system_executor.hpp:596:    typename boost::asio::enable_if<
/root/boost_1_87_0/boost/asio/system_executor.hpp:597:      boost::asio::is_convertible<
/root/boost_1_87_0/boost/asio/system_executor.hpp:599:        boost::asio::execution::blocking_t
/root/boost_1_87_0/boost/asio/system_executor.hpp:606:  typedef boost::asio::execution::blocking_t result_type;
/root/boost_1_87_0/boost/asio/system_executor.hpp:612:    boost::asio::basic_system_executor<Blocking, Relationship, Allocator>,
/root/boost_1_87_0/boost/asio/system_executor.hpp:614:    typename boost::asio::enable_if<
/root/boost_1_87_0/boost/asio/system_executor.hpp:615:      boost::asio::is_convertible<
/root/boost_1_87_0/boost/asio/system_executor.hpp:617:        boost::asio::execution::relationship_t
/root/boost_1_87_0/boost/asio/system_executor.hpp:624:  typedef boost::asio::execution::relationship_t result_type;
/root/boost_1_87_0/boost/asio/system_executor.hpp:629:    boost::asio::basic_system_executor<Blocking, Relationship, Allocator>,
/root/boost_1_87_0/boost/asio/system_executor.hpp:630:    boost::asio::execution::context_t
/root/boost_1_87_0/boost/asio/system_executor.hpp:635:  typedef boost::asio::system_context& result_type;
/root/boost_1_87_0/boost/asio/system_executor.hpp:640:    boost::asio::basic_system_executor<Blocking, Relationship, Allocator>,
/root/boost_1_87_0/boost/asio/system_executor.hpp:641:    boost::asio::execution::allocator_t<void>
/root/boost_1_87_0/boost/asio/system_executor.hpp:651:    boost::asio::basic_system_executor<Blocking, Relationship, Allocator>,
/root/boost_1_87_0/boost/asio/system_executor.hpp:652:    boost::asio::execution::allocator_t<Allocator>
/root/boost_1_87_0/boost/asio/this_coro.hpp:50: * @code boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/boost/asio/this_coro.hpp:52: *   boost::asio::cancellation_state cs
/root/boost_1_87_0/boost/asio/this_coro.hpp:53: *     = co_await boost::asio::this_coro::cancellation_state;
/root/boost_1_87_0/boost/asio/this_coro.hpp:57: *   if (cs.cancelled() != boost::asio::cancellation_type::none)
/root/boost_1_87_0/boost/asio/this_coro.hpp:70: * boost::asio::cancellation_state object <tt>S</tt>, constructed as
/root/boost_1_87_0/boost/asio/this_coro.hpp:74: * @code boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/boost/asio/this_coro.hpp:76: *   co_await boost::asio::this_coro::reset_cancellation_state();
/root/boost_1_87_0/boost/asio/this_coro.hpp:82: * of execution" that was created using boost::asio::co_spawn.
/root/boost_1_87_0/boost/asio/this_coro.hpp:92: * boost::asio::cancellation_state object <tt>S</tt>, constructed as <tt>S(P,
/root/boost_1_87_0/boost/asio/this_coro.hpp:97: * @code boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/boost/asio/this_coro.hpp:99: *   co_await boost::asio::this_coro::reset_cancellation_state(
/root/boost_1_87_0/boost/asio/this_coro.hpp:100: *       boost::asio::enable_partial_cancellation());
/root/boost_1_87_0/boost/asio/this_coro.hpp:106: * of execution" that was created using boost::asio::co_spawn.
/root/boost_1_87_0/boost/asio/this_coro.hpp:117: * boost::asio::cancellation_state object <tt>S</tt>, constructed as <tt>S(P,
/root/boost_1_87_0/boost/asio/this_coro.hpp:123: * @code boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/boost/asio/this_coro.hpp:125: *   co_await boost::asio::this_coro::reset_cancellation_state(
/root/boost_1_87_0/boost/asio/this_coro.hpp:126: *       boost::asio::enable_partial_cancellation(),
/root/boost_1_87_0/boost/asio/this_coro.hpp:127: *       boost::asio::disable_cancellation());
/root/boost_1_87_0/boost/asio/this_coro.hpp:133: * of execution" that was created using boost::asio::co_spawn.
/root/boost_1_87_0/boost/asio/this_coro.hpp:145: * @code boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/boost/asio/this_coro.hpp:147: *   if (co_await boost::asio::this_coro::throw_if_cancelled)
/root/boost_1_87_0/boost/asio/this_coro.hpp:160: * @code boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/boost/asio/this_coro.hpp:162: *   co_await boost::asio::this_coro::throw_if_cancelled(false);
/root/boost_1_87_0/boost/asio/thread_pool.hpp:58: * To submit functions to the thread pool, use the @ref boost::asio::dispatch,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:59: * @ref boost::asio::post or @ref boost::asio::defer free functions.
/root/boost_1_87_0/boost/asio/thread_pool.hpp:71: * boost::asio::thread_pool pool(4);
/root/boost_1_87_0/boost/asio/thread_pool.hpp:74: * boost::asio::post(pool, my_task);
/root/boost_1_87_0/boost/asio/thread_pool.hpp:77: * boost::asio::post(pool,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:236:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/thread_pool.hpp:240:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:241:   *     boost::asio::execution::blocking.possibly); @endcode
/root/boost_1_87_0/boost/asio/thread_pool.hpp:254:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/thread_pool.hpp:258:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:259:   *     boost::asio::execution::blocking.always); @endcode
/root/boost_1_87_0/boost/asio/thread_pool.hpp:273:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/thread_pool.hpp:277:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:278:   *     boost::asio::execution::blocking.never); @endcode
/root/boost_1_87_0/boost/asio/thread_pool.hpp:291:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/thread_pool.hpp:295:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:296:   *     boost::asio::execution::relationship.fork); @endcode
/root/boost_1_87_0/boost/asio/thread_pool.hpp:307:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/thread_pool.hpp:311:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:312:   *     boost::asio::execution::relationship.continuation); @endcode
/root/boost_1_87_0/boost/asio/thread_pool.hpp:324:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/thread_pool.hpp:328:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:329:   *     boost::asio::execution::outstanding_work.tracked); @endcode
/root/boost_1_87_0/boost/asio/thread_pool.hpp:342:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/thread_pool.hpp:346:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:347:   *     boost::asio::execution::outstanding_work.untracked); @endcode/root/boost_1_87_0/boost/asio/thread_pool.hpp:360:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/thread_pool.hpp:364:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:365:   *     boost::asio::execution::allocator(my_allocator)); @endcode
/root/boost_1_87_0/boost/asio/thread_pool.hpp:378:   * boost::asio::require customisation point.
/root/boost_1_87_0/boost/asio/thread_pool.hpp:382:   * auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:383:   *     boost::asio::execution::allocator); @endcode
/root/boost_1_87_0/boost/asio/thread_pool.hpp:395:  friend struct boost::asio::execution::detail::mapping_t<0>;
/root/boost_1_87_0/boost/asio/thread_pool.hpp:396:  friend struct boost::asio::execution::detail::outstanding_work_t<0>;/root/boost_1_87_0/boost/asio/thread_pool.hpp:402:   * boost::asio::query customisation point.
/root/boost_1_87_0/boost/asio/thread_pool.hpp:406:   * if (boost::asio::query(ex, boost::asio::execution::mapping)
/root/boost_1_87_0/boost/asio/thread_pool.hpp:407:   *       == boost::asio::execution::mapping.thread)
/root/boost_1_87_0/boost/asio/thread_pool.hpp:418:   * boost::asio::query customisation point.
/root/boost_1_87_0/boost/asio/thread_pool.hpp:422:   * boost::asio::thread_pool& pool = boost::asio::query(
/root/boost_1_87_0/boost/asio/thread_pool.hpp:423:   *     ex, boost::asio::execution::context); @endcode
/root/boost_1_87_0/boost/asio/thread_pool.hpp:433:   * boost::asio::query customisation point.
/root/boost_1_87_0/boost/asio/thread_pool.hpp:437:   * if (boost::asio::query(ex, boost::asio::execution::blocking)
/root/boost_1_87_0/boost/asio/thread_pool.hpp:438:   *       == boost::asio::execution::blocking.always)
/root/boost_1_87_0/boost/asio/thread_pool.hpp:453:   * boost::asio::query customisation point.
/root/boost_1_87_0/boost/asio/thread_pool.hpp:457:   * if (boost::asio::query(ex, boost::asio::execution::relationship)
/root/boost_1_87_0/boost/asio/thread_pool.hpp:458:   *       == boost::asio::execution::relationship.continuation)
/root/boost_1_87_0/boost/asio/thread_pool.hpp:472:   * boost::asio::query customisation point.
/root/boost_1_87_0/boost/asio/thread_pool.hpp:476:   * if (boost::asio::query(ex, boost::asio::execution::outstanding_work)
/root/boost_1_87_0/boost/asio/thread_pool.hpp:477:   *       == boost::asio::execution::outstanding_work.tracked)
/root/boost_1_87_0/boost/asio/thread_pool.hpp:491:   * boost::asio::query customisation point.
/root/boost_1_87_0/boost/asio/thread_pool.hpp:495:   * auto alloc = boost::asio::query(ex,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:496:   *     boost::asio::execution::allocator); @endcode
/root/boost_1_87_0/boost/asio/thread_pool.hpp:508:   * boost::asio::query customisation point.
/root/boost_1_87_0/boost/asio/thread_pool.hpp:512:   * auto alloc = boost::asio::query(ex,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:513:   *     boost::asio::execution::allocator); @endcode
/root/boost_1_87_0/boost/asio/thread_pool.hpp:523:   * boost::asio::query customisation point.
/root/boost_1_87_0/boost/asio/thread_pool.hpp:527:   * std::size_t occupancy = boost::asio::query(
/root/boost_1_87_0/boost/asio/thread_pool.hpp:528:   *     ex, boost::asio::execution::occupancy); @endcode
/root/boost_1_87_0/boost/asio/thread_pool.hpp:702:    boost::asio::thread_pool::basic_executor_type<Allocator, Bits>
/root/boost_1_87_0/boost/asio/thread_pool.hpp:715:    boost::asio::thread_pool::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:730:    boost::asio::thread_pool::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:731:    boost::asio::execution::blocking_t::possibly_t
/root/boost_1_87_0/boost/asio/thread_pool.hpp:732:  > : boost::asio::detail::thread_pool_bits
/root/boost_1_87_0/boost/asio/thread_pool.hpp:736:  typedef boost::asio::thread_pool::basic_executor_type<
/root/boost_1_87_0/boost/asio/thread_pool.hpp:742:    boost::asio::thread_pool::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:743:    boost::asio::execution::blocking_t::always_t
/root/boost_1_87_0/boost/asio/thread_pool.hpp:744:  > : boost::asio::detail::thread_pool_bits
/root/boost_1_87_0/boost/asio/thread_pool.hpp:748:  typedef boost::asio::thread_pool::basic_executor_type<Allocator,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:754:    boost::asio::thread_pool::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:755:    boost::asio::execution::blocking_t::never_t
/root/boost_1_87_0/boost/asio/thread_pool.hpp:756:  > : boost::asio::detail::thread_pool_bits
/root/boost_1_87_0/boost/asio/thread_pool.hpp:760:  typedef boost::asio::thread_pool::basic_executor_type<
/root/boost_1_87_0/boost/asio/thread_pool.hpp:766:    boost::asio::thread_pool::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:767:    boost::asio::execution::relationship_t::fork_t
/root/boost_1_87_0/boost/asio/thread_pool.hpp:772:  typedef boost::asio::thread_pool::basic_executor_type<
/root/boost_1_87_0/boost/asio/thread_pool.hpp:778:    boost::asio::thread_pool::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:779:    boost::asio::execution::relationship_t::continuation_t
/root/boost_1_87_0/boost/asio/thread_pool.hpp:784:  typedef boost::asio::thread_pool::basic_executor_type<
/root/boost_1_87_0/boost/asio/thread_pool.hpp:790:    boost::asio::thread_pool::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:791:    boost::asio::execution::outstanding_work_t::tracked_t
/root/boost_1_87_0/boost/asio/thread_pool.hpp:792:  > : boost::asio::detail::thread_pool_bits
/root/boost_1_87_0/boost/asio/thread_pool.hpp:796:  typedef boost::asio::thread_pool::basic_executor_type<
/root/boost_1_87_0/boost/asio/thread_pool.hpp:802:    boost::asio::thread_pool::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:803:    boost::asio::execution::outstanding_work_t::untracked_t
/root/boost_1_87_0/boost/asio/thread_pool.hpp:804:  > : boost::asio::detail::thread_pool_bits
/root/boost_1_87_0/boost/asio/thread_pool.hpp:808:  typedef boost::asio::thread_pool::basic_executor_type<
/root/boost_1_87_0/boost/asio/thread_pool.hpp:814:    boost::asio::thread_pool::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:815:    boost::asio::execution::allocator_t<void>
/root/boost_1_87_0/boost/asio/thread_pool.hpp:820:  typedef boost::asio::thread_pool::basic_executor_type<
/root/boost_1_87_0/boost/asio/thread_pool.hpp:827:    boost::asio::thread_pool::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:828:    boost::asio::execution::allocator_t<OtherAllocator>
/root/boost_1_87_0/boost/asio/thread_pool.hpp:833:  typedef boost::asio::thread_pool::basic_executor_type<
/root/boost_1_87_0/boost/asio/thread_pool.hpp:843:    boost::asio::thread_pool::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:845:    typename boost::asio::enable_if<
/root/boost_1_87_0/boost/asio/thread_pool.hpp:846:      boost::asio::is_convertible<
/root/boost_1_87_0/boost/asio/thread_pool.hpp:848:        boost::asio::execution::outstanding_work_t
/root/boost_1_87_0/boost/asio/thread_pool.hpp:851:  > : boost::asio::detail::thread_pool_bits
/root/boost_1_87_0/boost/asio/thread_pool.hpp:855:  typedef boost::asio::execution::outstanding_work_t result_type;
/root/boost_1_87_0/boost/asio/thread_pool.hpp:867:    boost::asio::thread_pool::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:869:    typename boost::asio::enable_if<
/root/boost_1_87_0/boost/asio/thread_pool.hpp:870:      boost::asio::is_convertible<
/root/boost_1_87_0/boost/asio/thread_pool.hpp:872:        boost::asio::execution::mapping_t
/root/boost_1_87_0/boost/asio/thread_pool.hpp:879:  typedef boost::asio::execution::mapping_t::thread_t result_type;
/root/boost_1_87_0/boost/asio/thread_pool.hpp:893:    boost::asio::thread_pool::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:895:    typename boost::asio::enable_if<
/root/boost_1_87_0/boost/asio/thread_pool.hpp:896:      boost::asio::is_convertible<
/root/boost_1_87_0/boost/asio/thread_pool.hpp:898:        boost::asio::execution::blocking_t
/root/boost_1_87_0/boost/asio/thread_pool.hpp:905:  typedef boost::asio::execution::blocking_t result_type;
/root/boost_1_87_0/boost/asio/thread_pool.hpp:910:    boost::asio::thread_pool::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:912:    typename boost::asio::enable_if<
/root/boost_1_87_0/boost/asio/thread_pool.hpp:913:      boost::asio::is_convertible<
/root/boost_1_87_0/boost/asio/thread_pool.hpp:915:        boost::asio::execution::relationship_t
/root/boost_1_87_0/boost/asio/thread_pool.hpp:922:  typedef boost::asio::execution::relationship_t result_type;
/root/boost_1_87_0/boost/asio/thread_pool.hpp:927:    boost::asio::thread_pool::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:928:    boost::asio::execution::occupancy_t
/root/boost_1_87_0/boost/asio/thread_pool.hpp:938:    boost::asio::thread_pool::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:939:    boost::asio::execution::context_t
/root/boost_1_87_0/boost/asio/thread_pool.hpp:944:  typedef boost::asio::thread_pool& result_type;
/root/boost_1_87_0/boost/asio/thread_pool.hpp:949:    boost::asio::thread_pool::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:950:    boost::asio::execution::allocator_t<void>
/root/boost_1_87_0/boost/asio/thread_pool.hpp:960:    boost::asio::thread_pool::basic_executor_type<Allocator, Bits>,
/root/boost_1_87_0/boost/asio/thread_pool.hpp:961:    boost::asio::execution::allocator_t<OtherAllocator>
/root/boost_1_87_0/boost/asio/use_awaitable.hpp:146: * See the documentation for boost::asio::use_awaitable_t for a usage example.
/root/boost_1_87_0/boost/asio/use_future.hpp:47: * operation, typically using the special value @c boost::asio::use_future. For
/root/boost_1_87_0/boost/asio/use_future.hpp:51: *   = my_socket.async_read_some(my_buffer, boost::asio::use_future); @endcode
/root/boost_1_87_0/boost/asio/use_future.hpp:138: * See the documentation for boost::asio::use_future_t for a usage example.
/root/boost_1_87_0/boost/asio/uses_executor.hpp:46: * See boost::asio::executor_arg_t and boost::asio::uses_executor
/root/boost_1_87_0/boost/asio/windows/basic_object_handle.hpp:70:  typedef boost::asio::detail::win_object_handle_service::native_handle_type
/root/boost_1_87_0/boost/asio/windows/basic_object_handle.hpp:127:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/windows/basic_object_handle.hpp:153:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/windows/basic_object_handle.hpp:281:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/windows/basic_object_handle.hpp:309:   * boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/windows/basic_object_handle.hpp:317:    boost::asio::detail::throw_error(ec, "close");
/root/boost_1_87_0/boost/asio/windows/basic_object_handle.hpp:324:   * boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/windows/basic_object_handle.hpp:349:   * passed the boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/windows/basic_object_handle.hpp:357:    boost::asio::detail::throw_error(ec, "cancel");
/root/boost_1_87_0/boost/asio/windows/basic_object_handle.hpp:364:   * passed the boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/windows/basic_object_handle.hpp:386:    boost::asio::detail::throw_error(ec, "wait");
/root/boost_1_87_0/boost/asio/windows/basic_object_handle.hpp:419:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/windows/basic_object_handle.hpp:474:  boost::asio::detail::io_object_impl<
/root/boost_1_87_0/boost/asio/windows/basic_object_handle.hpp:475:    boost::asio::detail::win_object_handle_service, Executor> impl_;
/root/boost_1_87_0/boost/asio/windows/basic_overlapped_handle.hpp:70:  typedef boost::asio::detail::win_iocp_handle_service::native_handle_type
/root/boost_1_87_0/boost/asio/windows/basic_overlapped_handle.hpp:127:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/windows/basic_overlapped_handle.hpp:153:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/windows/basic_overlapped_handle.hpp:282:    boost::asio::detail::throw_error(ec, "assign");
/root/boost_1_87_0/boost/asio/windows/basic_overlapped_handle.hpp:310:   * boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/windows/basic_overlapped_handle.hpp:318:    boost::asio::detail::throw_error(ec, "close");/root/boost_1_87_0/boost/asio/windows/basic_overlapped_handle.hpp:325:   * boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/windows/basic_overlapped_handle.hpp:339:   * boost::asio::error::operation_aborted error. Ownership of the native handle
/root/boost_1_87_0/boost/asio/windows/basic_overlapped_handle.hpp:345:   * 8.1, and will fail with boost::asio::error::operation_not_supported on
/root/boost_1_87_0/boost/asio/windows/basic_overlapped_handle.hpp:359:    boost::asio::detail::throw_error(ec, "release");
/root/boost_1_87_0/boost/asio/windows/basic_overlapped_handle.hpp:367:   * boost::asio::error::operation_aborted error. Ownership of the native handle
/root/boost_1_87_0/boost/asio/windows/basic_overlapped_handle.hpp:373:   * 8.1, and will fail with boost::asio::error::operation_not_supported on
/root/boost_1_87_0/boost/asio/windows/basic_overlapped_handle.hpp:402:   * passed the boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/windows/basic_overlapped_handle.hpp:410:    boost::asio::detail::throw_error(ec, "cancel");
/root/boost_1_87_0/boost/asio/windows/basic_overlapped_handle.hpp:417:   * passed the boost::asio::error::operation_aborted error.
/root/boost_1_87_0/boost/asio/windows/basic_overlapped_handle.hpp:437:  boost::asio::detail::io_object_impl<
/root/boost_1_87_0/boost/asio/windows/basic_overlapped_handle.hpp:438:    boost::asio::detail::win_iocp_handle_service, Executor> impl_;
/root/boost_1_87_0/boost/asio/windows/basic_random_access_handle.hpp:63:  typedef boost::asio::detail::win_iocp_handle_service::native_handle_type
/root/boost_1_87_0/boost/asio/windows/basic_random_access_handle.hpp:234:   * boost::asio::error::eof indicates that the connection was closed by the
/root/boost_1_87_0/boost/asio/windows/basic_random_access_handle.hpp:244:   * handle.write_some_at(42, boost::asio::buffer(data, size));
/root/boost_1_87_0/boost/asio/windows/basic_random_access_handle.hpp:257:    boost::asio::detail::throw_error(ec, "write_some_at");
/root/boost_1_87_0/boost/asio/windows/basic_random_access_handle.hpp:312:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/windows/basic_random_access_handle.hpp:324:   * handle.async_write_some_at(42, boost::asi
::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/windows/basic_random_access_handle.hpp:332:   * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/windows/basic_random_access_handle.hpp:368:   * boost::asio::error::eof indicates that the connection was closed by the
/root/boost_1_87_0/boost/asio/windows/basic_random_access_handle.hpp:379:   * handle.read_some_at(42, boost::asio::buffer(data, size));
/root/boost_1_87_0/boost/asio/windows/basic_random_access_handle.hpp:392:    boost::asio::detail::throw_error(ec, "read_some_at");
/root/boost_1_87_0/boost/asio/windows/basic_random_access_handle.hpp:448:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/windows/basic_random_access_handle.hpp:461:   * handle.async_read_some_at(42, boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/windows/basic_random_access_handle.hpp:469:   * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/windows/basic_stream_handle.hpp:66:  typedef boost::asio::detail::win_iocp_handle_service::native_handle_type
/root/boost_1_87_0/boost/asio/windows/basic_stream_handle.hpp:230:   * boost::asio::error::eof indicates that the connection was closed by the
/root/boost_1_87_0/boost/asio/windows/basic_stream_handle.hpp:240:   * handle.write_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/boost/asio/windows/basic_stream_handle.hpp:252:    boost::asio::detail::throw_error(ec, "write_some");
/root/boost_1_87_0/boost/asio/windows/basic_stream_handle.hpp:303:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/windows/basic_stream_handle.hpp:315:   * handle.async_write_some(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/windows/basic_stream_handle.hpp:323:   * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/windows/basic_stream_handle.hpp:357:   * boost::asio::error::eof indicates that the connection was closed by the
/root/boost_1_87_0/boost/asio/windows/basic_stream_handle.hpp:368:   * handle.read_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/boost/asio/windows/basic_stream_handle.hpp:380:    boost::asio::detail::throw_error(ec, "read_some");/root/boost_1_87_0/boost/asio/windows/basic_stream_handle.hpp:432:   * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/windows/basic_stream_handle.hpp:445:   * handle.async_read_some(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/windows/basic_stream_handle.hpp:453:   * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/write.hpp:44: * @defgroup write boost::asio::write
/root/boost_1_87_0/boost/asio/write.hpp:77: * @code boost::asio::write(s, boost::asio::buffer(data, size)); @endcode
/root/boost_1_87_0/boost/asio/write.hpp:83: * @code boost::asio::write(
/root/boost_1_87_0/boost/asio/write.hpp:85: *     boost::asio::transfer_all()); @endcode
/root/boost_1_87_0/boost/asio/write.hpp:119: * @code boost::asio::write(s, boost::asio::buffer(data, size), ec); @endcode
/root/boost_1_87_0/boost/asio/write.hpp:125: * @code boost::asio::write(
/root/boost_1_87_0/boost/asio/write.hpp:127: *     boost::asio::transfer_all(), ec); @endcode
/root/boost_1_87_0/boost/asio/write.hpp:176: * @code boost::asio::write(s, boost::asio::buffer(data, size),
/root/boost_1_87_0/boost/asio/write.hpp:177: *     boost::asio::transfer_at_least(32)); @endcode
/root/boost_1_87_0/boost/asio/write.hpp:268: * @code boost::asio::write(
/root/boost_1_87_0/boost/asio/write.hpp:270: *     boost::asio::transfer_all()); @endcode
/root/boost_1_87_0/boost/asio/write.hpp:305: * @code boost::asio::write(
/root/boost_1_87_0/boost/asio/write.hpp:307: *     boost::asio::transfer_all(), ec); @endcode
/root/boost_1_87_0/boost/asio/write.hpp:448: * @code boost::asio::write(
/root/boost_1_87_0/boost/asio/write.hpp:450: *     boost::asio::transfer_all()); @endcode
/root/boost_1_87_0/boost/asio/write.hpp:477: * @code boost::asio::write(
/root/boost_1_87_0/boost/asio/write.hpp:479: *     boost::asio::transfer_all(), ec); @endcode
/root/boost_1_87_0/boost/asio/write.hpp:599: * @code boost::asio::write(
/root/boost_1_87_0/boost/asio/write.hpp:601: *     boost::asio::transfer_all()); @endcode
/root/boost_1_87_0/boost/asio/write.hpp:632: * @code boost::asio::write(
/root/boost_1_87_0/boost/asio/write.hpp:634: *     boost::asio::transfer_all(), ec); @endcode
/root/boost_1_87_0/boost/asio/write.hpp:740: * @defgroup async_write boost::asio::async_write
/root/boost_1_87_0/boost/asio/write.hpp:790: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/write.hpp:798: * boost::asio::async_write(s, boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/write.hpp:806: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/write.hpp:897: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/write.hpp:904: * @code boost::asio::async_write(s,
/root/boost_1_87_0/boost/asio/write.hpp:905: *     boost::asio::buffer(data, size),
/root/boost_1_87_0/boost/asio/write.hpp:906: *     boost::asio::transfer_at_least(32),
/root/boost_1_87_0/boost/asio/write.hpp:914: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/write.hpp:997: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/write.hpp:1004: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/write.hpp:1100: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/write.hpp:1107: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/write.hpp:1192: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/write.hpp:1199: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/write.hpp:1285: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/write.hpp:1292: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/write.hpp:1374: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/write.hpp:1381: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/write.hpp:1474: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/write.hpp:1481: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/write_at.hpp:43: * @defgroup write_at boost::asio::write_at
/root/boost_1_87_0/boost/asio/write_at.hpp:79: * @code boost::asio::write_at(d, 42, boost::asio::buffer(data, size)); @endcode
/root/boost_1_87_0/boost/asio/write_at.hpp:85: * @code boost::asio::write_at(
/root/boost_1_87_0/boost/asio/write_at.hpp:87: *     boost::asio::transfer_all()); @endcode
/root/boost_1_87_0/boost/asio/write_at.hpp:122: * @code boost::asio::write_at(d, 42,
/root/boost_1_87_0/boost/asio/write_at.hpp:123: *     boost::asio::buffer(data, size), ec); @endcode
/root/boost_1_87_0/boost/asio/write_at.hpp:129: * @code boost::asio::write_at(
/root/boost_1_87_0/boost/asio/write_at.hpp:131: *     boost::asio::transfer_all(), ec); @endcode
/root/boost_1_87_0/boost/asio/write_at.hpp:181: * @code boost::asio::write_at(d, 42, boost::asio::buffer(data, size),
/root/boost_1_87_0/boost/asio/write_at.hpp:182: *     boost::asio::transfer_at_least(32)); @endcode
/root/boost_1_87_0/boost/asio/write_at.hpp:275: * @code boost::asio::write_at(
/root/boost_1_87_0/boost/asio/write_at.hpp:277: *     boost::asio::transfer_all()); @endcode
/root/boost_1_87_0/boost/asio/write_at.hpp:308: * @code boost::asio::write_at(
/root/boost_1_87_0/boost/asio/write_at.hpp:310: *     boost::asio::transfer_all(), ec); @endcode
/root/boost_1_87_0/boost/asio/write_at.hpp:416: * @defgroup async_write_at boost::asio::async_write_at
/root/boost_1_87_0/boost/asio/write_at.hpp:472: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/write_at.hpp:480: * boost::asio::async_write_at(d, 42, boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/asio/write_at.hpp:488: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/write_at.hpp:583: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/write_at.hpp:590: * @code boost::asio::async_write_at(d, 42,
/root/boost_1_87_0/boost/asio/write_at.hpp:591: *     boost::asio::buffer(data, size),
/root/boost_1_87_0/boost/asio/write_at.hpp:592: *     boost::asio::transfer_at_least(32),
/root/boost_1_87_0/boost/asio/write_at.hpp:600: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/write_at.hpp:686: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/write_at.hpp:693: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/asio/write_at.hpp:787: * manner equivalent to using boost::asio::async_immediate().
/root/boost_1_87_0/boost/asio/write_at.hpp:794: * boost::asio::cancellation_type values:
/root/boost_1_87_0/boost/beast/_experimental/test/stream.hpp:163:    // boost::asio::ssl::stream needs these
/root/boost_1_87_0/boost/beast/_experimental/test/stream.hpp:166:    friend class boost::asio::ssl::stream;
/root/boost_1_87_0/boost/beast/core/async_base.hpp:546:        struct op : base_type, boost::asio::coroutine
/root/boost_1_87_0/boost/beast/core/basic_stream.hpp:309:    // boost::asio::ssl::stream needs these
/root/boost_1_87_0/boost/beast/core/basic_stream.hpp:312:    friend class boost::asio::ssl::stream;
/root/boost_1_87_0/boost/beast/core/basic_stream.hpp:698:        empty, set to boost::asio::error::not_found. Otherwise, contains the error
/root/boost_1_87_0/boost/beast/core/detail/bind_handler.hpp:158:        using boost::asio::asio_handler_is_continuation;/root/boost_1_87_0/boost/beast/core/detail/bind_handler.hpp:239:        using boost::asio::asio_handler_is_continuation;/root/boost_1_87_0/boost/beast/core/detail/config.hpp:25:namespace net = boost::asio;
/root/boost_1_87_0/boost/beast/core/detail/is_invocable.hpp:70:        boost::asio::async_initiate<CompletionToken, R(Args...)>(
/root/boost_1_87_0/boost/beast/core/detect_ssl.hpp:474:    : public boost::asio::coroutine
/root/boost_1_87_0/boost/beast/core/impl/async_base.hpp:62:    using boost::asio::asio_handler_is_continuation;
/root/boost_1_87_0/boost/beast/core/impl/basic_stream.hpp:220:    , public boost::asio::coroutine
/root/boost_1_87_0/boost/beast/core/impl/buffers_generator.hpp:35:    : boost::asio::coroutine
/root/boost_1_87_0/boost/beast/websocket/impl/ssl.hpp:40:    boost::asio::ssl::stream<AsyncStream>& stream,
/root/boost_1_87_0/boost/beast/websocket/impl/ssl.hpp:53:    : boost::asio::coroutine
/root/boost_1_87_0/boost/beast/websocket/impl/ssl.hpp:56:        boost::asio::ssl::stream<AsyncStream>& s,
/root/boost_1_87_0/boost/beast/websocket/impl/ssl.hpp:86:    boost::asio::ssl::stream<AsyncStream>& s_;
/root/boost_1_87_0/boost/beast/websocket/impl/ssl.hpp:99:    boost::asio::ssl::stream<AsyncStream>& stream,
/root/boost_1_87_0/boost/beast/websocket/impl/ssl.hpp:102:    return boost::asio::async_compose<TeardownHandler, void(error_code)>(
/root/boost_1_87_0/boost/cobalt/config.hpp:62:using executor = boost::asio::io_context::executor_type;
/root/boost_1_87_0/boost/cobalt/config.hpp:64:using executor = boost::asio::any_io_executor;
/root/boost_1_87_0/boost/cobalt/detail/main.hpp:18:namespace boost::asio
/root/boost_1_87_0/boost/cobalt/experimental/yield_context.hpp:18:struct std::coroutine_handle<boost::asio::basic_yield_context<Executor>>
/root/boost_1_87_0/boost/cobalt/experimental/yield_context.hpp:30:  boost::asio::basic_yield_context<Executor> & promise() const noexcept { return frame_->promise; }
/root/boost_1_87_0/boost/cobalt/experimental/yield_context.hpp:35:      boost::cobalt::experimental::frame<yield_context_frame, boost::asio::basic_yield_context<Executor>>
/root/boost_1_87_0/boost/cobalt/experimental/yield_context.hpp:37:    using boost::cobalt::experimental::frame<yield_context_frame, boost::asio::basic_yield_context<Executor>>::frame;
/root/boost_1_87_0/boost/cobalt/experimental/yield_context.hpp:48:    boost::asio::detail::spawn_handler_base<Executor> lifetime{this->promise};
/root/boost_1_87_0/boost/cobalt/experimental/yield_context.hpp:60:auto await(Aw && aw, boost::asio::basic_yield_context<Executor> ctx)
/root/boost_1_87_0/boost/cobalt/experimental/yield_context.hpp:65:    using ch = std::coroutine_handle<boost::asio::basic_yield_context<Executor>>;
/root/boost_1_87_0/boost/cobalt/experimental/yield_context.hpp:91:auto await(Aw && aw, boost::asio::basic_yield_context<Executor> ctx)
/root/boost_1_87_0/boost/cobalt/experimental/yield_context.hpp:98:auto await(Aw && aw, boost::asio::basic_yield_context<Executor> ctx)
/root/boost_1_87_0/boost/cobalt/op.hpp:220:namespace boost::asio
/root/boost_1_87_0/boost/cobalt/task.hpp:117:namespace boost::asio
/root/boost_1_87_0/boost/cobalt/unique_handle.hpp:276:namespace boost::asio
/root/boost_1_87_0/boost/log/sinks/syslog_backend.hpp:228:    BOOST_LOG_API void set_local_address(boost::asio::ip::address const& addr, unsigned short port = 514);
/root/boost_1_87_0/boost/log/sinks/syslog_backend.hpp:248:    BOOST_LOG_API void set_target_address(boost::asio::ip::address const& addr, unsigned short port = 514);
/root/boost_1_87_0/boost/mysql/any_connection.hpp:171:    any_connection(boost::asio::any_io_executor ex, any_connection_params params = {})
/root/boost_1_87_0/boost/mysql/connection.hpp:1108:     * member with the same semantics, or be an instantiation of `boost::asio::ssl::stream` with
/root/boost_1_87_0/boost/mysql/detail/engine_stream_adaptor.hpp:156:    std::size_t read_some(boost::asio::mutable_buffer buff, bool use_ssl, error_code& ec)
/root/boost_1_87_0/boost/mysql/detail/engine_stream_adaptor.hpp:164:    void async_read_some(boost::asio::mutable_buffer buff, bool use_ssl, CompletionToken&& token)
/root/boost_1_87_0/boost/mysql/detail/engine_stream_adaptor.hpp:172:    std::size_t write_some(boost::asio::const_buffer buff, bool use_ssl, error_code& ec)
/root/boost_1_87_0/boost/mysql/detail/engine_stream_adaptor.hpp:180:    void async_write_some(boost::asio::const_buffer buff, bool use_ssl, CompletionToken&& token)
/root/boost_1_87_0/boost/mysql/detail/engine_stream_adaptor.hpp:239:    std::size_t read_some(boost::asio::mutable_buffer buff, bool use_ssl, error_code& ec)
/root/boost_1_87_0/boost/mysql/detail/engine_stream_adaptor.hpp:252:    void async_read_some(boost::asio::mutable_buffer buff, bool use_ssl, CompletionToken&& token)
/root/boost_1_87_0/boost/mysql/detail/engine_stream_adaptor.hpp:265:    std::size_t write_some(boost::asio::const_buffer buff, bool use_ssl, error_code& ec)
/root/boost_1_87_0/boost/mysql/detail/engine_stream_adaptor.hpp:278:    void async_write_some(boost::asio::const_buffer buff, bool use_ssl, CompletionToken&& token)
/root/boost_1_87_0/boost/mysql/detail/rebind_executor.hpp:25:struct rebind_executor<boost::asio::ssl::stream<Stream>, Executor>
/root/boost_1_87_0/boost/mysql/detail/rebind_executor.hpp:27:    using type = boost::asio::ssl::stream<typename rebind_executor<Stream, Executor>::type>;
/root/boost_1_87_0/boost/mysql/impl/engine_impl_instantiations.ipp:19:    boost::mysql::detail::engine_stream_adaptor<boost::asio::ssl::stream<boost::asio::ip::tcp::socket>>>;
/root/boost_1_87_0/boost/mysql/impl/engine_impl_instantiations.ipp:21:    boost::mysql::detail::engine_stream_adaptor<boost::asio::ip::tcp::socket>>;
/root/boost_1_87_0/boost/mysql/impl/internal/connection_pool/connection_node.hpp:216:        boost::asio::any_io_executor pool_ex,
/root/boost_1_87_0/boost/mysql/impl/internal/connection_pool/connection_node.hpp:217:        boost::asio::any_io_executor conn_ex,
/root/boost_1_87_0/boost/mysql/impl/internal/variant_stream.hpp:247:    std::size_t write_some(boost::asio::const_buffer buff, bool use_ssl, error_code& ec)
/root/boost_1_87_0/boost/mysql/impl/internal/variant_stream.hpp:261:    void async_write_some(boost::asio::const_buffer buff, bool use_ssl, CompletionToken&& token)
/root/boost_1_87_0/boost/mysql/tcp.hpp:26:using tcp_connection = connection<boost::asio::ip::tcp::socket>;
/root/boost_1_87_0/boost/mysql/tcp_ssl.hpp:27:using tcp_ssl_connection = connection<boost::asio::ssl::stream<boost::asi
::ip::tcp::socket>>;
/root/boost_1_87_0/boost/mysql/unix.hpp:28:using unix_connection = connection<boost::asio::local::stream_protocol::socket>;
/root/boost_1_87_0/boost/mysql/unix_ssl.hpp:28:using unix_ssl_connection = connection<boost::asio::ssl::stream<boost::asio::local::stream_protocol::socket>>;
/root/boost_1_87_0/boost/process/v1/async.hpp:10:It also implements the necessary traits for passing an boost::asio::io_context,
/root/boost_1_87_0/boost/process/v1/async.hpp:13:It also pulls the [boost::asio::buffer](http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/buffer.html)
/root/boost_1_87_0/boost/process/v1/async.hpp:74:    boost::asio::io_context * ios;
/root/boost_1_87_0/boost/process/v1/async.hpp:76:    void operator()(boost::asio::io_context & ios_) {this->ios = &ios_;};
/root/boost_1_87_0/boost/process/v1/async.hpp:91:using ::boost::asio::buffer;
/root/boost_1_87_0/boost/process/v1/async.hpp:123:\warning `on_exit` uses `boost::asio::signal_set` to listen for `SIGCHLD` on posix, and so has the
/root/boost_1_87_0/boost/process/v1/async.hpp:125:`boost::asio::signal_set`).
/root/boost_1_87_0/boost/process/v1/async_pipe.hpp:30: *  It is based on the corresponding I/O Object, that is either boost::asio::windows::stream_handle or
/root/boost_1_87_0/boost/process/v1/async_pipe.hpp:31: *  boost::asio::posix::stream_descriptor.
/root/boost_1_87_0/boost/process/v1/async_pipe.hpp:33: *  It can be used directly with boost::asio::async_read or async_write.
/root/boost_1_87_0/boost/process/v1/async_pipe.hpp:56:    inline async_pipe(boost::asio::io_context & ios);
/root/boost_1_87_0/boost/process/v1/async_pipe.hpp:61:    inline async_pipe(boost::asio::io_context & ios_source,
/root/boost_1_87_0/boost/process/v1/async_pipe.hpp:62:                      boost::asio::io_context & ios_sink);
/root/boost_1_87_0/boost/process/v1/async_pipe.hpp:69:    inline async_pipe(boost::asio::io_context & ios, const std::string & name);
/root/boost_1_87_0/boost/process/v1/async_pipe.hpp:76:    inline async_pipe(boost::asio::io_context & ios_source,
/root/boost_1_87_0/boost/process/v1/async_pipe.hpp:77:                      boost::asio::io_context & ios_sink, const std::string & name);
/root/boost_1_87_0/boost/process/v1/async_pipe.hpp:94:    explicit async_pipe(boost::asio::io_context & ios, const basic_pipe<CharT, Traits> & p);
/root/boost_1_87_0/boost/process/v1/async_pipe.hpp:101:    explicit async_pipe(boost::asio::io_context & ios_source,
/root/boost_1_87_0/boost/process/v1/async_pipe.hpp:102:                        boost::asio::io_context & ios_sink,
/root/boost_1_87_0/boost/process/v1/async_pipe.hpp:160:    native_handle native_source() const {return const_cast<boost::asio::windows::stream_handle&>(_source).native();}
/root/boost_1_87_0/boost/process/v1/async_pipe.hpp:162:    native_handle native_sink  () const {return const_cast<boost::asio::windows::stream_handle&>(_sink  ).native();}
/root/boost_1_87_0/boost/process/v1/async_pipe.hpp:195:    handle_type source(::boost::asio::io_context& ios) &&;
/root/boost_1_87_0/boost/process/v1/async_pipe.hpp:197:    handle_type sink  (::boost::asio::io_context& ios) &&;
/root/boost_1_87_0/boost/process/v1/async_pipe.hpp:200:    handle_type source(::boost::asio::io_context& ios) const &;
/root/boost_1_87_0/boost/process/v1/async_pipe.hpp:202:    handle_type sink  (::boost::asio::io_context& ios) const &;
/root/boost_1_87_0/boost/process/v1/async_system.hpp:44:    boost::asio::io_context & ios;
/root/boost_1_87_0/boost/process/v1/async_system.hpp:53:            boost::asio::io_context & ios,
/root/boost_1_87_0/boost/process/v1/async_system.hpp:66:        boost::asio::post(
/root/boost_1_87_0/boost/process/v1/async_system.hpp:112:    async_system(boost::asio::io_context & ios, ExitHandler && exit_handler, Args && ...args);
/root/boost_1_87_0/boost/process/v1/async_system.hpp:134:    async_system(boost::asio::io_context & ios, ExitHandler && exit_handler, Args && ...args)
/root/boost_1_87_0/boost/process/v1/async_system.hpp:142:    return boost::asio::async_initiate<ExitHandler, void (boost::system::error_code, int)>(
/root/boost_1_87_0/boost/process/v1/detail/async_handler.hpp:45:                boost::asio::io_context>::type is_ios;
/root/boost_1_87_0/boost/process/v1/detail/async_handler.hpp:56:            boost::asio::io_context>::type type;
/root/boost_1_87_0/boost/process/v1/detail/async_handler.hpp:101:boost::asio::io_context &get_io_context_var(boost::asio::io_context & f, Args&...)
/root/boost_1_87_0/boost/process/v1/detail/async_handler.hpp:107:boost::asio::io_context &get_io_context_var(First&, Args&...args)
/root/boost_1_87_0/boost/process/v1/detail/posix/async_in.hpp:53:            boost::asio::async_write(*pipe_, buf,
/root/boost_1_87_0/boost/process/v1/detail/posix/async_in.hpp:66:            boost::asio::async_write(*pipe_, buf,
/root/boost_1_87_0/boost/process/v1/detail/posix/async_out.hpp:77:        boost::asio::async_read(*pipe, buf,
/root/boost_1_87_0/boost/process/v1/detail/posix/async_out.hpp:120:    std::shared_ptr<boost::asio::streambuf> buffer = std::make_shared<boost::asio::streambuf>();
/root/boost_1_87_0/boost/process/v1/detail/posix/async_out.hpp:136:        boost::asio::async_read(*pipe_, *buffer_,
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:21:    ::boost::asio::posix::stream_descriptor _source;
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:22:    ::boost::asio::posix::stream_descriptor _sink  ;
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:25:    typedef ::boost::asio::posix::stream_descriptor handle_type;
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:33:    inline async_pipe(boost::asio::io_context & ios) : async_pipe(ios, ios) {}
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:35:    inline async_pipe(boost::asio::io_context & ios_source,
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:36:                      boost::asio::io_context & ios_sink) : _source(ios_source), _sink(ios_sink)
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:45:    inline async_pipe(boost::asio::io_context & ios, const std::string & name)
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:48:    inline async_pipe(boost::asio::io_context & ios_source,
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:49:                      boost::asio::io_context & io_sink, const std::string & name);
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:53:        lhs._source = ::boost::asio::posix::stream_descriptor{lhs._source.get_executor()};
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:54:        lhs._sink   = ::boost::asio::posix::stream_descriptor{lhs._sink.  get_executor()};
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:58:    explicit async_pipe(::boost::asio::io_context & ios_source,
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:59:                        ::boost::asio::io_context & ios_sink,
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:66:    explicit async_pipe(boost::asio::io_context & ios, const basic_pipe<CharT, Traits> & p)
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:117:            boost::asio::post(_sink.get_executor(),   [this]{_sink.close();});
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:119:            boost::asio::post(_source.get_executor(), [this]{_source.close();});
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:145:    native_handle_type native_source() const {return const_cast<boost::asio::posix::stream_descriptor&>(_source).native_handle();}
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:146:    native_handle_type native_sink  () const {return const_cast<boost::asio::posix::stream_descriptor&>(_sink  ).native_handle();}
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:177:    handle_type source(::boost::asio::io_context& ios) &&
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:179:        ::boost::asio::posix::stream_descriptor stolen(ios, _source.release());
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:182:    handle_type sink  (::boost::asio::io_context& ios) &&
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:184:        ::boost::asio::posix::stream_descriptor stolen(ios, _sink.release());
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:188:    handle_type source(::boost::asio::io_context& ios) const &
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:190:        auto source_in = const_cast<::boost::asio::posix::stream_descriptor &>(_source).native_handle();
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:191:        return ::boost::asio::posix::stream_descriptor(ios, ::dup(source_in));
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:193:    handle_type sink  (::boost::asio::io_context& ios) const &
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:195:        auto sink_in = const_cast<::boost::asio::posix::stream_descriptor &>(_sink).native_handle();
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:196:        return ::boost::asio::posix::stream_descriptor(ios, ::dup(sink_in));
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:201:async_pipe::async_pipe(boost::asio::io_context & ios_source,
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:202:                       boost::asio::io_context & ios_sink,
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:231:    auto source_in = const_cast<::boost::asio::posix::stream_descriptor &>(_source).native_handle();
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:232:    auto sink_in   = const_cast<::boost::asio::posix::stream_descriptor &>(_sink).native_handle();
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:258:    auto source_in = const_cast<::boost::asio::posix::stream_descriptor &>(p._source).native_handle();
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:259:    auto sink_in   = const_cast<::boost::asio::posix::stream_descriptor &>(p._sink).native_handle();
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:297:    auto source_in = const_cast<::boost::asio::posix::stream_descriptor &>(_source).native_handle();
/root/boost_1_87_0/boost/process/v1/detail/posix/async_pipe.hpp:298:    auto sink_in   = const_cast<::boost::asio::posix::stream_descriptor &>(_sink).native_handle();
/root/boost_1_87_0/boost/process/v1/detail/posix/io_context_ref.hpp:73:    io_context_ref(boost::asio::io_context & ios) : ios(ios)
/root/boost_1_87_0/boost/process/v1/detail/posix/io_context_ref.hpp:77:    boost::asio::io_context &get() {return ios;};
/root/boost_1_87_0/boost/process/v1/detail/posix/io_context_ref.hpp:82:        ios.notify_fork(boost::asio::io_context::fork_parent);
/root/boost_1_87_0/boost/process/v1/detail/posix/io_context_ref.hpp:110:    void on_setup (Executor &) const {/*ios.notify_fork(boost::asio::io_context::fork_prepare);*/}
/root/boost_1_87_0/boost/process/v1/detail/posix/io_context_ref.hpp:113:    void on_exec_setup  (Executor &) const {/*ios.notify_fork(boost::asio::io_context::fork_child);*/}
/root/boost_1_87_0/boost/process/v1/detail/posix/io_context_ref.hpp:116:    void on_error(Executor&, const std::error_code &) const {/*ios.notify_fork(boost::asio::io_context::fork_parent);*/}
/root/boost_1_87_0/boost/process/v1/detail/posix/io_context_ref.hpp:119:    boost::asio::io_context &ios;
/root/boost_1_87_0/boost/process/v1/detail/posix/io_context_ref.hpp:120:    boost::process::v1::detail::posix::sigchld_service &sigchld_service = boost::asio::use_service<boost::process::v1::detail::posix::sigchld_service>(ios);
/root/boost_1_87_0/boost/process/v1/detail/posix/on_exit.hpp:34:        auto v = boost::asio::prefer(boost::process::v1::detail::get_io_context(exec.seq).get_executor(),
/root/boost_1_87_0/boost/process/v1/detail/posix/on_exit.hpp:35:                                     boost::asio::execution::outstanding_work.tracked);
/root/boost_1_87_0/boost/process/v1/detail/posix/sigchld_service.hpp:25:class sigchld_service : public boost::asio::detail::service_base<sigchld_service>
/root/boost_1_87_0/boost/process/v1/detail/posix/sigchld_service.hpp:27:    boost::asio::strand<boost::asio::io_context::executor_type> _strand{get_io_context().get_executor()};
/root/boost_1_87_0/boost/process/v1/detail/posix/sigchld_service.hpp:28:    boost::asio::signal_set _signal_set{get_io_context(), SIGCHLD};
/root/boost_1_87_0/boost/process/v1/detail/posix/sigchld_service.hpp:45:                boost::asio::post(
/root/boost_1_87_0/boost/process/v1/detail/posix/sigchld_service.hpp:50:                boost::asio::post(
/root/boost_1_87_0/boost/process/v1/detail/posix/sigchld_service.hpp:52:                        boost::asio::append(std::forward<Initiation>(init), status, std::error_code{}));
/root/boost_1_87_0/boost/process/v1/detail/posix/sigchld_service.hpp:58:                        boost::asio::bind_executor(
/root/boost_1_87_0/boost/process/v1/detail/posix/sigchld_service.hpp:70:    sigchld_service(boost::asio::io_context & io_context)
/root/boost_1_87_0/boost/process/v1/detail/posix/sigchld_service.hpp:71:        : boost::asio::detail::service_base<sigchld_service>(io_context)
/root/boost_1_87_0/boost/process/v1/detail/posix/sigchld_service.hpp:80:        return boost::asio::async_initiate<
/root/boost_1_87_0/boost/process/v1/detail/posix/sigchld_service.hpp:138:                boost::asio::post(_strand, [this, ec]{this->_handle_signal(ec);});
/root/boost_1_87_0/boost/process/v1/detail/traits/async.hpp:25:template<> struct initializer_tag<::boost::asio::io_context> { typedef async_tag type;};
/root/boost_1_87_0/boost/process/v1/detail/windows/async_in.hpp:63:            boost::asio::async_write(*pipe_, buf,
/root/boost_1_87_0/boost/process/v1/detail/windows/async_in.hpp:75:            boost::asio::async_write(*pipe_, buf,
/root/boost_1_87_0/boost/process/v1/detail/windows/async_out.hpp:85:        boost::asio::async_read(*pipe_, buf,
/root/boost_1_87_0/boost/process/v1/detail/windows/async_out.hpp:117:    std::shared_ptr<boost::asio::streambuf> buffer = std::make_shared<boost::asio::streambuf>();
/root/boost_1_87_0/boost/process/v1/detail/windows/async_out.hpp:136:        boost::asio::async_read(*pipe_, *buffer_,
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:41:    ::boost::asio::windows::stream_handle _source;
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:42:    ::boost::asio::windows::stream_handle _sink  ;
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:44:    inline async_pipe(boost::asio::io_context & ios_source,
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:45:                      boost::asio::io_context & ios_sink,
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:50:    typedef ::boost::asio::windows::stream_handle   handle_type;
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:53:    async_pipe(boost::asio::io_context & ios) : async_pipe(ios, ios, make_pipe_name(), true) {}
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:54:    async_pipe(boost::asio::io_context & ios_source, boost::asio::io_context & ios_sink)
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:57:    async_pipe(boost::asio::io_context & ios, const std::string & name)
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:60:    async_pipe(boost::asio::io_context & ios_source, boost::asio::io_context & ios_sink, const std::string & name)
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:70:    explicit async_pipe(::boost::asio::io_context & ios_source,
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:71:                        ::boost::asio::io_context & ios_sink,
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:78:    explicit async_pipe(boost::asio::io_context & ios, const basic_pipe<CharT, Traits> & p)
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:140:            boost::asio::post(_sink.get_executor(),   [this]{_sink.close();});
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:142:            boost::asio::post(_source.get_executor(), [this]{_source.close();});
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:168:    native_handle_type native_source() const {return const_cast<boost::asio::windows::stream_handle&>(_source).native_handle();}
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:169:    native_handle_type native_sink  () const {return const_cast<boost::asio::windows::stream_handle&>(_sink  ).native_handle();}
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:199:    handle_type source(::boost::asio::io_context& ios) &&
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:201:        ::boost::asio::windows::stream_handle stolen(ios.get_executor(), _source.native_handle());
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:206:    handle_type sink  (::boost::asio::io_context& ios) &&
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:208:        ::boost::asio::windows::stream_handle stolen(ios.get_executor(), _sink.native_handle());
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:214:    handle_type source(::boost::asio::io_context& ios) const &
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:228:        return ::boost::asio::windows::stream_handle(ios.get_executor(), source);
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:230:    handle_type sink  (::boost::asio::io_context& ios) const &
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:244:        return ::boost::asio::windows::stream_handle(ios.get_executor(), sink);
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:285:async_pipe::async_pipe(boost::asio::io_context & ios_source,
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:286:                       boost::asio::io_context & ios_sink,
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:370:    auto &source_in = const_cast<::boost::asio::windows::stream_handle &>(p._source);
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:371:    auto &sink_in   = const_cast<::boost::asio::windows::stream_handle &>(p._sink);
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:393:        _source = ::boost::asio::windows::stream_handle(source_in.get_executor(), source);
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:395:        _source = ::boost::asio::windows::stream_handle(source_in.get_executor());
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:398:        _sink   = ::boost::asio::windows::stream_handle(source_in.get_executor(), sink);
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:400:        _sink   = ::boost::asio::windows::stream_handle(source_in.get_executor());
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:421:    auto source_in = const_cast<::boost::asio::windows::stream_handle &>(_source).native_handle();
/root/boost_1_87_0/boost/process/v1/detail/windows/async_pipe.hpp:422:    auto sink_in   = const_cast<::boost::asio::windows::stream_handle &>(_sink).native_handle();
/root/boost_1_87_0/boost/process/v1/detail/windows/io_context_ref.hpp:78:    io_context_ref(boost::asio::io_context & ios)
/root/boost_1_87_0/boost/process/v1/detail/windows/io_context_ref.hpp:82:    boost::asio::io_context &get() {return ios;};
/root/boost_1_87_0/boost/process/v1/detail/windows/io_context_ref.hpp:123:            ::boost::asio::post(wh.handle->get_executor(), std::move(wh));
/root/boost_1_87_0/boost/process/v1/detail/windows/io_context_ref.hpp:136:        std::unique_ptr<boost::asio::windows::object_handle> handle;
/root/boost_1_87_0/boost/process/v1/detail/windows/io_context_ref.hpp:141:                     boost::asio::io_context & ios, void * handle,
/root/boost_1_87_0/boost/process/v1/detail/windows/io_context_ref.hpp:144:                  handle(new boost::asio::windows::object_handle(
/root/boost_1_87_0/boost/process/v1/detail/windows/io_context_ref.hpp:167:    boost::asio::io_context &ios;
/root/boost_1_87_0/boost/process/v1/detail/windows/on_exit.hpp:35:        auto v = boost::asio::prefer(boost::process::v1::detail::get_io_context(exec.seq).get_executor(),
/root/boost_1_87_0/boost/process/v1/detail/windows/on_exit.hpp:36:                                     boost::asio::execution::outstanding_work.tracked);
/root/boost_1_87_0/boost/process/v1/io.hpp:94:boost::asio::io_context ios;
/root/boost_1_87_0/boost/process/v1/io.hpp:126:template<typename T> using is_streambuf    = typename std::is_same<T, boost::asio::streambuf>::type;
/root/boost_1_87_0/boost/process/v1/io.hpp:129:            std::is_same<   boost::asio::const_buffer, T>::value |
/root/boost_1_87_0/boost/process/v1/io.hpp:130:            std::is_base_of<boost::asio::const_buffer, T>::value
/root/boost_1_87_0/boost/process/v1/io.hpp:134:            std::is_same<   boost::asio::mutable_buffer, T>::value |
/root/boost_1_87_0/boost/process/v1/io.hpp:135:            std::is_base_of<boost::asio::mutable_buffer, T>::value
/root/boost_1_87_0/boost/process/v1/io.hpp:353: - `boost::asio::const_buffer`   \xmlonly <footnote><para> Constructed with <code>boost::asio::buffer</code></para></footnote> \endxmlonly
/root/boost_1_87_0/boost/process/v1/io.hpp:354: - `boost::asio::mutable_buffer` \xmlonly <footnote><para> Constructed with <code>boost::asio::buffer</code></para></footnote> \endxmlonly
/root/boost_1_87_0/boost/process/v1/io.hpp:355: - `boost::asio::streambuf`
/root/boost_1_87_0/boost/process/v1/io.hpp:374:boost::asio::io_context ios;
/root/boost_1_87_0/boost/process/v1/io.hpp:381:\note `boost::asio::buffer` is also available in the `boost::process` namespace.
/root/boost_1_87_0/boost/process/v1/io.hpp:383:\warning This feature requires `boost/process/async.hpp` to be included and a reference to `boost::asio::io_context` to be passed to the launching function.
/root/boost_1_87_0/boost/process/v1/io.hpp:495: - `boost::asio::mutable_buffer` \xmlonly <footnote><para> Constructed with <code>boost::asio::buffer</code></para></footnote> \endxmlonly
/root/boost_1_87_0/boost/process/v1/io.hpp:496: - `boost::asio::streambuf`
/root/boost_1_87_0/boost/process/v1/io.hpp:511:\note `boost::asio::buffer` is also available in the `boost::process` namespace.
/root/boost_1_87_0/boost/process/v1/io.hpp:513:\warning This feature requires `boost/process/async.hpp` to be included and a reference to `boost::asio::io_context` to be passed to the launching function.
/root/boost_1_87_0/boost/process/v1/spawn.hpp:45:It will fail to compile if a reference to `boost::asio::io_context` is passed.
/root/boost_1_87_0/boost/process/v1/system.hpp:66:                    boost::asio::post(ios.get_executor(), [&]{exited.store(true);});
/root/boost_1_87_0/boost/process/v1/system.hpp:149:    return ::boost::process::v1::detail::system_impl<boost::asio::io_context>(
/root/boost_1_87_0/boost/process/v2/detail/config.hpp:86:namespace net = ::boost::asio;
/root/boost_1_87_0/boost/process/v2/popen.hpp:252:     * boost::asio::error::eof indicates that the connection was closed by the
/root/boost_1_87_0/boost/process/v2/popen.hpp:262:     * pipe.write_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/boost/process/v2/popen.hpp:320:     * manner equivalent to using boost::asio::post().
/root/boost_1_87_0/boost/process/v2/popen.hpp:332:     * popen.async_write_some(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/boost/process/v2/popen.hpp:360:     * boost::asio::error::eof indicates that the connection was closed by the
/root/boost_1_87_0/boost/process/v2/popen.hpp:371:     * basic_readable_pipe.read_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/boost/process/v2/popen.hpp:430:     * manner equivalent to using boost::asio::post().
/root/boost_1_87_0/boost/process/v2/popen.hpp:444:     *     boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/doc/antora/url/examples/router.html:186:namespace asio = boost::asio;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/allocation/server.cpp:19:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/allocation/server.cpp:133:    socket_.async_read_some(boost::asio::buffer(data_),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/allocation/server.cpp:134:        boost::asio::bind_allocator(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/allocation/server.cpp:148:    boost::asio::async_write(socket_, boost::asio::buffer(data_, length),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/allocation/server.cpp:149:        boost::asio::bind_allocator(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/allocation/server.cpp:173:  server(boost::asio::io_context& io_context, short port)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/allocation/server.cpp:207:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/buffers/reference_counted.cpp:18:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/buffers/reference_counted.cpp:27:      buffer_(boost::asio::buffer(*data_))
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/buffers/reference_counted.cpp:32:  typedef boost::asio::const_buffer value_type;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/buffers/reference_counted.cpp:33:  typedef const boost::asio::const_buffer* const_iterator;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/buffers/reference_counted.cpp:34:  const boost::asio::const_buffer* begin() const { return &buffer_; }
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/buffers/reference_counted.cpp:35:  const boost::asio::const_buffer* end() const { return &buffer_ + 1; }
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/buffers/reference_counted.cpp:39:  boost::asio::const_buffer buffer_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/buffers/reference_counted.cpp:63:    boost::asio::async_write(socket_, buffer,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/buffers/reference_counted.cpp:76:  server(boost::asio::io_context& io_context, short port)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/buffers/reference_counted.cpp:110:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:18:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:25:  chat_client(boost::asio::io_context& io_context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:35:    boost::asio::post(io_context_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:49:    boost::asio::post(io_context_, [this]() { socket_.close(); });
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:55:    boost::asio::async_connect(socket_, endpoints,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:67:    boost::asio::async_read(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:68:        boost::asio::buffer(read_msg_.data(), chat_message::header_length),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:84:    boost::asio::async_read(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:85:        boost::asio::buffer(read_msg_.body(), read_msg_.body_length()),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:103:    boost::asio::async_write(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:104:        boost::asio::buffer(write_msgs_.front().data(),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:124:  boost::asio::io_context& io_context_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:140:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/chat_server.cpp:21:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/chat_server.cpp:104:    boost::asio::async_read(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/chat_server.cpp:105:        boost::asio::buffer(read_msg_.data(), chat_message::header_length),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/chat_server.cpp:122:    boost::asio::async_read(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/chat_server.cpp:123:        boost::asio::buffer(read_msg_.body(), read_msg_.body_length()),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/chat_server.cpp:141:    boost::asio::async_write(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/chat_server.cpp:142:        boost::asio::buffer(write_msgs_.front().data(),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/chat_server.cpp:172:  chat_server(boost::asio::io_context& io_context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/chat_server.cpp:210:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/posix_chat_client.cpp:20:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/posix_chat_client.cpp:21:namespace posix = boost::asio::posix;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/posix_chat_client.cpp:26:  posix_chat_client(boost::asio::io_context& io_context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/posix_chat_client.cpp:39:    boost::asio::async_connect(socket_, endpoints,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/posix_chat_client.cpp:52:    boost::asio::async_read(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/posix_chat_client.cpp:53:        boost::asio::buffer(read_msg_.data(), chat_message::header_length),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/posix_chat_client.cpp:69:    boost::asio::async_read(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/posix_chat_client.cpp:70:        boost::asio::buffer(read_msg_.body(), read_msg_.body_length()),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/posix_chat_client.cpp:88:    std::array<boost::asio::const_buffer, 2> buffers = {{
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/posix_chat_client.cpp:89:      boost::asio::buffer(read_msg_.body(), read_msg_.body_length()),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/posix_chat_client.cpp:90:      boost::asio::buffer(eol) }};
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/posix_chat_client.cpp:91:    boost::asio::async_write(output_, buffers,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/posix_chat_client.cpp:108:    boost::asio::async_read_until(input_, input_buffer_, '\n',
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/posix_chat_client.cpp:120:          else if (ec == boost::asio::error::not_found)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/posix_chat_client.cpp:137:    boost::asio::async_write(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/posix_chat_client.cpp:138:        boost::asio::buffer(write_msg_.data(), write_msg_.length()),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/posix_chat_client.cpp:166:  boost::asio::streambuf input_buffer_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/chat/posix_chat_client.cpp:179:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/deferred/deferred_1.cpp:14:using boost::asio::deferred;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/deferred/deferred_1.cpp:18:  boost::asio::io_context ctx;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/deferred/deferred_1.cpp:20:  boost::asio::steady_timer timer(ctx);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/deferred/deferred_2.cpp:14:using boost::asio::deferred;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/deferred/deferred_2.cpp:18:  boost::asio::io_context ctx;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/deferred/deferred_2.cpp:20:  boost::asio::steady_timer timer(ctx);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/async_tcp_echo_server.cpp:17:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/async_tcp_echo_server.cpp:37:    socket_.async_read_some(boost::asio::buffer(data_, max_length),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/async_tcp_echo_server.cpp:50:    boost::asio::async_write(socket_, boost::asio::buffer(data_, length),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/async_tcp_echo_server.cpp:68:  server(boost::asio::io_context& io_context, short port)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/async_tcp_echo_server.cpp:102:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/async_udp_echo_server.cpp:15:using boost::asio::ip::udp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/async_udp_echo_server.cpp:20:  server(boost::asio::io_context& io_context, short port)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/async_udp_echo_server.cpp:29:        boost::asio::buffer(data_, max_length), sender_endpoint_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/async_udp_echo_server.cpp:46:        boost::asio::buffer(data_, length), sender_endpoint_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/async_udp_echo_server.cpp:70:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/blocking_tcp_echo_client.cpp:16:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/blocking_tcp_echo_client.cpp:30:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/blocking_tcp_echo_client.cpp:34:    boost::asio::connect(s, resolver.resolve(argv[1], argv[2]));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/blocking_tcp_echo_client.cpp:40:    boost::asio::write(s, boost::asio::buffer(request, request_length));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/blocking_tcp_echo_client.cpp:43:    size_t reply_length = boost::asio::read(s,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/blocking_tcp_echo_client.cpp:44:        boost::asio::buffer(reply, request_length));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/blocking_tcp_echo_server.cpp:17:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/blocking_tcp_echo_server.cpp:30:      size_t length = sock.read_some(boost::asio::buffer(data), error);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/blocking_tcp_echo_server.cpp:31:      if (error == boost::asio::error::eof)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/blocking_tcp_echo_server.cpp:36:      boost::asio::write(sock, boost::asio::buffer(data, length));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/blocking_tcp_echo_server.cpp:45:void server(boost::asio::io_context& io_context, unsigned short port)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/blocking_tcp_echo_server.cpp:64:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/blocking_udp_echo_client.cpp:16:using boost::asio::ip::udp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/blocking_udp_echo_client.cpp:30:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/blocking_udp_echo_client.cpp:42:    s.send_to(boost::asio::buffer(request, request_length), *endpoints.begin());
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/blocking_udp_echo_client.cpp:47:        boost::asio::buffer(reply, max_length), sender_endpoint);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/blocking_udp_echo_server.cpp:15:using boost::asio::ip::udp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/blocking_udp_echo_server.cpp:19:void server(boost::asio::io_context& io_context, unsigned short port)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/blocking_udp_echo_server.cpp:27:        boost::asio::buffer(data, max_length), sender_endpoint);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/blocking_udp_echo_server.cpp:28:    sock.send_to(boost::asio::buffer(data, length), sender_endpoint);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/echo/blocking_udp_echo_server.cpp:42:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/actor.cpp:13:using boost::asio::any_io_executor;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/actor.cpp:14:using boost::asio::defer;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/actor.cpp:15:using boost::asio::post;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/actor.cpp:16:using boost::asio::strand;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/actor.cpp:17:using boost::asio::system_executor;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/actor.cpp:219:using boost::asio::thread_pool;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/bank_account_1.cpp:5:using boost::asio::static_thread_pool;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/bank_account_1.cpp:6:namespace execution = boost::asio::execution;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/bank_account_2.cpp:5:using boost::asio::static_thread_pool;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/bank_account_2.cpp:6:namespace execution = boost::asio::execution;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/bank_account_2.cpp:19:    boost::asio::require(pool_.executor(), execution::blocking.always).execute(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/bank_account_2.cpp:28:    boost::asio::require(pool_.executor(), execution::blocking.always).execute(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/bank_account_2.cpp:39:    boost::asio::require(pool_.executor(), execution::blocking.always).execute(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/fork_join.cpp:11:using boost::asio::static_thread_pool;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/fork_join.cpp:12:namespace execution = boost::asio::execution;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/pipeline.cpp:16:using boost::asio::execution_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/pipeline.cpp:17:using boost::asio::executor_binder;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/pipeline.cpp:18:using boost::asio::get_associated_executor;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/pipeline.cpp:19:using boost::asio::post;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/pipeline.cpp:20:using boost::asio::system_executor;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/pipeline.cpp:21:using boost::asio::use_future;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/pipeline.cpp:22:using boost::asio::use_service;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/pipeline.cpp:23:namespace execution = boost::asio::execution;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/pipeline.cpp:61:    return boost::asio::query(system_executor(), execution::context);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/pipeline.cpp:244:using boost::asio::bind_executor;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/pipeline.cpp:245:using boost::asio::thread_pool;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/priority_scheduler.cpp:9:using boost::asio::dispatch;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/priority_scheduler.cpp:10:using boost::asio::execution_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/executors/priority_scheduler.cpp:11:namespace execution = boost::asio::execution;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/fork/daemon.cpp:20:using boost::asio::ip::udp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/fork/daemon.cpp:25:  udp_daytime_server(boost::asio::io_context& io_context)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/fork/daemon.cpp:35:        boost::asio::buffer(recv_buffer_), remote_endpoint_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/fork/daemon.cpp:45:            socket_.send_to(boost::asio::buffer(message),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/fork/daemon.cpp:62:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/fork/daemon.cpp:72:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/fork/daemon.cpp:82:    io_context.notify_fork(boost::asio::io_context::fork_prepare);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/fork/daemon.cpp:98:        //   io_context.notify_fork(boost::asio::io_context::fork_parent);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/fork/daemon.cpp:103:        //   io_context.notify_fork(boost::asio::io_context::fork_prepare);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/fork/daemon.cpp:177:    io_context.notify_fork(boost::asio::io_context::fork_child);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/fork/process_per_connection.cpp:21:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/fork/process_per_connection.cpp:26:  server(boost::asio::io_context& io_context, unsigned short port)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/fork/process_per_connection.cpp:70:            io_context_.notify_fork(boost::asio::io_context::fork_prepare);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/fork/process_per_connection.cpp:78:              io_context_.notify_fork(boost::asio::io_context::fork_child);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/fork/process_per_connection.cpp:97:              io_context_.notify_fork(boost::asio::io_context::fork_parent);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/fork/process_per_connection.cpp:116:    socket_.async_read_some(boost::asio::buffer(data_),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/fork/process_per_connection.cpp:126:    boost::asio::async_write(socket_, boost::asio::buffer(data_, length),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/fork/process_per_connection.cpp:134:  boost::asio::io_context& io_context_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/fork/process_per_connection.cpp:135:  boost::asio::signal_set signal_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/fork/process_per_connection.cpp:151:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/futures/daytime_client.cpp:19:using boost::asio::ip::udp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/futures/daytime_client.cpp:21:void get_daytime(boost::asio::io_context& io_context, const char* hostname)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/futures/daytime_client.cpp:30:          boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/futures/daytime_client.cpp:39:      socket.async_send_to(boost::asio::buffer(send_buf),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/futures/daytime_client.cpp:41:          boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/futures/daytime_client.cpp:51:          boost::asio::buffer(recv_buf),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/futures/daytime_client.cpp:53:          boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/futures/daytime_client.cpp:79:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/futures/daytime_client.cpp:80:    auto work = boost::asio::make_work_guard(io_context);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/handler_tracking/async_tcp_echo_server.cpp:17:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/handler_tracking/async_tcp_echo_server.cpp:48:    socket_.async_read_some(boost::asio::buffer(data_, max_length),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/handler_tracking/async_tcp_echo_server.cpp:65:    boost::asio::async_write(socket_, boost::asio::buffer(data_, length),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/handler_tracking/async_tcp_echo_server.cpp:85:  server(boost::asio::io_context& io_context, short port)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/handler_tracking/async_tcp_echo_server.cpp:123:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/handler_tracking/custom_tracking.hpp:85:  static void creation(boost::asio::execution_context& /*ctx*/,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/handler_tracking/custom_tracking.hpp:154:  static void operation(boost::asio::execution_context& /*ctx*/,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/handler_tracking/custom_tracking.hpp:161:  static void reactor_registration(boost::asio::execution_context& context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/handler_tracking/custom_tracking.hpp:169:  static void reactor_deregistration(boost::asio::execution_context& context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/handler_tracking/custom_tracking.hpp:177:  static void reactor_events(boost::asio::execution_context& context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/async_client.cpp:18:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/async_client.cpp:23:  client(boost::asio::io_context& io_context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/async_client.cpp:41:          boost::asio::placeholders::error,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/async_client.cpp:42:          boost::asio::placeholders::results));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/async_client.cpp:53:      boost::asio::async_connect(socket_, endpoints,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/async_client.cpp:55:            boost::asio::placeholders::error));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/async_client.cpp:68:      boost::asio::async_write(socket_, request_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/async_client.cpp:70:            boost::asio::placeholders::error));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/async_client.cpp:85:      boost::asio::async_read_until(socket_, response_, "\r\n",
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/async_client.cpp:87:            boost::asio::placeholders::error));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/async_client.cpp:120:      boost::asio::async_read_until(socket_, response_, "\r\n\r\n",
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/async_client.cpp:122:            boost::asio::placeholders::error));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/async_client.cpp:146:      boost::asio::async_read(socket_, response_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/async_client.cpp:147:          boost::asio::transfer_at_least(1),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/async_client.cpp:149:            boost::asio::placeholders::error));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/async_client.cpp:165:      boost::asio::async_read(socket_, response_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/async_client.cpp:166:          boost::asio::transfer_at_least(1),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/async_client.cpp:168:            boost::asio::placeholders::error));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/async_client.cpp:170:    else if (err != boost::asio::error::eof)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/async_client.cpp:178:  boost::asio::streambuf request_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/async_client.cpp:179:  boost::asio::streambuf response_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/async_client.cpp:194:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/sync_client.cpp:17:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/sync_client.cpp:31:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/sync_client.cpp:39:    boost::asio::connect(socket, endpoints);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/sync_client.cpp:44:    boost::asio::streambuf request;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/sync_client.cpp:52:    boost::asio::write(socket, request);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/sync_client.cpp:57:    boost::asio::streambuf response;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/sync_client.cpp:58:    boost::asio::read_until(socket, response, "\r\n");
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/sync_client.cpp:80:    boost::asio::read_until(socket, response, "\r\n\r\n");
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/sync_client.cpp:94:    while (boost::asio::read(socket, response,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/sync_client.cpp:95:          boost::asio::transfer_at_least(1), error))
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/client/sync_client.cpp:97:    if (error != boost::asio::error::eof)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/connection.cpp:19:connection::connection(boost::asio::ip::tcp::socket socket,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/connection.cpp:40:  socket_.async_read_some(boost::asio::buffer(buffer_),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/connection.cpp:64:        else if (ec != boost::asio::error::operation_aborted)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/connection.cpp:74:  boost::asio::async_write(socket_, reply_.to_buffers(),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/connection.cpp:81:          socket_.shutdown(boost::asio::ip::tcp::socket::shutdown_both,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/connection.cpp:85:        if (ec != boost::asio::error::operation_aborted)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/connection.hpp:36:  explicit connection(boost::asio::ip::tcp::socket socket,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/connection.hpp:53:  boost::asio::ip::tcp::socket socket_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:52:boost::asio::const_buffer to_buffer(reply::status_type status)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:57:    return boost::asio::buffer(ok);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:59:    return boost::asio::buffer(created);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:61:    return boost::asio::buffer(accepted);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:63:    return boost::asio::buffer(no_content);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:65:    return boost::asio::buffer(multiple_choices);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:67:    return boost::asio::buffer(moved_permanently);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:69:    return boost::asio::buffer(moved_temporarily);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:71:    return boost::asio::buffer(not_modified);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:73:    return boost::asio::buffer(bad_request);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:75:    return boost::asio::buffer(unauthorized);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:77:    return boost::asio::buffer(forbidden);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:79:    return boost::asio::buffer(not_found);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:81:    return boost::asio::buffer(internal_server_error);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:83:    return boost::asio::buffer(not_implemented);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:85:    return boost::asio::buffer(bad_gateway);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:87:    return boost::asio::buffer(service_unavailable);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:89:    return boost::asio::buffer(internal_server_error);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:102:std::vector<boost::asio::const_buffer> reply::to_buffers()
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:104:  std::vector<boost::asio::const_buffer> buffers;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:109:    buffers.push_back(boost::asio::buffer(h.name));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:110:    buffers.push_back(boost::asio::buffer(misc_strings::name_value_separator));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:111:    buffers.push_back(boost::asio::buffer(h.value));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:112:    buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:114:  buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:115:  buffers.push_back(boost::asio::buffer(content));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/reply.hpp:55:  std::vector<boost::asio::const_buffer> to_buffers();
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/server.cpp:38:  boost::asio::ip::tcp::resolver resolver(io_context_);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/server.cpp:39:  boost::asio::ip::tcp::endpoint endpoint =
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/server.cpp:42:  acceptor_.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/server.cpp:61:      [this](boost::system::error_code ec, boost::asio::ip::tcp::socket socket)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/server.hpp:46:  boost::asio::io_context io_context_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/server.hpp:49:  boost::asio::signal_set signals_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server/server.hpp:52:  boost::asio::ip::tcp::acceptor acceptor_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/connection.cpp:18:connection::connection(boost::asio::ip::tcp::socket socket,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/connection.cpp:33:  socket_.async_read_some(boost::asio::buffer(buffer_),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/connection.cpp:69:  boost::asio::async_write(socket_, reply_.to_buffers(),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/connection.cpp:76:          socket_.shutdown(boost::asio::ip::tcp::socket::shutdown_both,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/connection.hpp:34:  explicit connection(boost::asio::ip::tcp::socket socket,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/connection.hpp:48:  boost::asio::ip::tcp::socket socket_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/io_context_pool.cpp:28:    io_context_ptr io_context(new boost::asio::io_context);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/io_context_pool.cpp:30:    work_.push_back(boost::asio::make_work_guard(*io_context));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/io_context_pool.cpp:53:boost::asio::io_context& io_context_pool::get_io_context()
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/io_context_pool.cpp:56:  boost::asio::io_context& io_context = *io_contexts_[next_io_context_];
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/io_context_pool.hpp:36:  boost::asio::io_context& get_io_context();
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/io_context_pool.hpp:42:  typedef std::shared_ptr<boost::asio::io_context> io_context_ptr;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/io_context_pool.hpp:43:  typedef boost::asio::executor_work_guard<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/io_context_pool.hpp:44:    boost::asio::io_context::executor_type> io_context_work;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:52:boost::asio::const_buffer to_buffer(reply::status_type status)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:57:    return boost::asio::buffer(ok);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:59:    return boost::asio::buffer(created);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:61:    return boost::asio::buffer(accepted);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:63:    return boost::asio::buffer(no_content);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:65:    return boost::asio::buffer(multiple_choices);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:67:    return boost::asio::buffer(moved_permanently);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:69:    return boost::asio::buffer(moved_temporarily);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:71:    return boost::asio::buffer(not_modified);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:73:    return boost::asio::buffer(bad_request);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:75:    return boost::asio::buffer(unauthorized);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:77:    return boost::asio::buffer(forbidden);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:79:    return boost::asio::buffer(not_found);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:81:    return boost::asio::buffer(internal_server_error);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:83:    return boost::asio::buffer(not_implemented);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:85:    return boost::asio::buffer(bad_gateway);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:87:    return boost::asio::buffer(service_unavailable);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:89:    return boost::asio::buffer(internal_server_error);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:102:std::vector<boost::asio::const_buffer> reply::to_buffers()
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:104:  std::vector<boost::asio::const_buffer> buffers;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:109:    buffers.push_back(boost::asio::buffer(h.name));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:110:    buffers.push_back(boost::asio::buffer(misc_strings::name_value_separator));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:111:    buffers.push_back(boost::asio::buffer(h.value));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:112:    buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:114:  buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.cpp:115:  buffers.push_back(boost::asio::buffer(content));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/reply.hpp:55:  std::vector<boost::asio::const_buffer> to_buffers();
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/server.cpp:38:  boost::asio::ip::tcp::resolver resolver(acceptor_.get_executor());
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/server.cpp:39:  boost::asio::ip::tcp::endpoint endpoint =
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/server.cpp:42:  acceptor_.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/server.cpp:57:      [this](boost::system::error_code ec, boost::asio::ip::tcp::socket socket)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/server.hpp:48:  boost::asio::signal_set signals_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server2/server.hpp:51:  boost::asio::ip::tcp::acceptor acceptor_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/connection.cpp:18:connection::connection(boost::asio::ip::tcp::socket socket,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/connection.cpp:33:  socket_.async_read_some(boost::asio::buffer(buffer_),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/connection.cpp:69:  boost::asio::async_write(socket_, reply_.to_buffers(),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/connection.cpp:76:          socket_.shutdown(boost::asio::ip::tcp::socket::shutdown_both,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/connection.hpp:34:  explicit connection(boost::asio::ip::tcp::socket socket,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/connection.hpp:48:  boost::asio::ip::tcp::socket socket_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:52:boost::asio::const_buffer to_buffer(reply::status_type status)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:57:    return boost::asio::buffer(ok);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:59:    return boost::asio::buffer(created);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:61:    return boost::asio::buffer(accepted);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:63:    return boost::asio::buffer(no_content);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:65:    return boost::asio::buffer(multiple_choices);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:67:    return boost::asio::buffer(moved_permanently);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:69:    return boost::asio::buffer(moved_temporarily);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:71:    return boost::asio::buffer(not_modified);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:73:    return boost::asio::buffer(bad_request);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:75:    return boost::asio::buffer(unauthorized);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:77:    return boost::asio::buffer(forbidden);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:79:    return boost::asio::buffer(not_found);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:81:    return boost::asio::buffer(internal_server_error);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:83:    return boost::asio::buffer(not_implemented);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:85:    return boost::asio::buffer(bad_gateway);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:87:    return boost::asio::buffer(service_unavailable);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:89:    return boost::asio::buffer(internal_server_error);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:102:std::vector<boost::asio::const_buffer> reply::to_buffers()
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:104:  std::vector<boost::asio::const_buffer> buffers;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:109:    buffers.push_back(boost::asio::buffer(h.name));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:110:    buffers.push_back(boost::asio::buffer(misc_strings::name_value_separator));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:111:    buffers.push_back(boost::asio::buffer(h.value));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:112:    buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:114:  buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.cpp:115:  buffers.push_back(boost::asio::buffer(content));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/reply.hpp:55:  std::vector<boost::asio::const_buffer> to_buffers();
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/server.cpp:40:  boost::asio::ip::tcp::resolver resolver(io_context_);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/server.cpp:41:  boost::asio::ip::tcp::endpoint endpoint =
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/server.cpp:44:  acceptor_.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/server.cpp:67:  acceptor_.async_accept(boost::asio::make_strand(io_context_),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/server.cpp:68:      [this](boost::system::error_code ec, boost::asio::ip::tcp::socket socket)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/server.hpp:47:  boost::asio::io_context io_context_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/server.hpp:50:  boost::asio::signal_set signals_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server3/server.hpp:53:  boost::asio::ip::tcp::acceptor acceptor_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/main.cpp:32:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/main.cpp:39:    boost::asio::signal_set signals(io_context);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:52:boost::asio::const_buffer to_buffer(reply::status_type status)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:57:    return boost::asio::buffer(ok);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:59:    return boost::asio::buffer(created);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:61:    return boost::asio::buffer(accepted);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:63:    return boost::asio::buffer(no_content);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:65:    return boost::asio::buffer(multiple_choices);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:67:    return boost::asio::buffer(moved_permanently);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:69:    return boost::asio::buffer(moved_temporarily);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:71:    return boost::asio::buffer(not_modified);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:73:    return boost::asio::buffer(bad_request);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:75:    return boost::asio::buffer(unauthorized);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:77:    return boost::asio::buffer(forbidden);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:79:    return boost::asio::buffer(not_found);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:81:    return boost::asio::buffer(internal_server_error);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:83:    return boost::asio::buffer(not_implemented);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:85:    return boost::asio::buffer(bad_gateway);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:87:    return boost::asio::buffer(service_unavailable);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:89:    return boost::asio::buffer(internal_server_error);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:102:std::vector<boost::asio::const_buffer> reply::to_buffers()
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:104:  std::vector<boost::asio::const_buffer> buffers;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:109:    buffers.push_back(boost::asio::buffer(h.name));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:110:    buffers.push_back(boost::asio::buffer(misc_strings::name_value_separator));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:111:    buffers.push_back(boost::asio::buffer(h.value));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:112:    buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:114:  buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.cpp:115:  buffers.push_back(boost::asio::buffer(content));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/reply.hpp:55:  std::vector<boost::asio::const_buffer> to_buffers();
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/server.cpp:18:server::server(boost::asio::io_context& io_context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/server.cpp:24:  boost::asio::ip::tcp::endpoint endpoint =
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/server.cpp:79:        yield socket_->async_read_some(boost::asio::buffer(*buffer_), *this);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/server.cpp:105:      yield boost::asio::async_write(*socket_, reply_->to_buffers(), *this);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/server.hpp:28:class server : boost::asio::coroutine
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/server.hpp:33:  explicit server(boost::asio::io_context& io_context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/http/server4/server.hpp:43:  typedef boost::asio::ip::tcp tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/icmp/ipv4_header.hpp:68:  boost::asio::ip::address_v4 source_address() const
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/icmp/ipv4_header.hpp:70:    boost::asio::ip::address_v4::bytes_type bytes
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/icmp/ipv4_header.hpp:72:    return boost::asio::ip::address_v4(bytes);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/icmp/ipv4_header.hpp:75:  boost::asio::ip::address_v4 destination_address() const
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/icmp/ipv4_header.hpp:77:    boost::asio::ip::address_v4::bytes_type bytes
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/icmp/ipv4_header.hpp:79:    return boost::asio::ip::address_v4(bytes);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/icmp/ping.cpp:19:using boost::asio::ip::icmp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/icmp/ping.cpp:20:using boost::asio::steady_timer;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/icmp/ping.cpp:21:namespace chrono = boost::asio::chrono;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/icmp/ping.cpp:26:  pinger(boost::asio::io_context& io_context, const char* destination)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/icmp/ping.cpp:50:    boost::asio::streambuf request_buffer;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/icmp/ping.cpp:137:  boost::asio::streambuf reply_buffer_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/icmp/ping.cpp:154:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/invocation/prioritised_handlers.cpp:16:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/invocation/prioritised_handlers.cpp:18:class handler_priority_queue : public boost::asio::execution_context
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/invocation/prioritised_handlers.cpp:90:  boost::asio::executor_binder<Handler, executor>
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/invocation/prioritised_handlers.cpp:93:    return boost::asio::bind_executor(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/invocation/prioritised_handlers.cpp:171:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/invocation/prioritised_handlers.cpp:176:  boost::asio::post(io_context, pri_queue.wrap(0, low_priority_handler()));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/invocation/prioritised_handlers.cpp:179:  tcp::endpoint endpoint(boost::asio::ip::address_v4::loopback(), 0);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/invocation/prioritised_handlers.cpp:187:  boost::asio::steady_timer timer(io_context);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/invocation/prioritised_handlers.cpp:188:  timer.expires_at(boost::asio::steady_timer::clock_type::time_point::min());
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/iostreams/daytime_client.cpp:15:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/iostreams/daytime_server.cpp:16:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/iostreams/daytime_server.cpp:29:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/iostreams/http_client.cpp:17:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/iostreams/http_client.cpp:31:    boost::asio::ip::tcp::iostream s;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/connect_pair.cpp:20:using boost::asio::local::stream_protocol;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/connect_pair.cpp:34:    socket_.async_read_some(boost::asio::buffer(data_),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/connect_pair.cpp:55:    boost::asio::async_write(socket_, boost::asio::buffer(data_, size),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/connect_pair.cpp:78:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/connect_pair.cpp:83:    boost::asio::local::connect_pair(socket, filter_socket);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/connect_pair.cpp:109:      boost::asio::write(socket, boost::asio::buffer(request));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/connect_pair.cpp:113:      boost::asio::read(socket, boost::asio::buffer(reply));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/fd_passing_stream_client.cpp:26:using boost::asio::local::stream_protocol;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/fd_passing_stream_client.cpp:40:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/fd_passing_stream_client.cpp:49:    boost::asio::write(s, boost::asio::buffer(request, request_length));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/fd_passing_stream_server.cpp:25:using boost::asio::local::stream_protocol;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/fd_passing_stream_server.cpp:45:    socket_.async_read_some(boost::asio::buffer(data_),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/fd_passing_stream_server.cpp:108:  server(boost::asio::io_context& io_context, const std::string& file)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/fd_passing_stream_server.cpp:143:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/iostream_client.cpp:17:using boost::asio::local::stream_protocol;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/stream_client.cpp:18:using boost::asio::local::stream_protocol;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/stream_client.cpp:32:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/stream_client.cpp:41:    boost::asio::write(s, boost::asio::buffer(request, request_length));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/stream_client.cpp:44:    size_t reply_length = boost::asio::read(s,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/stream_client.cpp:45:        boost::asio::buffer(reply, request_length));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/stream_server.cpp:19:using boost::asio::local::stream_protocol;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/stream_server.cpp:39:    socket_.async_read_some(boost::asio::buffer(data_),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/stream_server.cpp:50:    boost::asio::async_write(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/stream_server.cpp:51:        boost::asio::buffer(data_, length),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/stream_server.cpp:69:  server(boost::asio::io_context& io_context, const std::string& file)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/local/stream_server.cpp:104:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/multicast/receiver.cpp:21:  receiver(boost::asio::io_context& io_context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/multicast/receiver.cpp:22:      const boost::asio::ip::address& listen_address,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/multicast/receiver.cpp:23:      const boost::asio::ip::address& multicast_address)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/multicast/receiver.cpp:27:    boost::asio::ip::udp::endpoint listen_endpoint(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/multicast/receiver.cpp:30:    socket_.set_option(boost::asio::ip::udp::socket::reuse_address(true));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/multicast/receiver.cpp:35:        boost::asio::ip::multicast::join_group(multicast_address));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/multicast/receiver.cpp:44:        boost::asio::buffer(data_), sender_endpoint_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/multicast/receiver.cpp:57:  boost::asio::ip::udp::socket socket_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/multicast/receiver.cpp:58:  boost::asio::ip::udp::endpoint sender_endpoint_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/multicast/receiver.cpp:76:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/multicast/receiver.cpp:78:        boost::asio::ip::make_address(argv[1]),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/multicast/receiver.cpp:79:        boost::asio::ip::make_address(argv[2]));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/multicast/sender.cpp:22:  sender(boost::asio::io_context& io_context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/multicast/sender.cpp:23:      const boost::asio::ip::address& multicast_address)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/multicast/sender.cpp:40:        boost::asio::buffer(message_), endpoint_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/multicast/sender.cpp:60:  boost::asio::ip::udp::endpoint endpoint_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/multicast/sender.cpp:61:  boost::asio::ip::udp::socket socket_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/multicast/sender.cpp:62:  boost::asio::steady_timer timer_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/multicast/sender.cpp:81:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/multicast/sender.cpp:82:    sender s(io_context, boost::asio::ip::make_address(argv[1]));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/nonblocking/third_party_lib.cpp:16:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/nonblocking/third_party_lib.cpp:42:    if (std::size_t len = socket_.read_some(boost::asio::buffer(data_), ec))
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/nonblocking/third_party_lib.cpp:44:      write_buffer_ = boost::asio::buffer(data_, len);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/nonblocking/third_party_lib.cpp:60:          boost::asio::buffer(write_buffer_), ec))
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/nonblocking/third_party_lib.cpp:63:      state_ = boost::asio::buffer_size(write_buffer_) > 0 ? writing : reading;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/nonblocking/third_party_lib.cpp:71:  boost::asio::const_buffer write_buffer_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/nonblocking/third_party_lib.cpp:115:            if (!ec || ec == boost::asio::error::would_block)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/nonblocking/third_party_lib.cpp:143:            if (!ec || ec == boost::asio::error::would_block)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/nonblocking/third_party_lib.cpp:166:  server(boost::asio::io_context& io_context, unsigned short port)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/nonblocking/third_party_lib.cpp:200:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_1.cpp:22:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_1.cpp:42:  // However, when the completion token is boost::asio::yield_context (used for
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_1.cpp:44:  // completion token is boost::asio::use_future it would be std::future<std::size_t>.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_1.cpp:45:  // When the completion token is boost::asio::deferred, the return type differs for
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_1.cpp:51:      boost::asio::async_write(socket,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_1.cpp:52:        boost::asio::buffer(message, std::strlen(message)),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_1.cpp:59:  return boost::asio::async_write(socket,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_1.cpp:60:      boost::asio::buffer(message, std::strlen(message)),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_1.cpp:68:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_1.cpp:94:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_1.cpp:104:      "Testing deferred\r\n", boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_1.cpp:127:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_1.cpp:136:      socket, "Testing future\r\n", boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:22:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:24:// NOTE: This example requires the new boost::asio::async_initiate function. For
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:74:          boost::asio::buffer(message, std::strlen(message)),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:81:      return boost::asio::async_write(socket,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:82:          boost::asio::buffer(message, std::strlen(message)),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:100:  // However, when the completion token is boost::asio::yield_context (used for
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:102:  // completion token is boost::asio::use_future it would be std::future<std::size_t>.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:103:  // When the completion token is boost::asio::deferred, the return type differs for
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:106:  // In C++11 we deduce the type from the call to boost::asio::async_initiate.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:108:      boost::asio::async_initiate<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:113:  // The boost::asio::async_initiate function takes:
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:128:  return boost::asio::async_initiate<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:138:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:164:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:174:      "Testing deferred\r\n", false, boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:197:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:206:      socket, "Testing future\r\n", false, boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:24:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:26:// NOTE: This example requires the new boost::asio::async_initiate function. For
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:83:    auto executor = boost::asio::get_associated_executor(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:87:    // using the boost::asio::bind_executor function.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:88:    boost::asio::async_write(socket,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:89:        boost::asio::buffer(message, std::strlen(message)),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:90:        boost::asio::bind_executor(executor,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:107:  // void. In this example, when the completion token is boost::asio::yield_context
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:110:  // completion token is boost::asio::use_future it would be std::future<void>. When
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:111:  // the completion token is boost::asio::deferred, the return type differs for each
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:114:  // In C++11 we deduce the type from the call to boost::asio::async_initiate.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:116:      boost::asio::async_initiate<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:121:  // The boost::asio::async_initiate function takes:
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:136:  return boost::asio::async_initiate<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:146:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:172:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:182:      "Testing deferred\r\n", boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:205:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:214:      socket, "Testing future\r\n", boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:24:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:26:// NOTE: This example requires the new boost::asio::async_initiate function. For
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:88:    auto executor = boost::asio::get_associated_executor(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:92:    // using the boost::asio::bind_executor function.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:96:      boost::asio::post(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:97:          boost::asio::bind_executor(executor,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:99:              boost::asio::error::invalid_argument)));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:103:      boost::asio::async_write(socket,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:104:          boost::asio::buffer(message, length),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:105:          boost::asio::bind_executor(executor,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:123:  // void. In this example, when the completion token is boost::asio::yield_context
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:126:  // completion token is boost::asio::use_future it would be std::future<void>. When
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:127:  // the completion token is boost::asio::deferred, the return type differs for each
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:130:  // In C++11 we deduce the type from the call to boost::asio::async_initiate.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:132:      boost::asio::async_initiate<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:137:  // The boost::asio::async_initiate function takes:
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:152:  return boost::asio::async_initiate<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:162:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:188:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:197:  auto op = async_write_message(socket, "", boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:220:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:229:      socket, "", boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:24:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:26:// NOTE: This example requires the new boost::asio::async_initiate function. For
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:106:      using executor_type = boost::asio::associated_executor_t<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:112:        return boost::asio::get_associated_executor(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:122:      using allocator_type = boost::asio::associated_allocator_t<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:128:        return boost::asio::get_associated_allocator(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:135:    auto encoded_message_buffer = boost::asio::buffer(*encoded_message);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:136:    boost::asio::async_write(socket, encoded_message_buffer,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:153:  // void. In this example, when the completion token is boost::asio::yield_context
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:156:  // completion token is boost::asio::use_future it would be std::future<void>. When
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:157:  // the completion token is boost::asio::deferred, the return type differs for each
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:160:  // In C++11 we deduce the type from the call to boost::asio::async_initiate.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:162:      boost::asio::async_initiate<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:173:  // The boost::asio::async_initiate function takes:
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:188:  return boost::asio::async_initiate<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:198:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:224:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:234:      std::string("abcdef"), boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:257:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:266:      socket, 654.321, boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:26:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:28:// NOTE: This example requires the new boost::asio::async_initiate function. For
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:71:      std::unique_ptr<boost::asio::steady_timer> delay_timer) const
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:91:      std::unique_ptr<boost::asio::steady_timer> delay_timer_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:101:      boost::asio::executor_work_guard<tcp::socket::executor_type> io_work_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:129:            boost::asio::async_write(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:130:                boost::asio::buffer(*encoded_message_), std::move(*this));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:157:      using executor_type = boost::asio::associated_executor_t<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:163:        return boost::asio::get_associated_executor(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:173:      using allocator_type = boost::asio::associated_allocator_t<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:179:        return boost::asio::get_associated_allocator(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:186:    auto encoded_message_buffer = boost::asio::buffer(*encoded_message);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:187:    boost::asio::async_write(socket, encoded_message_buffer,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:192:          boost::asio::make_work_guard(socket.get_executor()),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:209:  // void. In this example, when the completion token is boost::asio::yield_context
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:212:  // completion token is boost::asio::use_future it would be std::future<void>. When
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:213:  // the completion token is boost::asio::deferred, the return type differs for each
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:216:  // In C++11 we deduce the type from the call to boost::asio::async_initiate.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:218:      boost::asio::async_initiate<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:222:          std::declval<std::unique_ptr<boost::asio::steady_timer>>()))
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:231:  std::unique_ptr<boost::asio::steady_timer> delay_timer(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:232:      new boost::asio::steady_timer(socket.get_executor()));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:234:  // The boost::asio::async_initiate function takes:
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:249:  return boost::asio::async_initiate<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:259:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:285:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:295:      "Testing deferred\r\n", 5, boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:318:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_6.cpp:327:      socket, "Testing future\r\n", 5, boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_7.cpp:26:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_7.cpp:28:// NOTE: This example requires the new boost::asio::async_compose function. For
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_7.cpp:58:  std::unique_ptr<boost::asio::steady_timer> delay_timer_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_7.cpp:66:  // completion handler is provided for us by the boost::asio::async_compose
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_7.cpp:98:        boost::asio::async_write(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_7.cpp:99:            boost::asio::buffer(*encoded_message_), std::move(self));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_7.cpp:129:  // void. In this example, when the completion token is boost::asio::yield_context
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_7.cpp:132:  // completion token is boost::asio::use_future it would be std::future<void>. When
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_7.cpp:133:  // the completion token is boost::asio::deferred, the return type differs for each
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_7.cpp:136:  // In C++11 we deduce the type from the call to boost::asio::async_compose.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_7.cpp:138:      boost::asio::async_compose<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_7.cpp:150:  std::unique_ptr<boost::asio::steady_timer> delay_timer(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_7.cpp:151:      new boost::asio::steady_timer(socket.get_executor()));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_7.cpp:153:  // The boost::asio::async_compose function takes:
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_7.cpp:164:  return boost::asio::async_compose<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_7.cpp:177:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_7.cpp:203:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_7.cpp:213:      "Testing deferred\r\n", 5, boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_7.cpp:236:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_7.cpp:245:      socket, "Testing future\r\n", 5, boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_8.cpp:26:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_8.cpp:28:// NOTE: This example requires the new boost::asio::async_compose function. For
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_8.cpp:61:  std::unique_ptr<boost::asio::steady_timer> delay_timer_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_8.cpp:64:  boost::asio::coroutine coro_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_8.cpp:68:  // completion handler is provided for us by the boost::asio::async_compose
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_8.cpp:94:        yield boost::asio::async_write(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_8.cpp:95:            boost::asio::buffer(*encoded_message_), std::move(self));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_8.cpp:125:  // void. In this example, when the completion token is boost::asio::yield_context
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_8.cpp:128:  // completion token is boost::asio::use_future it would be std::future<void>. When
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_8.cpp:129:  // the completion token is boost::asio::deferred, the return type differs for each
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_8.cpp:132:  // In C++11 we deduce the type from the call to boost::asio::async_compose.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_8.cpp:134:      boost::asio::async_compose<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_8.cpp:146:  std::unique_ptr<boost::asio::steady_timer> delay_timer(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_8.cpp:147:      new boost::asio::steady_timer(socket.get_executor()));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_8.cpp:149:  // The boost::asio::async_compose function takes:
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_8.cpp:160:  return boost::asio::async_compose<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_8.cpp:164:        std::move(delay_timer), boost::asio::coroutine()},
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_8.cpp:172:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_8.cpp:198:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_8.cpp:208:      "Testing deferred\r\n", 5, boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_8.cpp:231:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/operations/composed_8.cpp:240:      socket, "Testing future\r\n", 5, boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/ranged_wait_for_all.cpp:20:  boost::asio::io_context ctx;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/ranged_wait_for_all.cpp:22:  boost::asio::posix::stream_descriptor out(ctx, ::dup(STDOUT_FILENO));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/ranged_wait_for_all.cpp:23:  boost::asio::posix::stream_descriptor err(ctx, ::dup(STDERR_FILENO));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/ranged_wait_for_all.cpp:26:      out.async_write_some(boost::asio::buffer("", 0))
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/ranged_wait_for_all.cpp:32:      out.async_write_some(boost::asio::buffer("first\r\n", 7))
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/ranged_wait_for_all.cpp:36:      err.async_write_some(boost::asio::buffer("second\r\n", 8))
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/ranged_wait_for_all.cpp:39:  boost::asio::experimental::make_parallel_group(ops).async_wait(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/ranged_wait_for_all.cpp:40:      boost::asio::experimental::wait_for_all(),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/wait_for_all.cpp:19:  boost::asio::io_context ctx;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/wait_for_all.cpp:21:  boost::asio::posix::stream_descriptor in(ctx, ::dup(STDIN_FILENO));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/wait_for_all.cpp:22:  boost::asio::steady_timer timer(ctx, std::chrono::seconds(5));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/wait_for_all.cpp:26:  boost::asio::experimental::make_parallel_group(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/wait_for_all.cpp:27:      in.async_read_some(boost::asio::buffer(data)),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/wait_for_all.cpp:30:      boost::asio::experimental::wait_for_all(),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/wait_for_one.cpp:19:  boost::asio::io_context ctx;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/wait_for_one.cpp:21:  boost::asio::posix::stream_descriptor in(ctx, ::dup(STDIN_FILENO));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/wait_for_one.cpp:22:  boost::asio::steady_timer timer(ctx, std::chrono::seconds(5));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/wait_for_one.cpp:26:  boost::asio::experimental::make_parallel_group(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/wait_for_one.cpp:27:      in.async_read_some(boost::asio::buffer(data)),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/wait_for_one.cpp:30:      boost::asio::experimental::wait_for_one(),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/wait_for_one_error.cpp:19:  boost::asio::io_context ctx;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/wait_for_one_error.cpp:21:  boost::asio::posix::stream_descriptor in(ctx, ::dup(STDIN_FILENO));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/wait_for_one_error.cpp:22:  boost::asio::steady_timer timer(ctx, std::chrono::seconds(5));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/wait_for_one_error.cpp:26:  boost::asio::experimental::make_parallel_group(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/wait_for_one_error.cpp:27:      in.async_read_some(boost::asio::buffer(data)),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/wait_for_one_error.cpp:30:      boost::asio::experimental::wait_for_one_error(),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/wait_for_one_success.cpp:19:  boost::asio::io_context ctx;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/wait_for_one_success.cpp:21:  boost::asio::posix::stream_descriptor in(ctx, ::dup(STDIN_FILENO));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/wait_for_one_success.cpp:22:  boost::asio::steady_timer timer(ctx, std::chrono::seconds(5));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/wait_for_one_success.cpp:26:  boost::asio::experimental::make_parallel_group(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/wait_for_one_success.cpp:27:      in.async_read_some(boost::asio::buffer(data)),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/parallel_group/wait_for_one_success.cpp:30:      boost::asio::experimental::wait_for_one_success(),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/client.cpp:21:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/client.cpp:22:using boost::asio::ip::udp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/client.cpp:37:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/client.cpp:55:    boost::asio::write(control_socket, start.to_buffers());
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/client.cpp:88:      boost::asio::async_write(control_socket, change.to_buffers(),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/protocol.hpp:72:  std::array<boost::asio::mutable_buffer, 1> to_buffers()
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/protocol.hpp:74:    std::array<boost::asio::mutable_buffer, 1> buffers
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/protocol.hpp:75:      = { { boost::asio::buffer(data_) } };
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/protocol.hpp:137:  std::array<boost::asio::mutable_buffer, 1> to_buffers()
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/protocol.hpp:139:    std::array<boost::asio::mutable_buffer, 1> buffers
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/protocol.hpp:140:      = { { boost::asio::buffer(data_) } };
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/server.cpp:21:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/server.cpp:22:using boost::asio::ip::udp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/server.cpp:25:typedef std::shared_ptr<boost::asio::steady_timer> timer_ptr;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/server.cpp:32:  server(boost::asio::io_context& io_context, unsigned short port)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/server.cpp:42:          boost::asio::placeholders::error, new_socket));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/server.cpp:45:    timer_.expires_after(boost::asio::chrono::milliseconds(100));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/server.cpp:56:      boost::asio::async_read(*socket, request->to_buffers(),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/server.cpp:58:            boost::asio::placeholders::error, socket, request));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/server.cpp:65:          boost::asio::placeholders::error, new_socket));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/server.cpp:76:          new boost::asio::steady_timer(acceptor_.get_executor()));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/server.cpp:77:      delay_timer->expires_after(boost::asio::chrono::seconds(2));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/server.cpp:113:    boost::asio::async_read(*socket, request->to_buffers(),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/server.cpp:115:          boost::asio::placeholders::error, socket, request));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/server.cpp:143:    timer_.expires_after(boost::asio::chrono::milliseconds(100));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/server.cpp:152:  boost::asio::steady_timer timer_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/porthopper/server.cpp:174:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/client.cpp:26:  client(boost::asio::io_context& io_context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/client.cpp:31:    boost::asio::ip::tcp::resolver resolver(io_context);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/client.cpp:32:    boost::asio::ip::tcp::resolver::query query(host, service);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/client.cpp:33:    boost::asio::ip::tcp::resolver::iterator endpoint_iterator =
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/client.cpp:37:    boost::asio::async_connect(connection_.socket(), endpoint_iterator,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/client.cpp:39:          boost::asio::placeholders::error));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/client.cpp:52:            boost::asio::placeholders::error));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/client.cpp:115:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/connection.hpp:38:  connection(const boost::asio::any_io_executor& ex)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/connection.hpp:45:  boost::asio::ip::tcp::socket& socket()
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/connection.hpp:67:      boost::system::error_code error(boost::asio::error::invalid_argument);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/connection.hpp:68:      boost::asio::post(socket_.get_executor(), std::bind(handler, error));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/connection.hpp:75:    std::vector<boost::asio::const_buffer> buffers;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/connection.hpp:76:    buffers.push_back(boost::asio::buffer(outbound_header_));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/connection.hpp:77:    buffers.push_back(boost::asio::buffer(outbound_data_));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/connection.hpp:78:    boost::asio::async_write(socket_, buffers, handler);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/connection.hpp:88:    boost::asio::async_read(socket_, boost::asio::buffer(inbound_header_),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/connection.hpp:90:          this, boost::asio::placeholders::error, std::ref(t),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/connection.hpp:111:        boost::system::error_code error(boost::asio::error::invalid_argument);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/connection.hpp:122:      boost::asio::async_read(socket_, boost::asio::buffer(inbound_data_),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/connection.hpp:124:          boost::asio::placeholders::error, std::ref(t), handler));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/connection.hpp:150:        boost::system::error_code error(boost::asio::error::invalid_argument);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/connection.hpp:162:  boost::asio::ip::tcp::socket socket_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/server.cpp:27:  server(boost::asio::io_context& io_context, unsigned short port)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/server.cpp:29:        boost::asio::ip::tcp::endpoint(boost::asio::ip::tcp::v4(), port))
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/server.cpp:60:          boost::asio::placeholders::error, new_conn));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/server.cpp:73:            boost::asio::placeholders::error, conn));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/server.cpp:80:          boost::asio::placeholders::error, new_conn));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/server.cpp:92:  boost::asio::ip::tcp::acceptor acceptor_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/serialization/server.cpp:112:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/basic_logger.hpp:39:  explicit basic_logger(boost::asio::execution_context& context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/basic_logger.hpp:41:    : service_(boost::asio::use_service<Service>(context)),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/daytime_client.cpp:16:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/daytime_client.cpp:27:    s->async_read_some(boost::asio::buffer(read_buffer),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/daytime_client.cpp:28:        std::bind(read_handler, boost::asio::placeholders::error,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/daytime_client.cpp:29:          boost::asio::placeholders::bytes_transferred, s));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/daytime_client.cpp:33:    boost::asio::execution_context& context = boost::asio::query(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/daytime_client.cpp:34:        s->get_executor(), boost::asio::execution::context);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/daytime_client.cpp:45:  boost::asio::execution_context& context = boost::asio::query(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/daytime_client.cpp:46:      s->get_executor(), boost::asio::execution::context);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/daytime_client.cpp:53:    s->async_read_some(boost::asio::buffer(read_buffer),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/daytime_client.cpp:54:        std::bind(read_handler, boost::asio::placeholders::error,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/daytime_client.cpp:55:          boost::asio::placeholders::bytes_transferred, s));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/daytime_client.cpp:75:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/daytime_client.cpp:88:    boost::asio::async_connect(socket, endpoints,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/daytime_client.cpp:90:          boost::asio::placeholders::error, &socket));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/logger_service.hpp:25:  : public boost::asio::execution_context::service
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/logger_service.hpp:42:  logger_service(boost::asio::execution_context& context)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/logger_service.hpp:43:    : boost::asio::execution_context::service(context),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/logger_service.hpp:45:      work_(boost::asio::make_work_guard(work_io_context_)),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/logger_service.hpp:94:    boost::asio::post(work_io_context_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/logger_service.hpp:106:    boost::asio::post(work_io_context_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/logger_service.hpp:128:  boost::asio::io_context work_io_context_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/logger_service.hpp:133:  boost::asio::executor_work_guard<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/services/logger_service.hpp:134:      boost::asio::io_context::executor_type> work_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:32:  request(command_type cmd, const boost::asio::ip::tcp::endpoint& endpoint,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:40:    if (endpoint.protocol() != boost::asio::ip::tcp::v4())
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:43:          boost::asio::error::address_family_not_supported);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:55:  std::array<boost::asio::const_buffer, 7> buffers() const
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:60:        boost::asio::buffer(&version_, 1),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:61:        boost::asio::buffer(&command_, 1),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:62:        boost::asio::buffer(&port_high_byte_, 1),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:63:        boost::asio::buffer(&port_low_byte_, 1),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:64:        boost::asio::buffer(address_),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:65:        boost::asio::buffer(user_id_),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:66:        boost::asio::buffer(&null_byte_, 1)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:76:  boost::asio::ip::address_v4::bytes_type address_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:98:  std::array<boost::asio::mutable_buffer, 5> buffers()
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:103:        boost::asio::buffer(&null_byte_, 1),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:104:        boost::asio::buffer(&status_, 1),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:105:        boost::asio::buffer(&port_high_byte_, 1),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:106:        boost::asio::buffer(&port_low_byte_, 1),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:107:        boost::asio::buffer(address_)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:122:  boost::asio::ip::tcp::endpoint endpoint() const
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:128:    boost::asio::ip::address_v4 address(address_);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:130:    return boost::asio::ip::tcp::endpoint(address, port);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:138:  boost::asio::ip::address_v4::bytes_type address_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/sync_client.cpp:19:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/sync_client.cpp:34:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/sync_client.cpp:43:    boost::asio::connect(socket, endpoints);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/sync_client.cpp:53:    boost::asio::write(socket, socks_request.buffers());
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/sync_client.cpp:57:    boost::asio::read(socket, socks_reply.buffers());
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/sync_client.cpp:77:    boost::asio::write(socket, boost::asio::buffer(request));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/sync_client.cpp:83:          boost::asio::buffer(response), error))
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/socks4/sync_client.cpp:85:    if (error != boost::asio::error::eof)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:20:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:25:  explicit session(boost::asio::io_context& io_context, tcp::socket socket)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:35:    boost::asio::spawn(strand_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:36:        [this, self](boost::asio::yield_context yield)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:44:              std::size_t n = socket_.async_read_some(boost::asio::buffer(data), yield);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:45:              boost::asio::async_write(socket_, boost::asio::buffer(data, n), yield);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:53:        }, boost::asio::detached);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:55:    boost::asio::spawn(strand_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:56:        [this, self](boost::asio::yield_context yield)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:62:            if (timer_.expiry() <= boost::asio::steady_timer::clock_type::now())
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:65:        }, boost::asio::detached);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:70:  boost::asio::steady_timer timer_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:71:  boost::asio::strand<boost::asio::io_context::executor_type> strand_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:84:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:86:    boost::asio::spawn(io_context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:87:        [&](boost::asio::yield_context yield)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/spawn/parallel_grep.cpp:21:using boost::asio::detached;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/spawn/parallel_grep.cpp:22:using boost::asio::dispatch;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/spawn/parallel_grep.cpp:23:using boost::asio::spawn;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/spawn/parallel_grep.cpp:24:using boost::asio::strand;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/spawn/parallel_grep.cpp:25:using boost::asio::thread_pool;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/spawn/parallel_grep.cpp:26:using boost::asio::yield_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:18:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:27:  client(boost::asio::io_context& io_context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:28:      boost::asio::ssl::context& context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:32:    socket_.set_verify_mode(boost::asio::ssl::verify_peer);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:41:      boost::asio::ssl::verify_context& ctx)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:61:    boost::asio::async_connect(socket_.lowest_layer(), endpoints,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:78:    socket_.async_handshake(boost::asio::ssl::stream_base::client,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:98:    boost::asio::async_write(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:99:        boost::asio::buffer(request_, request_length),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:115:    boost::asio::async_read(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:116:        boost::asio::buffer(reply_, length),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:132:  boost::asio::ssl::stream<tcp::socket> socket_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:147:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:152:    boost::asio::ssl::context ctx(boost::asio::ssl::context::sslv23);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:17:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:22:  session(boost::asio::ssl::stream<tcp::socket> socket)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:36:    socket_.async_handshake(boost::asio::ssl::stream_base::server,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:49:    socket_.async_read_some(boost::asio::buffer(data_),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:62:    boost::asio::async_write(socket_, boost::asio::buffer(data_, length),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:73:  boost::asio::ssl::stream<tcp::socket> socket_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:80:  server(boost::asio::io_context& io_context, unsigned short port)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:82:      context_(boost::asio::ssl::context::sslv23)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:85:        boost::asio::ssl::context::default_workarounds
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:86:        | boost::asio::ssl::context::no_sslv2
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:87:        | boost::asio::ssl::context::single_dh_use);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:90:    context_.use_private_key_file("server.pem", boost::asio::ssl::context::pem);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:110:                boost::asio::ssl::stream<tcp::socket>(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:119:  boost::asio::ssl::context context_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:132:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/async_tcp_client.cpp:21:using boost::asio::steady_timer;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/async_tcp_client.cpp:22:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/async_tcp_client.cpp:89:  client(boost::asio::io_context& io_context)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/async_tcp_client.cpp:193:    boost::asio::async_read_until(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/async_tcp_client.cpp:194:        boost::asio::dynamic_buffer(input_buffer_), '\n',
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/async_tcp_client.cpp:231:    boost::asio::async_write(socket_, boost::asio::buffer("\n", 1),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/async_tcp_client.cpp:297:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_tcp_client.cpp:22:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_tcp_client.cpp:50:    boost::asio::async_connect(socket_, endpoints,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_tcp_client.cpp:73:    boost::asio::async_read_until(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_tcp_client.cpp:74:        boost::asio::dynamic_buffer(input_buffer_), '\n',
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_tcp_client.cpp:104:    boost::asio::async_write(socket_, boost::asio::buffer(data),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_tcp_client.cpp:145:  boost::asio::io_context io_context_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:23:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:25:// NOTE: This example uses the new form of the boost::asio::async_result trait.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:30:using tcp_socket = boost::asio::basic_stream_socket<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:31:    tcp, boost::asio::io_context::executor_type>;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:69:    boost::asio::io_context& io_context = boost::asio::query(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:70:        token.socket_.get_executor(), boost::asio::execution::context);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:126:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:134:    boost::asio::async_connect(socket, endpoints,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:141:    boost::asio::async_write(socket, boost::asio::buffer(msg),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:147:      std::size_t n = boost::asio::async_read_until(socket,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:148:          boost::asio::dynamic_buffer(input_buffer), '\n',
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_udp_client.cpp:18:using boost::asio::ip::udp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_udp_client.cpp:55:  std::size_t receive(const boost::asio::mutable_buffer& buffer,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_udp_client.cpp:62:    socket_.async_receive(boost::asio::buffer(buffer),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_udp_client.cpp:106:  boost::asio::io_context io_context_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_udp_client.cpp:125:        boost::asio::ip::make_address(argv[1]),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_udp_client.cpp:134:      std::size_t n = c.receive(boost::asio::buffer(data),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:26:using boost::asio::steady_timer;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:27:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:28:using boost::asio::ip::udp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:203:    boost::asio::async_read_until(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:204:        boost::asio::dynamic_buffer(input_buffer_), '\n',
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:281:    boost::asio::async_write(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:282:        boost::asio::buffer(output_queue_.front()),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:346:  udp_broadcaster(boost::asio::io_context& io_context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:358:    socket_.send(boost::asio::buffer(msg), 0, ignored_error);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:369:  server(boost::asio::io_context& io_context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:397:  boost::asio::io_context& io_context_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:416:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:421:        boost::asio::ip::make_address(argv[2]), atoi(argv[3]));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timers/time_t_timer.cpp:41:// The boost::asio::basic_waitable_timer template accepts an optional WaitTraits
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timers/time_t_timer.cpp:74:typedef boost::asio::basic_waitable_timer<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/timers/time_t_timer.cpp:81:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/line_reader.hpp:23:      boost::asio::any_completion_handler<void(boost::system::error_code, std::string)> handler) = 0;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/line_reader.hpp:40:        boost::asio::async_initiate<CompletionToken, void(boost::system::error_code, std::string)>(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/line_reader.hpp:43:    return boost::asio::async_initiate<CompletionToken, void(boost::system::error_code, std::string)>(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/main.cpp:22:class read_loop : boost::asio::coroutine
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/main.cpp:25:  read_loop(boost::asio::any_io_executor e, line_reader& r)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/main.cpp:47:  boost::asio::any_io_executor executor;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/main.cpp:56:  boost::asio::io_context ctx{1};
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/sleep.cpp:17:    boost::asio::any_completion_handler<void(boost::system::error_code)> handler,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/sleep.cpp:18:    boost::asio::any_io_executor ex, std::chrono::nanoseconds duration)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/sleep.cpp:20:  auto timer = std::make_shared<boost::asio::steady_timer>(ex, duration);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/sleep.cpp:21:  timer->async_wait(boost::asio::consign(std::move(handler), timer));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/sleep.hpp:21:    boost::asio::any_completion_handler<void(boost::system::error_code)> handler,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/sleep.hpp:22:    boost::asio::any_io_executor ex, std::chrono::nanoseconds duration);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/sleep.hpp:25:inline auto async_sleep(boost::asio::any_io_executor ex,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/sleep.hpp:28:      boost::asio::async_initiate<CompletionToken, void(boost::system::error_code)>(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/sleep.hpp:31:  return boost::asio::async_initiate<CompletionToken, void(boost::system::error_code)>(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/stdin_line_reader.cpp:16:stdin_line_reader::stdin_line_reader(boost::asio::any_io_executor ex)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/stdin_line_reader.cpp:22:    boost::asio::any_completion_handler<void(boost::system::error_code, std::string)> handler)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/stdin_line_reader.cpp:27:  boost::asio::async_read_until(stdin_, boost::asio::dynamic_buffer(buffer_), '\n',
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/stdin_line_reader.cpp:28:      boost::asio::deferred(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/stdin_line_reader.cpp:35:            return boost::asio::deferred.values(ec, std::move(result));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/stdin_line_reader.cpp:39:            return boost::asio::deferred.values(ec, std::string{});
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/stdin_line_reader.hpp:20:  explicit stdin_line_reader(boost::asio::any_io_executor ex);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/stdin_line_reader.hpp:24:      boost::asio::any_completion_handler<void(boost::system::error_code, std::string)> handler) override;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/type_erasure/stdin_line_reader.hpp:26:  boost::asio::posix::stream_descriptor stdin_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/windows/transmit_file.cpp:20:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/windows/transmit_file.cpp:21:using boost::asio::windows::overlapped_ptr;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/windows/transmit_file.cpp:22:using boost::asio::windows::random_access_handle;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/windows/transmit_file.cpp:24:typedef boost::asio::basic_stream_socket<tcp,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/windows/transmit_file.cpp:25:    boost::asio::io_context::executor_type> tcp_socket;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/windows/transmit_file.cpp:27:typedef boost::asio::basic_socket_acceptor<tcp,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/windows/transmit_file.cpp:28:    boost::asio::io_context::executor_type> tcp_acceptor;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/windows/transmit_file.cpp:50:        boost::asio::error::get_system_category());
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/windows/transmit_file.cpp:67:  static pointer create(boost::asio::io_context& io_context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/windows/transmit_file.cpp:87:            boost::asio::placeholders::error,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/windows/transmit_file.cpp:88:            boost::asio::placeholders::bytes_transferred));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/windows/transmit_file.cpp:93:  connection(boost::asio::io_context& io_context, const std::string& filename)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/windows/transmit_file.cpp:115:  server(boost::asio::io_context& io_context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/windows/transmit_file.cpp:131:          boost::asio::placeholders::error));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp11/windows/transmit_file.cpp:159:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_1.cpp:14:using boost::asio::deferred;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_1.cpp:18:  boost::asio::io_context ctx;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_1.cpp:20:  boost::asio::steady_timer timer(ctx);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_2.cpp:14:using boost::asio::deferred;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_2.cpp:18:  boost::asio::io_context ctx;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_2.cpp:20:  boost::asio::steady_timer timer(ctx);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_3.cpp:14:using boost::asio::deferred;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_3.cpp:17:auto async_wait_twice(boost::asio::steady_timer& timer, CompletionToken&& token)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_3.cpp:35:  boost::asio::io_context ctx;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_3.cpp:37:  boost::asio::steady_timer timer(ctx);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_4.cpp:14:using boost::asio::deferred;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_4.cpp:17:auto async_wait_twice(boost::asio::steady_timer& timer, CompletionToken&& token)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_4.cpp:43:  boost::asio::io_context ctx;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_4.cpp:45:  boost::asio::steady_timer timer(ctx);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_5.cpp:14:using boost::asio::deferred;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_5.cpp:17:auto async_wait_twice(boost::asio::steady_timer& timer, CompletionToken&& token)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_5.cpp:47:  boost::asio::io_context ctx;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_5.cpp:49:  boost::asio::steady_timer timer(ctx);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_6.cpp:14:using boost::asio::append;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_6.cpp:15:using boost::asio::deferred;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_6.cpp:18:auto async_wait_twice(boost::asio::steady_timer& timer, CompletionToken&& token)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_6.cpp:22:        [](boost::asio::steady_timer* timer)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_6.cpp:30:        [](boost::system::error_code ec, boost::asio::steady_timer* timer)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_6.cpp:56:  boost::asio::io_context ctx;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_6.cpp:58:  boost::asio::steady_timer timer(ctx);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_7.cpp:14:using boost::asio::append;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_7.cpp:15:using boost::asio::deferred;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_7.cpp:18:auto async_wait_twice(boost::asio::steady_timer& timer, CompletionToken&& token)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_7.cpp:22:        [](boost::asio::steady_timer* timer)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_7.cpp:29:        [](boost::system::error_code ec, boost::asio::steady_timer* timer)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_7.cpp:52:  boost::asio::io_context ctx;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/deferred/deferred_7.cpp:54:  boost::asio::steady_timer timer(ctx);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/async_tcp_echo_server.cpp:18:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/async_tcp_echo_server.cpp:38:    socket_.async_read_some(boost::asio::buffer(data_, max_length),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/async_tcp_echo_server.cpp:51:    boost::asio::async_write(socket_, boost::asio::buffer(data_, length),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/async_tcp_echo_server.cpp:69:  server(boost::asio::io_context& io_context, short port)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/async_tcp_echo_server.cpp:105:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/async_udp_echo_server.cpp:16:using boost::asio::ip::udp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/async_udp_echo_server.cpp:21:  server(boost::asio::io_context& io_context, short port)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/async_udp_echo_server.cpp:30:        boost::asio::buffer(data_, max_length), sender_endpoint_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/async_udp_echo_server.cpp:47:        boost::asio::buffer(data_, length), sender_endpoint_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/async_udp_echo_server.cpp:71:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/blocking_tcp_echo_client.cpp:16:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/blocking_tcp_echo_client.cpp:30:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/blocking_tcp_echo_client.cpp:34:    boost::asio::connect(s, resolver.resolve(argv[1], argv[2]));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/blocking_tcp_echo_client.cpp:40:    boost::asio::write(s, boost::asio::buffer(request, request_length));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/blocking_tcp_echo_client.cpp:43:    size_t reply_length = boost::asio::read(s,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/blocking_tcp_echo_client.cpp:44:        boost::asio::buffer(reply, request_length));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/blocking_tcp_echo_server.cpp:18:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/blocking_tcp_echo_server.cpp:31:      size_t length = sock.read_some(boost::asio::buffer(data), error);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/blocking_tcp_echo_server.cpp:32:      if (error == boost::asio::stream_errc::eof)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/blocking_tcp_echo_server.cpp:37:      boost::asio::write(sock, boost::asio::buffer(data, length));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/blocking_tcp_echo_server.cpp:46:void server(boost::asio::io_context& io_context, unsigned short port)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/blocking_tcp_echo_server.cpp:67:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/blocking_udp_echo_client.cpp:17:using boost::asio::ip::udp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/blocking_udp_echo_client.cpp:31:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/blocking_udp_echo_client.cpp:43:    s.send_to(boost::asio::buffer(request, request_length), endpoint);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/blocking_udp_echo_client.cpp:48:        boost::asio::buffer(reply, max_length), sender_endpoint);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/blocking_udp_echo_server.cpp:16:using boost::asio::ip::udp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/blocking_udp_echo_server.cpp:20:void server(boost::asio::io_context& io_context, unsigned short port)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/blocking_udp_echo_server.cpp:28:        boost::asio::buffer(data, max_length), sender_endpoint);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/blocking_udp_echo_server.cpp:29:    sock.send_to(boost::asio::buffer(data, length), sender_endpoint);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/echo/blocking_udp_echo_server.cpp:43:    boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/actor.cpp:13:using boost::asio::any_io_executor;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/actor.cpp:14:using boost::asio::defer;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/actor.cpp:15:using boost::asio::post;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/actor.cpp:16:using boost::asio::strand;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/actor.cpp:17:using boost::asio::system_executor;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/actor.cpp:218:using boost::asio::thread_pool;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/async_1.cpp:8:using boost::asio::bind_executor;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/async_1.cpp:9:using boost::asio::get_associated_executor;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/async_1.cpp:10:using boost::asio::static_thread_pool;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/async_1.cpp:11:namespace execution = boost::asio::execution;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/async_1.cpp:18:  auto work_ex = boost::asio::prefer(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/async_1.cpp:23:  boost::asio::require(io_ex, execution::blocking.never).execute(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/async_1.cpp:30:        boost::asio::prefer(work_ex, execution::blocking.possibly).execute(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/async_2.cpp:8:using boost::asio::bind_executor;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/async_2.cpp:9:using boost::asio::get_associated_executor;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/async_2.cpp:10:using boost::asio::static_thread_pool;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/async_2.cpp:11:namespace execution = boost::asio::execution;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/async_2.cpp:18:  auto work_ex = boost::asio::prefer(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/async_2.cpp:23:  boost::asio::require(io_ex, execution::blocking.never).execute(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/async_2.cpp:30:        boost::asio::prefer(work_ex, execution::blocking.possibly).execute(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/async_2.cpp:43:  auto io_work_ex = boost::asio::prefer(io_ex,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/async_2.cpp:47:  auto handler_work_ex = boost::asio::prefer(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/bank_account_1.cpp:5:using boost::asio::static_thread_pool;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/bank_account_1.cpp:6:namespace execution = boost::asio::execution;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/bank_account_2.cpp:5:using boost::asio::static_thread_pool;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/bank_account_2.cpp:6:namespace execution = boost::asio::execution;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/bank_account_2.cpp:19:    boost::asio::require(pool_.executor(), execution::blocking.always).execute(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/bank_account_2.cpp:28:    boost::asio::require(pool_.executor(),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/bank_account_2.cpp:40:    boost::asio::require(pool_.executor(), execution::blocking.always).execute(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/fork_join.cpp:11:using boost::asio::static_thread_pool;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/fork_join.cpp:12:namespace execution = boost::asio::execution;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/pipeline.cpp:13:using boost::asio::executor_binder;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/pipeline.cpp:14:using boost::asio::get_associated_executor;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/pipeline.cpp:15:namespace execution = boost::asio::execution;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/pipeline.cpp:172:  boost::asio::require(ex, execution::blocking.never).execute(std::move(task));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/pipeline.cpp:192:  boost::asio::require(ex, execution::blocking.never).execute(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/pipeline.cpp:219:  boost::asio::require(ex, execution::blocking.never).execute(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/pipeline.cpp:236:using boost::asio::bind_executor;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/pipeline.cpp:237:using boost::asio::static_thread_pool;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/priority_scheduler.cpp:8:namespace execution = boost::asio::execution;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/priority_scheduler.cpp:164:  auto prefer_low = boost::asio::prefer(ex, custom_props::low_priority);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/priority_scheduler.cpp:165:  auto low = boost::asio::require(ex, custom_props::low_priority);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/priority_scheduler.cpp:166:  auto med = boost::asio::require(ex, custom_props::normal_priority);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/priority_scheduler.cpp:167:  auto high = boost::asio::require(ex, custom_props::high_priority);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/priority_scheduler.cpp:178:  boost::asio::require(ex, custom_props::priority{-1}).execute([&]{ sched.stop(); });
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/executors/priority_scheduler.cpp:180:  std::cout << "polymorphic query result = " << boost::asio::query(poly_high, custom_props::priority{}) << "\n";
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/iostreams/http_client.cpp:17:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/iostreams/http_client.cpp:31:    boost::asio::ip::tcp::iostream s;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/c_callback_wrapper.cpp:47:      work_(boost::asio::make_work_guard(handler_))
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/c_callback_wrapper.cpp:62:        boost::asio::associated_allocator_t<Handler,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/c_callback_wrapper.cpp:63:          boost::asio::recycling_allocator<void>>>::template
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/c_callback_wrapper.cpp:70:    } d{boost::asio::get_associated_allocator(handler,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/c_callback_wrapper.cpp:71:          boost::asio::recycling_allocator<void>())};
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/c_callback_wrapper.cpp:98:        boost::asio::associated_allocator_t<Handler,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/c_callback_wrapper.cpp:99:          boost::asio::recycling_allocator<void>>>::template
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/c_callback_wrapper.cpp:107:    } d{boost::asio::get_associated_allocator(self->handler_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/c_callback_wrapper.cpp:108:          boost::asio::recycling_allocator<void>())};
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/c_callback_wrapper.cpp:119:    boost::asio::dispatch(state.work_.get_executor(),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/c_callback_wrapper.cpp:120:        boost::asio::bind_allocator(d.alloc,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/c_callback_wrapper.cpp:136:  boost::asio::executor_work_guard<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/c_callback_wrapper.cpp:137:    boost::asio::associated_executor_t<Handler>> work_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/c_callback_wrapper.cpp:161:  return boost::asio::async_initiate<CompletionToken, void(std::string)>(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/c_callback_wrapper.cpp:171:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/c_callback_wrapper.cpp:176:      boost::asio::bind_executor(io_context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/c_callback_wrapper.cpp:189:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/c_callback_wrapper.cpp:195:  auto op = async_read_input("Enter your name", boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/c_callback_wrapper.cpp:200:      boost::asio::bind_executor(io_context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/c_callback_wrapper.cpp:217:    async_read_input("Enter your name", boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/callback_wrapper.cpp:49:    auto work = boost::asio::make_work_guard(handler);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/callback_wrapper.cpp:61:          auto alloc = boost::asio::get_associated_allocator(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/callback_wrapper.cpp:62:              handler, boost::asio::recycling_allocator<void>());
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/callback_wrapper.cpp:66:          boost::asio::dispatch(work.get_executor(),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/callback_wrapper.cpp:67:              boost::asio::bind_allocator(alloc,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/callback_wrapper.cpp:83:  return boost::asio::async_initiate<CompletionToken, void(std::string)>(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/callback_wrapper.cpp:93:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/callback_wrapper.cpp:98:      boost::asio::bind_executor(io_context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/callback_wrapper.cpp:111:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/callback_wrapper.cpp:117:  auto op = async_read_input("Enter your name", boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/callback_wrapper.cpp:122:      boost::asio::bind_executor(io_context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/callback_wrapper.cpp:139:    async_read_input("Enter your name", boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_1.cpp:22:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_1.cpp:42:  // However, when the completion token is boost::asio::yield_context (used for
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_1.cpp:44:  // completion token is boost::asio::use_future it would be std::future<std::size_t>.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_1.cpp:45:  // When the completion token is boost::asio::deferred, the return type differs for
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_1.cpp:55:  return boost::asio::async_write(socket,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_1.cpp:56:      boost::asio::buffer(message, std::strlen(message)),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_1.cpp:64:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_1.cpp:90:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_1.cpp:100:      "Testing deferred\r\n", boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_1.cpp:123:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_1.cpp:132:      socket, "Testing future\r\n", boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_2.cpp:22:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_2.cpp:24:// NOTE: This example requires the new boost::asio::async_initiate function. For
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_2.cpp:48:  // However, when the completion token is boost::asio::yield_context (used for
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_2.cpp:50:  // completion token is boost::asio::use_future it would be std::future<std::size_t>.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_2.cpp:51:  // When the completion token is boost::asio::deferred, the return type differs for
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_2.cpp:55:  // the return type of boost::asio::async_initiate.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_2.cpp:91:          boost::asio::buffer(message, std::strlen(message)),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_2.cpp:98:      return boost::asio::async_write(socket,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_2.cpp:99:          boost::asio::buffer(message, std::strlen(message)),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_2.cpp:104:  // The boost::asio::async_initiate function takes:
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_2.cpp:119:  return boost::asio::async_initiate<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_2.cpp:128:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_2.cpp:154:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_2.cpp:164:      "Testing deferred\r\n", false, boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_2.cpp:187:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_2.cpp:196:      socket, "Testing future\r\n", false, boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_3.cpp:24:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_3.cpp:26:// NOTE: This example requires the new boost::asio::async_initiate function. For
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_3.cpp:48:  // void. In this example, when the completion token is boost::asio::yield_context
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_3.cpp:51:  // completion token is boost::asio::use_future it would be std::future<void>. When
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_3.cpp:52:  // the completion token is boost::asio::deferred, the return type differs for each
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_3.cpp:56:  // the return type of boost::asio::async_initiate.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_3.cpp:100:    auto executor = boost::asio::get_associated_executor(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_3.cpp:104:    // using the boost::asio::bind_executor function.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_3.cpp:105:    boost::asio::async_write(socket,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_3.cpp:106:        boost::asio::buffer(message, std::strlen(message)),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_3.cpp:107:        boost::asio::bind_executor(executor,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_3.cpp:112:  // The boost::asio::async_initiate function takes:
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_3.cpp:127:  return boost::asio::async_initiate<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_3.cpp:136:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_3.cpp:162:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_3.cpp:172:      "Testing deferred\r\n", boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_3.cpp:195:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_3.cpp:204:      socket, "Testing future\r\n", boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_4.cpp:24:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_4.cpp:26:// NOTE: This example requires the new boost::asio::async_initiate function. For
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_4.cpp:49:  // void. In this example, when the completion token is boost::asio::yield_context
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_4.cpp:52:  // completion token is boost::asio::use_future it would be std::future<void>. When
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_4.cpp:53:  // the completion token is boost::asio::deferred, the return type differs for each
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_4.cpp:57:  // the return type of boost::asio::async_initiate.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_4.cpp:105:    auto executor = boost::asio::get_associated_executor(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_4.cpp:109:    // using the boost::asio::bind_executor function.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_4.cpp:113:      boost::asio::post(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_4.cpp:114:          boost::asio::bind_executor(executor,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_4.cpp:116:                completion_handler), boost::asio::error::invalid_argument)));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_4.cpp:120:      boost::asio::async_write(socket,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_4.cpp:121:          boost::asio::buffer(message, length),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_4.cpp:122:          boost::asio::bind_executor(executor,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_4.cpp:128:  // The boost::asio::async_initiate function takes:
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_4.cpp:143:  return boost::asio::async_initiate<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_4.cpp:152:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_4.cpp:178:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_4.cpp:187:  auto op = async_write_message(socket, "", boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_4.cpp:210:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_4.cpp:219:      socket, "", boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_5.cpp:24:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_5.cpp:26:// NOTE: This example requires the new boost::asio::async_initiate function. For
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_5.cpp:48:  // void. In this example, when the completion token is boost::asio::yield_context
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_5.cpp:51:  // completion token is boost::asio::use_future it would be std::future<void>. When
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_5.cpp:52:  // the completion token is boost::asio::deferred, the return type differs for each
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_5.cpp:56:  // the return type of boost::asio::async_initiate.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_5.cpp:123:      using executor_type = boost::asio::associated_executor_t<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_5.cpp:129:        return boost::asio::get_associated_executor(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_5.cpp:139:      using allocator_type = boost::asio::associated_allocator_t<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_5.cpp:145:        return boost::asio::get_associated_allocator(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_5.cpp:152:    auto encoded_message_buffer = boost::asio::buffer(*encoded_message);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_5.cpp:153:    boost::asio::async_write(socket, encoded_message_buffer,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_5.cpp:164:  // The boost::asio::async_initiate function takes:
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_5.cpp:179:  return boost::asio::async_initiate<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_5.cpp:189:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_5.cpp:215:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_5.cpp:225:      std::string("abcdef"), boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_5.cpp:248:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_5.cpp:257:      socket, 654.321, boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:26:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:28:// NOTE: This example requires the new boost::asio::async_initiate function. For
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:53:  // void. In this example, when the completion token is boost::asio::yield_context
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:56:  // completion token is boost::asio::use_future it would be std::future<void>. When
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:57:  // the completion token is boost::asio::deferred, the return type differs for each
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:61:  // the return type of boost::asio::async_initiate.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:89:      std::unique_ptr<boost::asio::steady_timer> delay_timer)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:109:      std::unique_ptr<boost::asio::steady_timer> delay_timer_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:119:      boost::asio::executor_work_guard<tcp::socket::executor_type> io_work_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:147:            boost::asio::async_write(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:148:                boost::asio::buffer(*encoded_message_), std::move(*this));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:175:      using executor_type = boost::asio::associated_executor_t<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:181:        return boost::asio::get_associated_executor(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:191:      using allocator_type = boost::asio::associated_allocator_t<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:197:        return boost::asio::get_associated_allocator(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:204:    auto encoded_message_buffer = boost::asio::buffer(*encoded_message);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:205:    boost::asio::async_write(socket, encoded_message_buffer,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:210:          boost::asio::make_work_guard(socket.get_executor()),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:221:  std::unique_ptr<boost::asio::steady_timer> delay_timer(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:222:      new boost::asio::steady_timer(socket.get_executor()));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:224:  // The boost::asio::async_initiate function takes:
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:239:  return boost::asio::async_initiate<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:250:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:276:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:286:      "Testing deferred\r\n", 5, boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:309:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_6.cpp:318:      socket, "Testing future\r\n", 5, boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_7.cpp:26:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_7.cpp:28:// NOTE: This example requires the new boost::asio::async_compose function. For
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_7.cpp:53:  // void. In this example, when the completion token is boost::asio::yield_context
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_7.cpp:56:  // completion token is boost::asio::use_future it would be std::future<void>. When
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_7.cpp:57:  // the completion token is boost::asio::deferred, the return type differs for each
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_7.cpp:61:  // the return type of boost::asio::async_compose.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_7.cpp:70:  std::unique_ptr<boost::asio::steady_timer> delay_timer(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_7.cpp:71:      new boost::asio::steady_timer(socket.get_executor()));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_7.cpp:77:  // The boost::asio::async_compose function takes:
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_7.cpp:92:  // provided for us by the boost::asio::async_compose function, and takes care
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_7.cpp:101:  return boost::asio::async_compose<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_7.cpp:146:            boost::asio::async_write(socket,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_7.cpp:147:                boost::asio::buffer(*encoded_message), std::move(self));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_7.cpp:170:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_7.cpp:196:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_7.cpp:206:      "Testing deferred\r\n", 5, boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_7.cpp:229:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_7.cpp:238:      socket, "Testing future\r\n", 5, boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_8.cpp:27:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_8.cpp:29:// NOTE: This example requires the new boost::asio::async_compose function. For
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_8.cpp:57:  // void. In this example, when the completion token is boost::asio::yield_context
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_8.cpp:60:  // completion token is boost::asio::use_future it would be std::future<void>. When
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_8.cpp:61:  // the completion token is boost::asio::deferred, the return type differs for each
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_8.cpp:65:  // the return type of boost::asio::async_compose.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_8.cpp:74:  std::unique_ptr<boost::asio::steady_timer> delay_timer(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_8.cpp:75:      new boost::asio::steady_timer(socket.get_executor()));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_8.cpp:77:  // The boost::asio::async_compose function takes:
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_8.cpp:92:  // provided for us by the boost::asio::async_compose function, and takes care
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_8.cpp:101:  return boost::asio::async_compose<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_8.cpp:120:        coro = boost::asio::coroutine()
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_8.cpp:139:            yield boost::asio::async_write(socket,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_8.cpp:140:                boost::asio::buffer(*encoded_message), std::move(self));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_8.cpp:163:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_8.cpp:189:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_8.cpp:199:      "Testing deferred\r\n", 5, boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_8.cpp:222:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/operations/composed_8.cpp:231:      socket, "Testing future\r\n", 5, boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/parallel_sort.cpp:42:      boost::asio::post(executor,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/parallel_sort.cpp:52:      boost::asio::experimental::make_parallel_group(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/parallel_sort.cpp:62:          boost::asio::experimental::wait_for_all(),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/parallel_sort.cpp:82:  return boost::asio::async_compose<CompletionToken, void()>(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/parallel_sort.cpp:91:                boost::asio::dispatch(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/parallel_sort.cpp:92:                    boost::asio::append(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/parallel_sort.cpp:108:  boost::asio::thread_pool pool(4);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/parallel_sort.cpp:125:      boost::asio::use_future
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/ranged_wait_for_all.cpp:20:  boost::asio::io_context ctx;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/ranged_wait_for_all.cpp:22:  boost::asio::posix::stream_descriptor out(ctx, ::dup(STDOUT_FILENO));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/ranged_wait_for_all.cpp:23:  boost::asio::posix::stream_descriptor err(ctx, ::dup(STDERR_FILENO));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/ranged_wait_for_all.cpp:26:      out.async_write_some(boost::asio::buffer("", 0))
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/ranged_wait_for_all.cpp:32:      out.async_write_some(boost::asio::buffer("first\r\n", 7))
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/ranged_wait_for_all.cpp:36:      err.async_write_some(boost::asio::buffer("second\r\n", 8))
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/ranged_wait_for_all.cpp:39:  boost::asio::experimental::make_parallel_group(ops).async_wait(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/ranged_wait_for_all.cpp:40:      boost::asio::experimental::wait_for_all(),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/wait_for_all.cpp:19:  boost::asio::io_context ctx;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/wait_for_all.cpp:21:  boost::asio::posix::stream_descriptor in(ctx, ::dup(STDIN_FILENO));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/wait_for_all.cpp:22:  boost::asio::steady_timer timer(ctx, std::chrono::seconds(5));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/wait_for_all.cpp:26:  boost::asio::experimental::make_parallel_group(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/wait_for_all.cpp:29:        return in.async_read_some(boost::asio::buffer(data), token);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/wait_for_all.cpp:36:      boost::asio::experimental::wait_for_all(),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/wait_for_one.cpp:19:  boost::asio::io_context ctx;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/wait_for_one.cpp:21:  boost::asio::posix::stream_descriptor in(ctx, ::dup(STDIN_FILENO));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/wait_for_one.cpp:22:  boost::asio::steady_timer timer(ctx, std::chrono::seconds(5));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/wait_for_one.cpp:26:  boost::asio::experimental::make_parallel_group(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/wait_for_one.cpp:29:        return in.async_read_some(boost::asio::buffer(data), token);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/wait_for_one.cpp:36:      boost::asio::experimental::wait_for_one(),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/wait_for_one_error.cpp:19:  boost::asio::io_context ctx;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/wait_for_one_error.cpp:21:  boost::asio::posix::stream_descriptor in(ctx, ::dup(STDIN_FILENO));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/wait_for_one_error.cpp:22:  boost::asio::steady_timer timer(ctx, std::chrono::seconds(5));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/wait_for_one_error.cpp:26:  boost::asio::experimental::make_parallel_group(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/wait_for_one_error.cpp:29:        return in.async_read_some(boost::asio::buffer(data), token);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/wait_for_one_error.cpp:36:      boost::asio::experimental::wait_for_one_error(),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/wait_for_one_success.cpp:19:  boost::asio::io_context ctx;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/wait_for_one_success.cpp:21:  boost::asio::posix::stream_descriptor in(ctx, ::dup(STDIN_FILENO));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/wait_for_one_success.cpp:22:  boost::asio::steady_timer timer(ctx, std::chrono::seconds(5));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/wait_for_one_success.cpp:26:  boost::asio::experimental::make_parallel_group(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/wait_for_one_success.cpp:29:        return in.async_read_some(boost::asio::buffer(data), token);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp14/parallel_group/wait_for_one_success.cpp:36:      boost::asio::experimental::wait_for_one_success(),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:31:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:32:using boost::asio::awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:33:using boost::asio::co_spawn;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:34:using boost::asio::detached;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:35:using boost::asio::redirect_error;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:36:using boost::asio::use_awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:123:        std::size_t n = co_await boost::asio::async_read_until(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:124:            boost::asio::dynamic_buffer(read_msg, 1024), "\n", use_awaitable);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:149:          co_await boost::asio::async_write(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:150:              boost::asio::buffer(write_msgs_.front()), use_awaitable);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:169:  boost::asio::steady_timer timer_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:201:    boost::asio::io_context io_context(1);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:211:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server.cpp:19:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server.cpp:20:using boost::asio::awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server.cpp:21:using boost::asio::co_spawn;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server.cpp:22:using boost::asio::detached;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server.cpp:23:using boost::asio::use_awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server.cpp:24:namespace this_coro = boost::asio::this_coro;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server.cpp:28:  boost::asio::use_awaitable_t(__FILE__, __LINE__, __PRETTY_FUNCTION__)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server.cpp:38:      std::size_t n = co_await socket.async_read_some(boost::asio::buffer(data), use_awaitable);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server.cpp:39:      co_await async_write(socket, boost::asio::buffer(data, n), use_awaitable);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server.cpp:63:    boost::asio::io_context io_context(1);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server.cpp:65:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_as_single_default.cpp:20:using boost::asio::experimental::as_single_t;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_as_single_default.cpp:21:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_as_single_default.cpp:22:using boost::asio::awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_as_single_default.cpp:23:using boost::asio::co_spawn;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_as_single_default.cpp:24:using boost::asio::detached;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_as_single_default.cpp:25:using boost::asio::use_awaitable_t;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_as_single_default.cpp:29:namespace this_coro = boost::asio::this_coro;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_as_single_default.cpp:36:    auto [e1, nread] = co_await socket.async_read_some(boost::asio::buffer(data));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_as_single_default.cpp:38:    auto [e2, nwritten] = co_await async_write(socket, boost::asio::buffer(data, nread));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_as_single_default.cpp:58:    boost::asio::io_context io_context(1);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_as_single_default.cpp:60:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_as_tuple_default.cpp:20:using boost::asio::as_tuple_t;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_as_tuple_default.cpp:21:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_as_tuple_default.cpp:22:using boost::asio::awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_as_tuple_default.cpp:23:using boost::asio::co_spawn;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_as_tuple_default.cpp:24:using boost::asio::detached;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_as_tuple_default.cpp:25:using boost::asio::use_awaitable_t;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_as_tuple_default.cpp:29:namespace this_coro = boost::asio::this_coro;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_as_tuple_default.cpp:36:    auto [e1, nread] = co_await socket.async_read_some(boost::asio::buffer(data));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_as_tuple_default.cpp:38:    auto [e2, nwritten] = co_await async_write(socket, boost::asio::buffer(data, nread));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_as_tuple_default.cpp:58:    boost::asio::io_context io_context(1);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_as_tuple_default.cpp:60:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_default.cpp:19:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_default.cpp:20:using boost::asio::awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_default.cpp:21:using boost::asio::co_spawn;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_default.cpp:22:using boost::asio::detached;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_default.cpp:23:using boost::asio::use_awaitable_t;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_default.cpp:26:namespace this_coro = boost::asio::this_coro;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_default.cpp:35:      std::size_t n = co_await socket.async_read_some(boost::asio::buffer(data));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_default.cpp:36:      co_await async_write(socket, boost::asio::buffer(data, n));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_default.cpp:60:    boost::asio::io_context io_context(1);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server_with_default.cpp:62:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/range_based_for.cpp:19:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/range_based_for.cpp:20:using boost::asio::awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/range_based_for.cpp:21:using boost::asio::co_spawn;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/range_based_for.cpp:22:using boost::asio::detached;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/range_based_for.cpp:23:using boost::asio::use_awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/range_based_for.cpp:80:    co_await boost::asio::async_write(s, boost::asio::buffer("hello\r\n", 7), use_awaitable);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/range_based_for.cpp:88:    boost::asio::io_context io_context(1);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/range_based_for.cpp:90:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:19:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:20:using boost::asio::awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:21:using boost::asio::co_spawn;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:22:using boost::asio::detached;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:23:using boost::asio::use_awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:24:namespace this_coro = boost::asio::this_coro;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:29:  std::size_t n = co_await socket.async_read_some
boost::asio::buffer(data), use_awaitable);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:30:  co_await async_write(socket, boost::asio::buffer(data, n), use_awaitable);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:67:    boost::asio::io_context io_context(1);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:69:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/mutual_exclusion_1.cpp:16:using boost::asio::as_tuple;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/mutual_exclusion_1.cpp:17:using boost::asio::awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/mutual_exclusion_1.cpp:18:using boost::asio::dynamic_buffer;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/mutual_exclusion_1.cpp:19:using boost::asio::co_spawn;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/mutual_exclusion_1.cpp:20:using boost::asio::detached;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/mutual_exclusion_1.cpp:21:using boost::asio::experimental::channel;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/mutual_exclusion_1.cpp:22:using boost::asio::io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/mutual_exclusion_1.cpp:23:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/mutual_exclusion_1.cpp:24:using boost::asio::steady_timer;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/mutual_exclusion_1.cpp:25:using namespace boost::asio::buffer_literals;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/mutual_exclusion_2.cpp:16:using boost::asio::as_tuple;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/mutual_exclusion_2.cpp:17:using boost::asio::awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/mutual_exclusion_2.cpp:18:using boost::asio::dynamic_buffer;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/mutual_exclusion_2.cpp:19:using boost::asio::co_spawn;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/mutual_exclusion_2.cpp:20:using boost::asio::detached;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/mutual_exclusion_2.cpp:21:using boost::asio::experimental::channel;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/mutual_exclusion_2.cpp:22:using boost::asio::io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/mutual_exclusion_2.cpp:23:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/mutual_exclusion_2.cpp:24:using boost::asio::steady_timer;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/mutual_exclusion_2.cpp:25:using namespace boost::asio::buffer_literals;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/throttling_proxy.cpp:16:using boost::asio::as_tuple;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/throttling_proxy.cpp:17:using boost::asio::awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/throttling_proxy.cpp:18:using boost::asio::buffer;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/throttling_proxy.cpp:19:using boost::asio::co_spawn;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/throttling_proxy.cpp:20:using boost::asio::detached;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/throttling_proxy.cpp:21:using boost::asio::experimental::channel;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/throttling_proxy.cpp:22:using boost::asio::io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/throttling_proxy.cpp:23:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/throttling_proxy.cpp:24:using boost::asio::steady_timer;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/throttling_proxy.cpp:25:namespace this_coro = boost::asio::this_coro;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/channels/throttling_proxy.cpp:26:using namespace boost::asio::experimental::awaitable_operators;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/chat_server.cpp:31:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/chat_server.cpp:32:using boost::asio::awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/chat_server.cpp:33:using boost::asio::co_spawn;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/chat_server.cpp:34:using boost::asio::detached;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/chat_server.cpp:35:using boost::asio::redirect_error;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/chat_server.cpp:36:using boost::asio::use_awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/chat_server.cpp:123:        std::size_t n = co_await boost::asio::async_read_until(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/chat_server.cpp:124:            boost::asio::dynamic_buffer(read_msg, 1024), "\n", use_awaitable);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/chat_server.cpp:149:          co_await boost::asio::async_write(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/chat_server.cpp:150:              boost::asio::buffer(write_msgs_.front()), use_awaitable);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/chat_server.cpp:169:  boost::asio::steady_timer timer_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/chat_server.cpp:201:    boost::asio::io_context io_context(1);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/chat_server.cpp:211:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server.cpp:19:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server.cpp:20:using boost::asio::awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server.cpp:21:using boost::asio::co_spawn;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server.cpp:22:using boost::asio::detached;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server.cpp:23:using boost::asio::use_awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server.cpp:24:namespace this_coro = boost::asio::this_coro;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server.cpp:28:  boost::asio::use_awaitable_t(__FILE__, __LINE__, __PRETTY_FUNCTION__)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server.cpp:38:      std::size_t n = co_await socket.async_read_some(boost::asio::buffer(data), use_awaitable);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server.cpp:39:      co_await async_write(socket, boost::asio::buffer(data, n), use_awaitable);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server.cpp:63:    boost::asio::io_context io_context(1);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server.cpp:65:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_as_single_default.cpp:20:using boost::asio::experimental::as_single_t;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_as_single_default.cpp:21:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_as_single_default.cpp:22:using boost::asio::awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_as_single_default.cpp:23:using boost::asio::co_spawn;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_as_single_default.cpp:24:using boost::asio::detached;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_as_single_default.cpp:25:using boost::asio::use_awaitable_t;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_as_single_default.cpp:29:namespace this_coro = boost::asio::this_coro;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_as_single_default.cpp:36:    auto [e1, nread] = co_await socket.async_read_some(boost::asio::buffer(data));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_as_single_default.cpp:38:    auto [e2, nwritten] = co_await async_write(socket, boost::asio::buffer(data, nread));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_as_single_default.cpp:58:    boost::asio::io_context io_context(1);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_as_single_default.cpp:60:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_as_tuple_default.cpp:20:using boost::asio::as_tuple_t;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_as_tuple_default.cpp:21:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_as_tuple_default.cpp:22:using boost::asio::awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_as_tuple_default.cpp:23:using boost::asio::co_spawn;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_as_tuple_default.cpp:24:using boost::asio::detached;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_as_tuple_default.cpp:25:using boost::asio::use_awaitable_t;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_as_tuple_default.cpp:29:namespace this_coro = boost::asio::this_coro;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_as_tuple_default.cpp:36:    auto [e1, nread] = co_await socket.async_read_some(boost::asio::buffer(data));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_as_tuple_default.cpp:38:    auto [e2, nwritten] = co_await async_write(socket, boost::asio::buffer(data, nread));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_as_tuple_default.cpp:58:    boost::asio::io_context io_context(1);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_as_tuple_default.cpp:60:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_default.cpp:19:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_default.cpp:20:using boost::asio::awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_default.cpp:21:using boost::asio::co_spawn;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_default.cpp:22:using boost::asio::detached;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_default.cpp:23:using boost::asio::use_awaitable_t;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_default.cpp:26:namespace this_coro = boost::asio::this_coro;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_default.cpp:35:      std::size_t n = co_await socket.async_read_some(boost::asio::buffer(data));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_default.cpp:36:      co_await async_write(socket, boost::asio::buffer(data, n));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_default.cpp:60:    boost::asio::io_context io_context(1);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_default.cpp:62:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_deferred.cpp:20:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_deferred.cpp:21:using boost::asio::awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_deferred.cpp:22:using boost::asio::co_spawn;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_deferred.cpp:23:using boost::asio::deferred;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_deferred.cpp:24:using boost::asio::detached;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_deferred.cpp:25:namespace this_coro = boost::asio::this_coro;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_deferred.cpp:34:      std::size_t n = co_await socket.async_read_some(boost::asio::buffer(data), deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_deferred.cpp:35:      co_await async_write(socket, boost::asio::buffer(data, n), deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_deferred.cpp:59:    boost::asio::io_context io_context(1);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_deferred.cpp:61:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_deferred_default.cpp:20:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_deferred_default.cpp:21:using boost::asio::awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_deferred_default.cpp:22:using boost::asio::co_spawn;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_deferred_default.cpp:23:using boost::asio::detached;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_deferred_default.cpp:24:namespace this_coro = boost::asio::this_coro;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_deferred_default.cpp:33:      std::size_t n = co_await socket.async_read_some(boost::asio::buffer(data));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_deferred_default.cpp:34:      co_await async_write(socket, boost::asio::buffer(data, n));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_deferred_default.cpp:58:    boost::asio::io_context io_context(1);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/echo_server_with_deferred_default.cpp:60:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/refactored_echo_server.cpp:19:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/refactored_echo_server.cpp:20:using boost::asio::awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/refactored_echo_server.cpp:21:using boost::asio::co_spawn;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/refactored_echo_server.cpp:22:using boost::asio::detached;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/refactored_echo_server.cpp:23:using boost::asio::use_awaitable;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/refactored_echo_server.cpp:24:namespace this_coro = boost::asio::this_coro;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/refactored_echo_server.cpp:29:  std::size_t n = co_await socket.async_read_some(boost::asio::buffer(data), use_awaitable);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/refactored_echo_server.cpp:30:  co_await async_write(socket, boost::asio::buffer(data, n), use_awaitable);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/refactored_echo_server.cpp:67:    boost::asio::io_context io_context(1);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/refactored_echo_server.cpp:69:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/timeout.cpp:14:using namespace boost::asio;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/coroutines/timeout.cpp:15:using namespace boost::asio::experimental::awaitable_operators;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/invocation/completion_executor.cpp:15:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/invocation/completion_executor.cpp:46:static_assert(boost::asio::execution::executor<logging_executor>);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/invocation/completion_executor.cpp:50:    logging_executor, boost::asio::any_completion_executor>);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/invocation/completion_executor.cpp:56:  boost::asio::io_context io_context(1);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/invocation/completion_executor.cpp:59:  boost::asio::post(io_context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/invocation/completion_executor.cpp:60:      boost::asio::bind_executor(logging_executor{},
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/invocation/completion_executor.cpp:64:  tcp::endpoint endpoint(boost::asio::ip::address_v4::loopback(), 0);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/invocation/completion_executor.cpp:68:      boost::asio::bind_executor(logging_executor{},
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/invocation/completion_executor.cpp:74:  boost::asio::steady_timer timer(io_context);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/invocation/completion_executor.cpp:75:  timer.expires_at(boost::asio::steady_timer::clock_type::time_point::min());
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/invocation/completion_executor.cpp:77:      boost::asio::bind_executor(logging_executor{},
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/c_callback_wrapper.cpp:41:template <boost::asio::completion_handler_for<void(std::string)> Handler>
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/c_callback_wrapper.cpp:47:      work_(boost::asio::make_work_guard(handler_))
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/c_callback_wrapper.cpp:62:        boost::asio::associated_allocator_t<Handler,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/c_callback_wrapper.cpp:63:          boost::asio::recycling_allocator<void>>>::template
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/c_callback_wrapper.cpp:70:    } d{boost::asio::get_associated_allocator(handler,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/c_callback_wrapper.cpp:71:          boost::asio::recycling_allocator<void>())};
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/c_callback_wrapper.cpp:98:        boost::asio::associated_allocator_t<Handler,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/c_callback_wrapper.cpp:99:          boost::asio::recycling_allocator<void>>>::template
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/c_callback_wrapper.cpp:107:    } d{boost::asio::get_associated_allocator(self->handler_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/c_callback_wrapper.cpp:108:          boost::asio::recycling_allocator<void>())};
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/c_callback_wrapper.cpp:119:    boost::asio::dispatch(state.work_.get_executor(),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/c_callback_wrapper.cpp:120:        boost::asio::bind_allocator(d.alloc,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/c_callback_wrapper.cpp:136:  boost::asio::executor_work_guard<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/c_callback_wrapper.cpp:137:    boost::asio::associated_executor_t<Handler>> work_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/c_callback_wrapper.cpp:141:template <boost::asio::completion_token_for<void(std::string)> CompletionToken>
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/c_callback_wrapper.cpp:148:      boost::asio::completion_handler_for<void(std::string)> auto handler,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/c_callback_wrapper.cpp:163:  return boost::asio::async_initiate<CompletionToken, void(std::string)>(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/c_callback_wrapper.cpp:173:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/c_callback_wrapper.cpp:178:      boost::asio::bind_executor(io_context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/c_callback_wrapper.cpp:191:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/c_callback_wrapper.cpp:197:  auto op = async_read_input("Enter your name", boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/c_callback_wrapper.cpp:202:      boost::asio::bind_executor(io_context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/c_callback_wrapper.cpp:219:    async_read_input("Enter your name", boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/callback_wrapper.cpp:38:template <boost::asio::completion_token_for<void(std::string)> CompletionToken>
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/callback_wrapper.cpp:45:      boost::asio::completion_handler_for<void(std::string)> auto handler,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/callback_wrapper.cpp:51:    auto work = boost::asio::make_work_guard(handler);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/callback_wrapper.cpp:63:          auto alloc = boost::asio::get_associated_allocator(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/callback_wrapper.cpp:64:              handler, boost::asio::recycling_allocator<void>());
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/callback_wrapper.cpp:68:          boost::asio::dispatch(work.get_executor(),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/callback_wrapper.cpp:69:              boost::asio::bind_allocator(alloc,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/callback_wrapper.cpp:85:  return boost::asio::async_initiate<CompletionToken, void(std::string)>(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/callback_wrapper.cpp:95:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/callback_wrapper.cpp:100:      boost::asio::bind_executor(io_context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/callback_wrapper.cpp:113:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/callback_wrapper.cpp:119:  auto op = async_read_input("Enter your name", boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/callback_wrapper.cpp:124:      boost::asio::bind_executor(io_context,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/callback_wrapper.cpp:141:    async_read_input("Enter your name", boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_1.cpp:22:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_1.cpp:32:  boost::asio::completion_token_for<void(boost::system::error_code, std::size_t)>
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_1.cpp:44:  // However, when the completion token is boost::asio::yield_context (used for
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_1.cpp:46:  // completion token is boost::asio::use_future it would be std::future<std::size_t>.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_1.cpp:47:  // When the completion token is boost::asio::deferred, the return type differs for
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_1.cpp:57:  return boost::asio::async_write(socket,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_1.cpp:58:      boost::asio::buffer(message, std::strlen(message)),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_1.cpp:66:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_1.cpp:92:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_1.cpp:101:  boost::asio::async_operation auto op = async_write_message(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_1.cpp:102:      socket, "Testing deferred\r\n", boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_1.cpp:125:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_1.cpp:134:      socket, "Testing future\r\n", boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_2.cpp:22:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_2.cpp:24:// NOTE: This example requires the new boost::asio::async_initiate function. For
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_2.cpp:37:  boost::asio::completion_token_for<void(boost::system::error_code, std::size_t)>
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_2.cpp:50:  // However, when the completion token is boost::asio::yield_context (used for
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_2.cpp:52:  // completion token is boost::asio::use_future it would be std::future<std::size_t>.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_2.cpp:53:  // When the completion token is boost::asio::deferred, the return type differs for
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_2.cpp:57:  // the return type of boost::asio::async_initiate.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_2.cpp:84:      boost::asio::completion_handler_for<void(boost::system::error_code, std::size_t)>
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_2.cpp:97:          boost::asio::buffer(message, std::strlen(message)),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_2.cpp:104:      return boost::asio::async_write(socket,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_2.cpp:105:          boost::asio::buffer(message, std::strlen(message)),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_2.cpp:110:  // The boost::asio::async_initiate function takes:
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_2.cpp:125:  return boost::asio::async_initiate<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_2.cpp:134:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_2.cpp:160:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_2.cpp:169:  boost::asio::async_operation auto op = async_write_message(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_2.cpp:170:      socket, "Testing deferred\r\n", false, boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_2.cpp:193:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_2.cpp:202:      socket, "Testing future\r\n", false, boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_3.cpp:24:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_3.cpp:26:// NOTE: This example requires the new boost::asio::async_initiate function. For
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_3.cpp:38:  boost::asio::completion_token_for<void(boost::system::error_code)> CompletionToken>
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_3.cpp:49:  // void. In this example, when the completion token is boost::asio::yield_context
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_3.cpp:52:  // completion token is boost::asio::use_future it would be std::future<void>. When
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_3.cpp:53:  // the completion token is boost::asio::deferred, the return type differs for each
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_3.cpp:57:  // the return type of boost::asio::async_initiate.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_3.cpp:84:      boost::asio::completion_handler_for<void(boost::system::error_code)>
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_3.cpp:104:    auto executor = boost::asio::get_associated_executor(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_3.cpp:108:    // using the boost::asio::bind_executor function.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_3.cpp:109:    boost::asio::async_write(socket,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_3.cpp:110:        boost::asio::buffer(message, std::strlen(message)),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_3.cpp:111:        boost::asio::bind_executor(executor,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_3.cpp:116:  // The boost::asio::async_initiate function takes:
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_3.cpp:131:  return boost::asio::async_initiate<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_3.cpp:140:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_3.cpp:166:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_3.cpp:175:  boost::asio::async_operation auto op = async_write_message(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_3.cpp:176:      socket, "Testing deferred\r\n", boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_3.cpp:199:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_3.cpp:208:      socket, "Testing future\r\n", boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_4.cpp:24:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_4.cpp:26:// NOTE: This example requires the new boost::asio::async_initiate function. For
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_4.cpp:39:  boost::asio::completion_token_for<void(boost::system::error_code)> CompletionToken>
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_4.cpp:50:  // void. In this example, when the completion token is boost::asio::yield_context
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_4.cpp:53:  // completion token is boost::asio::use_future it would be std::future<void>. When
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_4.cpp:54:  // the completion token is boost::asio::deferred, the return type differs for each
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_4.cpp:58:  // the return type of boost::asio::async_initiate.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_4.cpp:85:      boost::asio::completion_handler_for<void(boost::system::error_code)>
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_4.cpp:109:    auto executor = boost::asio::get_associated_executor(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_4.cpp:113:    // using the boost::asio::bind_executor function.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_4.cpp:117:      boost::asio::post(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_4.cpp:118:          boost::asio::bind_executor(executor,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_4.cpp:120:                completion_handler), boost::asio::error::invalid_argument)));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_4.cpp:124:      boost::asio::async_write(socket,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_4.cpp:125:          boost::asio::buffer(message, length),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_4.cpp:126:          boost::asio::bind_executor(executor,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_4.cpp:132:  // The boost::asio::async_initiate function takes:
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_4.cpp:147:  return boost::asio::async_initiate<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_4.cpp:156:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_4.cpp:182:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_4.cpp:191:  boost::asio::async_operation auto op =
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_4.cpp:192:    async_write_message(socket, "", boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_4.cpp:215:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_4.cpp:224:      socket, "", boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_5.cpp:24:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_5.cpp:26:// NOTE: This example requires the new boost::asio::async_initiate function. For
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_5.cpp:38:  boost::asio::completion_token_for<void(boost::system::error_code)> CompletionToken>
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_5.cpp:49:  // void. In this example, when the completion token is boost::asio::yield_context
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_5.cpp:52:  // completion token is boost::asio::use_future it would be std::future<void>. When
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_5.cpp:53:  // the completion token is boost::asio::deferred, the return type differs for each
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_5.cpp:57:  // the return type of boost::asio::async_initiate.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_5.cpp:84:      boost::asio::completion_handler_for<void(boost::system::error_code)>
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_5.cpp:127:      using executor_type = boost::asio::associated_executor_t<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_5.cpp:133:        return boost::asio::get_associated_executor(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_5.cpp:143:      using allocator_type = boost::asio::associated_allocator_t<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_5.cpp:149:        return boost::asio::get_associated_allocator(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_5.cpp:156:    auto encoded_message_buffer = boost::asio::buffer(*encoded_message);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_5.cpp:157:    boost::asio::async_write(socket, encoded_message_buffer,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_5.cpp:168:  // The boost::asio::async_initiate function takes:
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_5.cpp:183:  return boost::asio::async_initiate<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_5.cpp:193:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_5.cpp:219:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_5.cpp:228:  boost::asio::async_operation auto op = async_write_message(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_5.cpp:229:      socket, std::string("abcdef"), boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_5.cpp:252:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_5.cpp:261:      socket, 654.321, boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:26:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:28:// NOTE: This example requires the new boost::asio::async_initiate function. For
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:42:  boost::asio::completion_token_for<void(boost::system::error_code)> CompletionToken>
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:54:  // void. In this example, when the completion token is boost::asio::yield_context
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:57:  // completion token is boost::asio::use_future it would be std::future<void>. When
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:58:  // the completion token is boost::asio::deferred, the return type differs for each
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:62:  // the return type of boost::asio::async_initiate.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:89:      boost::asio::completion_handler_for<void(boost::system::error_code)>
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:94:      std::unique_ptr<boost::asio::steady_timer> delay_timer)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:114:      std::unique_ptr<boost::asio::steady_timer> delay_timer_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:124:      boost::asio::executor_work_guard<tcp::socket::executor_type> io_work_;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:152:            boost::asio::async_write(socket_,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:153:                boost::asio::buffer(*encoded_message_), std::move(*this));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:180:      using executor_type = boost::asio::associated_executor_t<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:186:        return boost::asio::get_associated_executor(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:196:      using allocator_type = boost::asio::associated_allocator_t<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:202:        return boost::asio::get_associated_allocator(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:209:    auto encoded_message_buffer = boost::asio::buffer(*encoded_message);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:210:    boost::asio::async_write(socket, encoded_message_buffer,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:215:          boost::asio::make_work_guard(socket.get_executor()),
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:226:  std::unique_ptr<boost::asio::steady_timer> delay_timer(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:227:      new boost::asio::steady_timer(socket.get_executor()));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:229:  // The boost::asio::async_initiate function takes:
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:244:  return boost::asio::async_initiate<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:255:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:281:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:290:  boost::asio::async_operation auto op = async_write_messages(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:291:      socket, "Testing deferred\r\n", 5, boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:314:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_6.cpp:323:      socket, "Testing future\r\n", 5, boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_7.cpp:26:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_7.cpp:28:// NOTE: This example requires the new boost::asio::async_compose function. For
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_7.cpp:42:  boost::asio::completion_token_for<void(boost::system::error_code)> CompletionToken>
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_7.cpp:54:  // void. In this example, when the completion token is boost::asio::yield_context
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_7.cpp:57:  // completion token is boost::asio::use_future it would be std::future<void>. When
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_7.cpp:58:  // the completion token is boost::asio::deferred, the return type differs for each
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_7.cpp:62:  // the return type of boost::asio::async_compose.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_7.cpp:71:  std::unique_ptr<boost::asio::steady_timer> delay_timer(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_7.cpp:72:      new boost::asio::steady_timer(socket.get_executor()));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_7.cpp:78:  // The boost::asio::async_compose function takes:
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_7.cpp:93:  // provided for us by the boost::asio::async_compose function, and takes care
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_7.cpp:102:  return boost::asio::async_compose<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_7.cpp:147:            boost::asio::async_write(socket,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_7.cpp:148:                boost::asio::buffer(*encoded_message), std::move(self));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_7.cpp:171:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_7.cpp:197:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_7.cpp:206:  boost::asio::async_operation auto op = async_write_messages(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_7.cpp:207:      socket, "Testing deferred\r\n", 5, boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_7.cpp:230:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_7.cpp:239:      socket, "Testing future\r\n", 5, boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_8.cpp:27:using boost::asio::ip::tcp;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_8.cpp:29:// NOTE: This example requires the new boost::asio::async_compose function. For
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_8.cpp:46:  boost::asio::completion_token_for<void(boost::system::error_code)> CompletionToken>
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_8.cpp:58:  // void. In this example, when the completion token is boost::asio::yield_context
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_8.cpp:61:  // completion token is boost::asio::use_future it would be std::future<void>. When
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_8.cpp:62:  // the completion token is boost::asio::deferred, the return type differs for each
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_8.cpp:66:  // the return type of boost::asio::async_compose.
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_8.cpp:75:  std::unique_ptr<boost::asio::steady_timer> delay_timer(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_8.cpp:76:      new boost::asio::steady_timer(socket.get_executor()));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_8.cpp:78:  // The boost::asio::async_compose function takes:
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_8.cpp:93:  // provided for us by the boost::asio::async_compose function, and takes care
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_8.cpp:102:  return boost::asio::async_compose<
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_8.cpp:121:        coro = boost::asio::coroutine()
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_8.cpp:140:            yield boost::asio::async_write(socket,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_8.cpp:141:                boost::asio::buffer(*encoded_message), std::move(self));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_8.cpp:164:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_8.cpp:190:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_8.cpp:199:  boost::asio::async_operation auto op = async_write_messages(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_8.cpp:200:      socket, "Testing deferred\r\n", 5, boost::asio::deferred);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_8.cpp:223:  boost::asio::io_context io_context;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/operations/composed_8.cpp:232:      socket, "Testing future\r\n", 5, boost::asio::use_future);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/type_erasure/line_reader.hpp:27:    return boost::asio::async_initiate<CompletionToken, void(boost::system::error_code, std::string)>(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/type_erasure/line_reader.hpp:36:      boost::asio::any_completion_handler<void(boost::system::error_code, std::string)> handler) = 0;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/type_erasure/main.cpp:20:boost::asio::awaitable<void> do_read(line_reader& reader)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/type_erasure/main.cpp:24:    std::cout << co_await reader.async_read_line("Enter something: ", boost::asio::use_awaitable);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/type_erasure/main.cpp:25:    co_await async_sleep(co_await boost::asio::this_coro::executor, std::chrono::seconds(1), boost::asio::use_awaitable);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/type_erasure/main.cpp:31:  boost::asio::io_context ctx{1};
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/type_erasure/main.cpp:33:  co_spawn(ctx, do_read(reader), boost::asio::detached);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/type_erasure/sleep.cpp:17:    boost::asio::any_completion_handler<void(boost::system::error_code)> handler,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/type_erasure/sleep.cpp:18:    boost::asio::any_io_executor ex, std::chrono::nanoseconds duration)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/type_erasure/sleep.cpp:20:  auto timer = std::make_shared<boost::asio::steady_timer>(ex, duration);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/type_erasure/sleep.cpp:21:  timer->async_wait(boost::asio::consign(std::move(handler), timer));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/type_erasure/sleep.hpp:21:    boost::asio::any_completion_handler<void(boost::system::error_code)> handler,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/type_erasure/sleep.hpp:22:    boost::asio::any_io_executor ex, std::chrono::nanoseconds duration);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/type_erasure/sleep.hpp:25:inline auto async_sleep(boost::asio::any_io_executor ex,
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/type_erasure/sleep.hpp:28:  return boost::asio::async_initiate<CompletionToken, void(boost::system::error_code)>(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/type_erasure/stdin_line_reader.cpp:16:stdin_line_reader::stdin_line_reader(boost::asio::any_io_executor ex)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/type_erasure/stdin_line_reader.cpp:22:    boost::asio::any_completion_handler<void(boost::system::error_code, std::string)> handler)
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/type_erasure/stdin_line_reader.cpp:27:  boost::asio::async_read_until(stdin_, boost::asio::dynamic_buffer(buffer_), '\n',
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/type_erasure/stdin_line_reader.cpp:28:      boost::asio::deferred(
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/type_erasure/stdin_line_reader.cpp:35:            return boost::asio::deferred.values(ec, std::move(result));
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/type_erasure/stdin_line_reader.cpp:39:            return boost::asio::deferred.values(ec, std::string{});
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/type_erasure/stdin_line_reader.hpp:20:  explicit stdin_line_reader(boost::asio::any_io_executor ex);
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/type_erasure/stdin_line_reader.hpp:24:      boost::asio::any_completion_handler<void(boost::system::error_code, std::string)> handler) override;
/root/boost_1_87_0/doc/html/boost_asio/example/cpp20/type_erasure/stdin_line_reader.hpp:26:  boost::asio::posix::stream_descriptor stdin_;
/root/boost_1_87_0/doc/html/boost_asio/examples/cpp11_examples.html:641:        Example of using the boost::asio::spawn() function, a wrapper around the
/root/boost_1_87_0/doc/html/boost_asio/index.html:1093:        boost::asio::error::addrinfo_errors &gt;, <a class="indexterm" href="reference/is_error_code_enum_lt__addrinfo_errors__gt_.html">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/index.html:1094:      boost::asio::error::addrinfo_errors &gt;</a>
/root/boost_1_87_0/doc/html/boost_asio/index.html:1097:        boost::asio::error::basic_errors &gt;, <a class="indexterm" href="reference/is_error_code_enum_lt__basic_errors__gt_.html">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/index.html:1098:      boost::asio::error::basic_errors &gt;</a>
/root/boost_1_87_0/doc/html/boost_asio/index.html:1101:        boost::asio::error::misc_errors &gt;, <a class="indexterm" href="reference/is_error_code_enum_lt__misc_errors__gt_.html">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/index.html:1102:      boost::asio::error::misc_errors &gt;</a>
/root/boost_1_87_0/doc/html/boost_asio/index.html:1105:        boost::asio::error::netdb_errors &gt;, <a class="indexterm" href="reference/is_error_code_enum_lt__netdb_errors__gt_.html">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/index.html:1106:      boost::asio::error::netdb_errors &gt;</a>
/root/boost_1_87_0/doc/html/boost_asio/index.html:1109:        boost::asio::error::ssl_errors &gt;, <a class="indexterm" href="reference/is_error_code_enum_lt__ssl_errors__gt_.html">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/index.html:1110:      boost::asio::error::ssl_errors &gt;</a>
/root/boost_1_87_0/doc/html/boost_asio/index.html:1113:        boost::asio::experimental::error::channel_errors &gt;, <a class="indexterm" href="reference/is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_.html">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/index.html:1114:      boost::asio::experimental::error::channel_errors &gt;</a>
/root/boost_1_87_0/doc/html/boost_asio/index.html:1117:        boost::asio::ssl::error::stream_errors &gt;, <a class="indexterm" href="reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.html">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/index.html:1118:      boost::asio::ssl::error::stream_errors &gt;</a>
/root/boost_1_87_0/doc/html/boost_asio/index.html:7205:          boost::asio::error::addrinfo_errors &gt;, <a class="indexterm" href="reference/is_error_code_enum_lt__addrinfo_errors__gt_/value.html">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/index.html:7206:        boost::asio::error::addrinfo_errors &gt;::value</a>
/root/boost_1_87_0/doc/html/boost_asio/index.html:7209:          boost::asio::error::basic_errors &gt;, <a class="indexterm" href="reference/is_error_code_enum_lt__basic_errors__gt_/value.html">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/index.html:7210:        boost::asio::error::basic_errors &gt;::value</a>
/root/boost_1_87_0/doc/html/boost_asio/index.html:7213:          boost::asio::error::misc_errors &gt;, <a class="indexterm" href="reference/is_error_code_enum_lt__misc_errors__gt_/value.html">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/index.html:7214:        boost::asio::error::misc_errors &gt;::value</a>
/root/boost_1_87_0/doc/html/boost_asio/index.html:7217:          boost::asio::error::netdb_errors &gt;, <a class="indexterm" href="reference/is_error_code_enum_lt__netdb_errors__gt_/value.html">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/index.html:7218:        boost::asio::error::netdb_errors &gt;::value</a>
/root/boost_1_87_0/doc/html/boost_asio/index.html:7221:          boost::asio::error::ssl_errors &gt;, <a class="indexterm" href="reference/is_error_code_enum_lt__ssl_errors__gt_/value.html">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/index.html:7222:        boost::asio::error::ssl_errors &gt;::value</a>
/root/boost_1_87_0/doc/html/boost_asio/index.html:7225:          boost::asio::experimental::error::channel_errors &gt;, <a class="indexterm" href="reference/is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_/value.html">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/index.html:7226:        boost::asio::experimental::error::channel_errors &gt;::value</a>
/root/boost_1_87_0/doc/html/boost_asio/index.html:7229:          boost::asio::ssl::error::stream_errors &gt;, <a class="indexterm" href="reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_/value.html">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/index.html:7230:        boost::asio::ssl::error::stream_errors &gt;::value</a>
/root/boost_1_87_0/doc/html/boost_asio/overview/composition/coro.html:514:          @c boost::asio::awaitable.
/root/boost_1_87_0/doc/html/boost_asio/overview/core/allocation.html:102:<span class="special">}</span> <span class="special">}</span> <span class="comment">// namespace boost::asio</span>
/root/boost_1_87_0/doc/html/boost_asio/overview/core/buffers.html:177:<pre class="programlisting">using namespace boost::asio::buffer_literals;
/root/boost_1_87_0/doc/html/boost_asio/overview/core/buffers.html:179:boost::asio::const_buffer b1 = "hello"_buf;
/root/boost_1_87_0/doc/html/boost_asio/overview/core/buffers.html:180:boost::asio::const_buffer b2 = 0xdeadbeef_buf;
/root/boost_1_87_0/doc/html/boost_asio/overview/core/buffers.html:181:boost::asio::const_buffer b3 = 0x01234567'89abcdef'01234567'89abcdef_buf;
/root/boost_1_87_0/doc/html/boost_asio/overview/core/buffers.html:182:boost::asio::const_buffer b4 = 0b1010101011001100_buf;
/root/boost_1_87_0/doc/html/boost_asio/overview/core/cancellation.html:111:<span class="special">}</span> <span class="special">}</span> <span class="comment">// namespace boost::asio</span>
/root/boost_1_87_0/doc/html/boost_asio/overview/core/line_based.html:130:<span class="special">}</span> <span class="special">}</span> <span class="comment">// namespace boost::asio</span>
/root/boost_1_87_0/doc/html/boost_asio/overview/core/strands.html:127:<span class="special">}</span> <span class="special">}</span> <span class="comment">// namespace boost::asio</span>
/root/boost_1_87_0/doc/html/boost_asio/reference/associated_immediate_executor.html:106:                  Otherwise returns boost::asio::require(ex, boost::asio::execution::blocking.never).
/root/boost_1_87_0/doc/html/boost_asio/reference/associated_immediate_executor_lt__reference_wrapper_lt__T__gt__comma__Executor__gt_/type.html:103
                    Otherwise returns boost::asio::require(ex, boost::asio::execution::blocking.never).
/root/boost_1_87_0/doc/html/boost_asio/reference/associated_immediate_executor_t.html:100:                  Otherwise returns boost::asio::require(ex, boost::asio::execution::blocking.never).
/root/boost_1_87_0/doc/html/boost_asio/reference/async_connect/overload1.html:82:  <span class="comment">// boost::asio::error::not_found. Otherwise, contains the</span>
/root/boost_1_87_0/doc/html/boost_asio/reference/async_connect/overload2.html:86:  <span class="comment">// boost::asio::error::not_found. Otherwise, contains the</span>
/root/boost_1_87_0/doc/html/boost_asio/reference/async_connect/overload3.html:104:  <span class="comment">// boost::asio::error::not_found. Otherwise, contains the</span>
/root/boost_1_87_0/doc/html/boost_asio/reference/async_connect/overload4.html:108:  <span class="comment">// boost::asio::error::not_found. Otherwise, contains the</span>
/root/boost_1_87_0/doc/html/boost_asio/reference/default_completion_token.html:71:                  Otherwise the typedef type is boost::asio::deferred_t.
/root/boost_1_87_0/doc/html/boost_asio/reference/default_completion_token_t.html:65:                  Otherwise the typedef type is boost::asio::deferred_t.
/root/boost_1_87_0/doc/html/boost_asio/reference/execution_context/add_service.html:77:<dt><span class="term">boost::asio::service_already_exists</span></dt>
/root/boost_1_87_0/doc/html/boost_asio/reference/execution_context/add_service.html:82:<dt><span class="term">boost::asio::invalid_service_owner</span></dt>
/root/boost_1_87_0/doc/html/boost_asio/reference/execution_context/make_service.html:70:<dt><span class="term">boost::asio::service_already_exists</span></dt>
/root/boost_1_87_0/doc/html/boost_asio/reference/experimental__coro.html:183:                  The traits of the coroutine. See boost::asio::experimental::coro_traits
/root/boost_1_87_0/doc/html/boost_asio/reference/experimental__generator.html:178:                  The traits of the coroutine. See boost::asio::experimental::coro_traits
/root/boost_1_87_0/doc/html/boost_asio/reference/experimental__task.html:178:                  The traits of the coroutine. See boost::asio::experimental::coro_traits
/root/boost_1_87_0/doc/html/boost_asio/reference/experimental__use_coro.html:40:        See the documentation for boost::asio::use_coro_t for a usage example.
/root/boost_1_87_0/doc/html/boost_asio/reference/io_context.html:341:                  (Deprecated: Use boost::asio::bind_executor().) Create a new handler
/root/boost_1_87_0/doc/html/boost_asio/reference/io_context.html:589:        an object of type boost::asio::executor_work_guard&lt;io_context::executor_type&gt;:
/root/boost_1_87_0/doc/html/boost_asio/reference/io_context__strand.html:165:                  (Deprecated: Use boost::asio::bind_executor().) Create a new handler
/root/boost_1_87_0/doc/html/boost_asio/reference/ip__address__gt_.html:9:<link rel="prev" href="is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::ssl::error::stream_errors &gt;::value">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__addrinfo_errors__gt_/value.html:4:<title>boost::system::is_error_code_enum&lt; boost::asio::error::addrinfo_errors &gt;::value</title>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__addrinfo_errors__gt_/value.html:8:<link rel="up" href="../is_error_code_enum_lt__addrinfo_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::addrinfo_errors &gt;">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__addrinfo_errors__gt_/value.html:9:<link rel="prev" href="../is_error_code_enum_lt__addrinfo_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::addrinfo_errors &gt;">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__addrinfo_errors__gt_/value.html:10:<link rel="next" href="../is_error_code_enum_lt__basic_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::basic_errors &gt;">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__addrinfo_errors__gt_/value.html:28:<a name="boost_asio.reference.is_error_code_enum_lt__addrinfo_errors__gt_.value"></a><a class="link" href="value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::addrinfo_errors &gt;::value">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__addrinfo_errors__gt_/value.html:29:        boost::asio::error::addrinfo_errors &gt;::value</a>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__addrinfo_errors__gt_.html:4:<title>boost::system::is_error_code_enum&lt; boost::asio::error::addrinfo_errors &gt;</title>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__addrinfo_errors__gt_.html:10:<link rel="next" href="is_error_code_enum_lt__addrinfo_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::addrinfo_errors &gt;::value">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__addrinfo_errors__gt_.html:28:<a name="boost_asio.reference.is_error_code_enum_lt__addrinfo_errors__gt_"></a><a class="link" href="is_error_code_enum_lt__addrinfo_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::addrinfo_errors &gt;">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__addrinfo_errors__gt_.html:29:      boost::asio::error::addrinfo_errors &gt;</a>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__addrinfo_errors__gt_.html:62:                  <a class="link" href="is_error_code_enum_lt__addrinfo_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::addrinfo_errors &gt;::value"><span class="bold"><strong>value</strong></span></a> <span class="silver">[static]</span>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_/value.html:4:<title>boost::system::is_error_code_enum&lt; boost::asio::error::basic_errors &gt;::value</title>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_/value.html:8:<link rel="up" href="../is_error_code_enum_lt__basic_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::basic_errors &gt;">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_/value.html:9:<link rel="prev" href="../is_error_code_enum_lt__basic_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::basic_errors &gt;">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_/value.html:10:<link rel="next" href="../is_error_code_enum_lt__misc_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::misc_errors &gt;">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_/value.html:28:<a name="boost_asio.reference.is_error_code_enum_lt__basic_errors__gt_.value"></a><a class="link" href="value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::basic_errors &gt;::value">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_/value.html:29:        boost::asio::error::basic_errors &gt;::value</a>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_.html:4:<title>boost::system::is_error_code_enum&lt; boost::asio::error::basic_errors &gt;</title>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_.html:9:<link rel="prev" href="is_error_code_enum_lt__addrinfo_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::addrinfo_errors &gt;::value">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_.html:10:<link rel="next" href="is_error_code_enum_lt__basic_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::basic_errors &gt;::value">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_.html:28:<a name="boost_asio.reference.is_error_code_enum_lt__basic_errors__gt_"></a><a class="link" href="is_error_code_enum_lt__basic_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::basic_errors &gt;">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_.html:29:      boost::asio::error::basic_errors &gt;</a>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_.html:62:                  <a class="link" href="is_error_code_enum_lt__basic_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::basic_errors &gt;::value"><span class="bold"><strong>value</strong></span></a> <span class="silver">[static]</span>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_/value.html:4:<title>boost::system::is_error_code_enum&lt; boost::asio::experimental::error::channel_errors &gt;::value</title>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_/value.html:8:<link rel="up" href="../is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::experimental::error::channel_errors &gt;">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_/value.html:9:<link rel="prev" href="../is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::experimental::error::channel_errors &gt;">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_/value.html:10:<link rel="next" href="../is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::ssl::error::stream_errors &gt;">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_/value.html:28:<a name="boost_asio.reference.is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_.value"></a><a class="link" href="value.html" title="boost::system::is_error_code_enum&lt; boost::asio::experimental::error::channel_errors &gt;::value">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_/value.html:29:        boost::asio::experimental::error::channel_errors &gt;::value</a>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_.html:4:<title>boost::system::is_error_code_enum&lt; boost::asio::experimental::error::channel_errors &gt;</title>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_.html:9:<link rel="prev" href="is_error_code_enum_lt__ssl_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::ssl_errors &gt;::value">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_.html:10:<link rel="next" href="is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::experimental::error::channel_errors &gt;::value">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_.html:28:<a name="boost_asio.reference.is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_"></a><a class="link" href="is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::experimental::error::channel_errors &gt;">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_.html:29:      boost::asio::experimental::error::channel_errors &gt;</a>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_.html:62:                  <a class="link" href="is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::experimental::error::channel_errors &gt;::value"><span class="bold"><strong>value</strong></span></a> <span class="silver">[static]</span>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_/value.html:4:<title>boost::system::is_error_code_enum&lt; boost::asio::ssl::error::stream_errors &gt;::value</title>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_/value.html:8:<link rel="up" href="../is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::ssl::error::stream_errors &gt;">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_/value.html:9:<link rel="prev" href="../is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::ssl::error::stream_errors &gt;">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_/value.html:28:<a name="boost_asio.reference.is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.value"></a><a class="link" href="value.html" title="boost::system::is_error_code_enum&lt; boost::asio::ssl::error::stream_errors &gt;::value">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_/value.html:29:        boost::asio::ssl::error::stream_errors &gt;::value</a>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.html:4:<title>boost::system::is_error_code_enum&lt; boost::asio::ssl::error::stream_errors &gt;</title>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.html:9:<link rel="prev" href="is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::experimental::error::channel_errors &gt;::value">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.html:10:<link rel="next" href="is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::ssl::error::stream_errors &gt;::value">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.html:28:<a name="boost_asio.reference.is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_"></a><a class="link" href="is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::ssl::error::stream_errors &gt;">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.html:29:      boost::asio::ssl::error::stream_errors &gt;</a>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.html:62:                  <a class="link" href="is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::ssl::error::stream_errors &gt;::value"><span class="bold"><strong>value</strong></span></a> <span class="silver">[static]</span>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_/value.html:4:<title>boost::system::is_error_code_enum&lt;
boost::asio::error::misc_errors &gt;::value</title>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_/value.html:8:<link rel="up" href="../is_error_code_enum_lt__misc_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::misc_errors &gt;">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_/value.html:9:<link rel="prev" href="../is_error_code_enum_lt__misc_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::misc_errors &gt;">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_/value.html:10:<link rel="next" href="../is_error_code_enum_lt__netdb_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::netdb_errors &gt;">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_/value.html:28:<a name="boost_asio.reference.is_error_code_enum_lt__misc_errors__gt_.value"></a><a class="link" href="value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::misc_errors &gt;::value">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_/value.html:29:        boost::asio::error::misc_errors &gt;::value</a>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_.html:4:<title>boost::system::is_error_code_enum&lt; boost::asio::error::misc_errors &gt;</title>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_.html:9:<link rel="prev" href="is_error_code_enum_lt__basic_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::basic_errors &gt;::value">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_.html:10:<link rel="next" href="is_error_code_enum_lt__misc_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::misc_errors &gt;::value">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_.html:28:<a name="boost_asio.reference.is_error_code_enum_lt__misc_errors__gt_"></a><a class="link" href="is_error_code_enum_lt__misc_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::misc_errors &gt;">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_.html:29:      boost::asio::error::misc_errors &gt;</a>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_.html:62:                  <a class="link" href="is_error_code_enum_lt__misc_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::misc_errors &gt;::value"><span class="bold"><strong>value</strong></span></a> <span class="silver">[static]</span>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_/value.html:4:<title>boost::system::is_error_code_enum&lt; boost::asio::error::netdb_errors &gt;::value</title>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_/value.html:8:<link rel="up" href="../is_error_code_enum_lt__netdb_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::netdb_errors &gt;">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_/value.html:9:<link rel="prev" href="../is_error_code_enum_lt__netdb_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::netdb_errors &gt;">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_/value.html:10:<link rel="next" href="../is_error_code_enum_lt__ssl_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::ssl_errors &gt;">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_/value.html:28:<a name="boost_asio.reference.is_error_code_enum_lt__netdb_errors__gt_.value"></a><a class="link" href="value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::netdb_errors &gt;::value">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_/value.html:29:        boost::asio::error::netdb_errors &gt;::value</a>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_.html:4:<title>boost::system::is_error_code_enum&lt; boost::asio::error::netdb_errors &gt;</title>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_.html:9:<link rel="prev" href="is_error_code_enum_lt__misc_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::misc_errors &gt;::value">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_.html:10:<link rel="next" href="is_error_code_enum_lt__netdb_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::netdb_errors &gt;::value">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_.html:28:<a name="boost_asio.reference.is_error_code_enum_lt__netdb_errors__gt_"></a><a class="link" href="is_error_code_enum_lt__netdb_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::netdb_errors &gt;">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_.html:29:      boost::asio::error::netdb_errors &gt;</a>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_.html:62:                  <a class="link" href="is_error_code_enum_lt__netdb_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::netdb_errors &gt;::value"><span class="bold"><strong>value</strong></span></a> <span class="silver">[static]</span>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_/value.html:4:<title>boost::system::is_error_code_enum&lt; boost::asio::error::ssl_errors &gt;::value</title>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_/value.html:8:<link rel="up" href="../is_error_code_enum_lt__ssl_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::ssl_errors &gt;">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_/value.html:9:<link rel="prev" href="../is_error_code_enum_lt__ssl_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::ssl_errors &gt;">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_/value.html:10:<link rel="next" href="../is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::experimental::error::channel_errors &gt;">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_/value.html:28:<a name="boost_asio.reference.is_error_code_enum_lt__ssl_errors__gt_.value"></a><a class="link" href="value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::ssl_errors &gt;::value">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_/value.html:29:        boost::asio::error::ssl_errors &gt;::value</a>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_.html:4:<title>boost::system::is_error_code_enum&lt; boost::asio::error::ssl_errors &gt;</title>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_.html:9:<link rel="prev" href="is_error_code_enum_lt__netdb_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::netdb_errors &gt;::value">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_.html:10:<link rel="next" href="is_error_code_enum_lt__ssl_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::ssl_errors &gt;::value">
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_.html:28:<a name="boost_asio.reference.is_error_code_enum_lt__ssl_errors__gt_"></a><a class="link" href="is_error_code_enum_lt__ssl_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::ssl_errors &gt;">boost::system::is_error_code_enum&lt;
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_.html:29:      boost::asio::error::ssl_errors &gt;</a>
/root/boost_1_87_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_.html:62:                  <a class="link" href="is_error_code_enum_lt__ssl_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::ssl_errors &gt;::value"><span class="bold"><strong>value</strong></span></a> <span class="silver">[static]</span>
/root/boost_1_87_0/doc/html/boost_asio/reference/placeholders__results.html:36:        such as boost::asio::basic_resolver::async_resolve.
/root/boost_1_87_0/doc/html/boost_asio/reference/yield_context.html:10:<link rel="next" href="is_error_code_enum_lt__addrinfo_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::addrinfo_errors &gt;">
/root/boost_1_87_0/doc/html/boost_asio/std_executors.html:237:<span class="special">}</span> <span class="special">}</span> <span class="comment">// namespace boost::asio</span>
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tutdaytime1.html:90:        a specific IP version. The boost::asio::connect() function does this for
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tutdaytime1.html:101:        We use a <code class="computeroutput"><span class="identifier">std</span><span class="special">::</span><span class="identifier">array</span></code> to hold the received data. The boost::asio::buffer()
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tutdaytime1.html:116:        function will exit with the boost::asio::error::eof error, which is how we
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tutdaytime3.html:143:        we call boost::asio::async_write() to serve the data to the client. Note
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tutdaytime3.html:144:        that we are using boost::asio::async_write(), rather than <a class="link" href="../reference/basic_stream_socket/async_write_some.html" title="basic_stream_socket::async_write_some">ip::tcp::socket::async_write_some()</a>,
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tutdaytime3.html:159:        In this program, both of the argument placeholders (boost::asio::placeholders::error
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tutdaytime3.html:160:        and boost::asio::placeholders::bytes_transferred) could potentially have
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tutdaytime3.html:205:        The boost::asio::async_write() call used to initiate the call can then be
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tutdaytime6.html:131:        In this program, both of the argument placeholders (boost::asio::placeholders::error
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tutdaytime6.html:132:        and boost::asio::placeholders::bytes_transferred) could potentially have
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tuttimer1.html:57:        Next we declare an object of type boost::asio::steady_timer. The core asio
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tuttimer2.html:67:        Finally, we must call the boost::asio::io_context::run() member function
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tuttimer2.html:72:        be called from threads that are currently calling boost::asio::io_context::run().
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tuttimer2.html:73:        Therefore unless the boost::asio::io_context::run() function is called the
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tuttimer2.html:77:        The boost::asio::io_context::run() function will also continue to run while
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tuttimer2.html:84:        calling boost::asio::io_context::run(). For example, if we had omitted the
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tuttimer2.html:86:        the io_context would not have had any work to do, and consequently boost::asio::io_context::run()
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tuttimer3.html:67:        Timer.2 we learnt that the boost::asio::io_context::run() function completes
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tuttimer3.html:95:        In this example, the boost::asio::placeholders::error argument to <code class="computeroutput"><span class="identifier">std</span><span class="special">::</span><span class="identifier">bind</span></code>
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tuttimer4.html:70:        You will note that the boost::asio::placeholders::error placeholder is not
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tuttimer5.html:37:        by calling the boost::asio::io_context::run() function from one thread only.
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tuttimer5.html:39:        handlers will only be called from threads that are currently calling boost::asio::io_context::run().
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tuttimer5.html:40:        Consequently, calling boost::asio::io_context::run() from only one thread
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tuttimer5.html:58:        is to have a pool of threads calling boost::asio::io_context::run(). However,
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tuttimer5.html:77:        In addition to initialising a pair of boost::asio::steady_timer members,
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tuttimer5.html:79:        member, an object of type boost::asio::strand&lt;boost::asio::io_context::executor_type&gt;.
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tuttimer5.html:86:        threads that are calling boost::asio::io_context::run(). Of course, the handlers
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tuttimer5.html:101:        to an boost::asio::strand&lt;boost::asio::io_context::executor_type&gt; object.
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tuttimer5.html:102:        The boost::asio::bind_executor() function returns a new handler that automatically
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tuttimer5.html:163:        boost::asio::io_context::run() to be called from two threads: the main thread
/root/boost_1_87_0/doc/html/boost_asio/tutorial/tuttimer5.html:167:        Just as it would with a call from a single thread, concurrent calls to boost::asio::io_context::run()
/root/boost_1_87_0/doc/html/doxygen/async_8hpp_1a10a930fbf57b0e02309086eea24a76dd.html:78:<tr><td align="left" valign="top"><p><code class="computeroutput">on_exit</code> uses <code class="computeroutput">boost::asio::signal_set</code> to listen for <code class="computeroutput">SIGCHLD</code> on posix, and so has the same restrictions as that class (do not register a handler for <code class="computeroutput">SIGCHLD</code> except by using <code class="computeroutput">boost::asio::signal_set</code>). </p></td></tr>
/root/boost_1_87_0/doc/html/doxygen/classboost_1_1process_1_1v1_1_1async__pipe.html:91:<p>Class implementing an asnychronous I/O-Object for use with boost.asio. It is based on the corresponding I/O Object, that is either boost::asio::windows::stream_handle or boost::asio::posix::stream_descriptor.</p>
/root/boost_1_87_0/doc/html/doxygen/classboost_1_1process_1_1v1_1_1async__pipe.html:92:<p>It can be used directly with boost::asio::async_read or async_write.</p>
/root/boost_1_87_0/doc/html/doxygen/io_8hpp_1a08f2612fd4816c30079d5cfd3152e3b9.html:135:<li class="listitem"><p><code class="computeroutput">boost::asio::mutable_buffer</code>  <a href="#ftn.id-1.3.30.4.8.17.5.4.4.4.4.1.1.1.2" class="footnote" name="id-1.3.30.4.8.17.5.4.4.4.4.1.1.1.2"><sup class="footnote">[31]</sup></a> </p></li>
/root/boost_1_87_0/doc/html/doxygen/io_8hpp_1a08f2612fd4816c30079d5cfd3152e3b9.html:136:<li class="listitem"><p><code class="computeroutput">boost::asio::streambuf</code></p></li>
/root/boost_1_87_0/doc/html/doxygen/io_8hpp_1a08f2612fd4816c30079d5cfd3152e3b9.html:155:<tr><td align="left" valign="top"><p><code class="computeroutput">boost::asio::buffer</code> is also available in the <code class="computeroutput"><a class="link" href="../">boost::process</a></code> namespace.</p></td></tr>
/root/boost_1_87_0/doc/html/doxygen/io_8hpp_1a08f2612fd4816c30079d5cfd3152e3b9.html:164:<tr><td align="left" valign="top"><p>This feature requires <code class="computeroutput">boost/process/async.hpp</code> to be included and a reference to <code class="computeroutput">boost::asio::io_context</code> to be passed to the launching function.</p></td></tr>
/root/boost_1_87_0/doc/html/doxygen/io_8hpp_1a08f2612fd4816c30079d5cfd3152e3b9.html:194:<div id="ftn.id-1.3.30.4.8.17.5.4.4.4.4.1.1.1.2" class="footnote"><p><a href="#id-1.3.30.4.8.17.5.4.4.4.4.1.1.1.2" class="para"><sup class="para">[31] </sup></a> Constructed with <code class="computeroutput">boost::asio::buffer</code></p></div>
/root/boost_1_87_0/doc/html/doxygen/io_8hpp_1a7cbecdde6810cc19e95fa8e7401a4947.html:117:<li class="listitem"><p><code class="computeroutput">boost::asio::const_buffer</code>  <a href="#ftn.id-1.3.30.4.8.17.4.4.3.4.4.1.1.1.2" class="footnote" name="id-1.3.30.4.8.17.4.4.3.4.4.1.1.1.2"><sup class="footnote">[29]</sup></a> </p></li>
/root/boost_1_87_0/doc/html/doxygen/io_8hpp_1a7cbecdde6810cc19e95fa8e7401a4947.html:118:<li class="listitem"><p><code class="computeroutput">boost::asio::mutable_buffer</code>  <a href="#ftn.id-1.3.30.4.8.17.4.4.3.4.4.1.2.1.2" class="footnote" name="id-1.3.30.4.8.17.4.4.3.4.4.1.2.1.2"><sup class="footnote">[30]</sup></a> </p></li>
/root/boost_1_87_0/doc/html/doxygen/io_8hpp_1a7cbecdde6810cc19e95fa8e7401a4947.html:119:<li class="listitem"><p><code class="computeroutput">boost::asio::streambuf</code></p></li>
/root/boost_1_87_0/doc/html/doxygen/io_8hpp_1a7cbecdde6810cc19e95fa8e7401a4947.html:155:<tr><td align="left" valign="top"><p><code class="computeroutput">boost::asio::buffer</code> is also available in the <code class="computeroutput"><a class="link" href="../">boost::process</a></code> namespace.</p></td></tr>
/root/boost_1_87_0/doc/html/doxygen/io_8hpp_1a7cbecdde6810cc19e95fa8e7401a4947.html:164:<tr><td align="left" valign="top"><p>This feature requires <code class="computeroutput">boost/process/async.hpp</code> to be included and a reference to <code class="computeroutput">boost::asio::io_context</code> to be passed to the launching function.</p></td></tr>
/root/boost_1_87_0/doc/html/doxygen/io_8hpp_1a7cbecdde6810cc19e95fa8e7401a4947.html:194:<div id="ftn.id-1.3.30.4.8.17.4.4.3.4.4.1.1.1.2" class="footnote"><p><a href="#id-1.3.30.4.8.17.4.4.3.4.4.1.1.1.2" class="para"><sup class="para">[29] </sup></a> Constructed with <code class="computeroutput">boost::asio::buffer</code></p></div>
/root/boost_1_87_0/doc/html/doxygen/io_8hpp_1a7cbecdde6810cc19e95fa8e7401a4947.html:195:<div id="ftn.id-1.3.30.4.8.17.4.4.3.4.4.1.2.1.2" class="footnote"><p><a href="#id-1.3.30.4.8.17.4.4.3.4.4.1.2.1.2" class="para"><sup class="para">[30] </sup></a> Constructed with <code class="computeroutput">boost::asio::buffer</code></p></div>
/root/boost_1_87_0/doc/html/doxygen/spawn_8hpp_1a464ec8d37cd8d3ee643346bc935961e3.html:56:<tr><td align="left" valign="top"><p>This function does not allow asynchronous operations, since it cannot wait for the end of the process. It will fail to compile if a reference to <code class="computeroutput">boost::asio::io_context</code> is passed. </p></td></tr>
/root/boost_1_87_0/doc/html/doxygen/structboost_1_1process_1_1v2_1_1basic__popen.html:237:<td>boost::system::system_error Thrown on failure. An error code of boost::asio::error::eof indicates that the connection was closed by the subprocess.</td>
/root/boost_1_87_0/doc/html/doxygen/structboost_1_1process_1_1v2_1_1basic__popen.html:343:<p> Regardless of whether the asynchronous operation completes immediately or not, the completion handler will not be invoked from within this function. On immediate completion, invocation of the handler will be performed in a manner equivalent to using boost::asio::post().</p>
/root/boost_1_87_0/doc/html/doxygen/structboost_1_1process_1_1v2_1_1basic__popen.html:398:<td>boost::system::system_error Thrown on failure. An error code of boost::asio::error::eof indicates that the connection was closed by the peer.</td>
/root/boost_1_87_0/doc/html/doxygen/structboost_1_1process_1_1v2_1_1basic__popen.html:505:<p> Regardless of whether the asynchronous operation completes immediately or not, the completion handler will not be invoked from within this function. On immediate completion, invocation of the handler will be performed in a manner equivalent to using boost::asio::post().</p>
/root/boost_1_87_0/doc/html/process.html:668:<pre class="programlisting"><a href="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/io_service.html" target="_top">boost::asio::io_service</a> <span class="identifier">ios</span><span class="special">;</span>
/root/boost_1_87_0/doc/html/process.html:675:<a href="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/async_read.html" target="_top">boost::asio::async_read</a><span class="special">(</span><span class="identifier">ap</span><span class="special">,</span> <a href="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/buffer.html" target="_top">boost::asio::buffer</a><span class="special">(</span><span class="identifier">buf</span><span class="special">),</span>
/root/boost_1_87_0/doc/html/process.html:686:          to an <a href="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/io_service.html" target="_top">boost::asio::io_service</a>.
/root/boost_1_87_0/doc/html/process.html:690:<pre class="programlisting"><a href="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/io_service.html" target="_top">boost::asio::io_service</a> <span class="identifier">ios</span><span class="special">;</span>
/root/boost_1_87_0/doc/html/process.html:693:<code class="computeroutput"><a class="link" href="doxygen/classboost_1_1process_1_1v1_1_1child.html" title="Class child">bp::child</a></code> <span class="identifier">c</span><span class="special">(</span><code class="computeroutput"><a class="link" href="doxygen/search__path_8hpp_1a89767c1834c03e52b4521b0898124bf9.html" title="Function search_path">bp::search_path</a></code><span class="special">(</span><span class="string">"g++"</span><span class="special">),</span> <span class="string">"main.cpp"</span><span class="special">,</span> <code class="computeroutput"><a class="link" href="doxygen/io_8hpp_1a08f2612fd4816c30079d5cfd3152e3b9.html" title="Global std_out">bp::std_out</a></code> <span class="special">&gt;</span> <a href="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/buffer.html" target="_top">boost::asio::buffer</a><span class="special">(</span><span class="identifier">buf</span><span class="special">),</span> <span class="identifier">ios</span><span class="special">);</span>
/root/boost_1_87_0/doc/html/process.html:706:            Passing an instance of <a href="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/io_service.html" target="_top">boost::asio::io_service</a>
/root/boost_1_87_0/doc/html/process.html:715:          a <a href="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/io_service.html" target="_top">boost::asio::io_service</a>)
/root/boost_1_87_0/doc/html/process.html:724:<pre class="programlisting"><span class="identifier">boost</span><span class="special">::</span><span class="identifier">asio</span><span class="special">::</span><a href="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/io_service.html" target="_top">boost::asio::io_service</a> <span class="identifier">ios</span><span class="special">;</span>
/root/boost_1_87_0/doc/html/process.html:1256:          the <a href="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/io_context.html" target="_top">boost::asio::io_context</a>
/root/boost_1_87_0/doc/html/process.html:1266:        <a href="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/io_context.html" target="_top">boost::asio::io_context</a> <span class="special">&amp;</span> <span class="identifier">ios</span> <span class="special">=</span> <code class="computeroutput"><a class="link" href="doxygen/namespaceboost_1_1process_1_1v1_1_1extend_1aee5420b5227afd80edda9f5fac9334fc.html" title="Function template get_io_context">ex::get_io_context</a></code><span class="special">(</span><span class="identifier">exec</span><span class="special">.</span><span class="identifier">seq</span><span class="special">);</span> <span class="comment">//gives us a reference and a compiler error if not present.</span>
/root/boost_1_87_0/libs/asio/doc/examples.qbk:332:Example of using the boost::asio::spawn() function, a wrapper around the
/root/boost_1_87_0/libs/asio/doc/history.qbk:33:  `boost::asio::disposition_traits` directly, but instead:
/root/boost_1_87_0/libs/asio/doc/history.qbk:35:    `boost::asio::no_error` (of type `boost::asio::no_error_t`).
/root/boost_1_87_0/libs/asio/doc/history.qbk:36:  * Use `boost::asio::to_exception_ptr` to convert a disposition to a
/root/boost_1_87_0/libs/asio/doc/history.qbk:38:  * Use `boost::asio::throw_exception` to throw an exception that corresponds to
/root/boost_1_87_0/libs/asio/doc/history.qbk:40:    `boost::asio::no_error`.
/root/boost_1_87_0/libs/asio/doc/history.qbk:41:* Added disposition support to the `boost::asio::use_future` completion token,
/root/boost_1_87_0/libs/asio/doc/history.qbk:42:  `boost::asio::awaitable<>`-based coroutines, `boost::asio::spawn()`, and
/root/boost_1_87_0/libs/asio/doc/history.qbk:43:  `boost::asio::experimental::cancellation_condition`.
/root/boost_1_87_0/libs/asio/doc/history.qbk:49:* Added `boost::asio::config`. The `config` class provides access to
/root/boost_1_87_0/libs/asio/doc/history.qbk:58:    boost::asio::io_context ctx{boost::asio::config_from_env{}};
/root/boost_1_87_0/libs/asio/doc/history.qbk:63:    boost::asio::config cfg{ctx};
/root/boost_1_87_0/libs/asio/doc/history.qbk:361:* Removed deprecated functionality from the `boost::asio::execution` namespace.
/root/boost_1_87_0/libs/asio/doc/history.qbk:747:* Moved `append`, `prepend`, `as_tuple`, and `deferred` to the `boost::asio`
/root/boost_1_87_0/libs/asio/doc/history.qbk:750:  under the `boost::asio::experimental` namespace for backwards compatibility.
/root/boost_1_87_0/libs/asio/doc/history.qbk:1591:      boost::asio::buffer(data), as_single(use_awaitable));
/root/boost_1_87_0/libs/asio/doc/history.qbk:1601:    auto [e, n] = co_await socket.async_read_some(boost::asio::buffer(data));
/root/boost_1_87_0/libs/asio/doc/overview/allocation.qbk:25:  boost::asio::associated_allocator_t<Handler> a = boost::asio::get_associated_allocator(h);
/root/boost_1_87_0/libs/asio/doc/overview/allocation.qbk:68:  } } // namespace boost::asio
/root/boost_1_87_0/libs/asio/doc/overview/basics.qbk:21:`boost::asio::io_context` object, `boost::asio::thread_pool` object, or
/root/boost_1_87_0/libs/asio/doc/overview/basics.qbk:22:`boost::asio::system_context`. This [*I/O execution context] represents [*your
/root/boost_1_87_0/libs/asio/doc/overview/basics.qbk:25:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/doc/overview/basics.qbk:30:  boost::asio::ip::tcp::socket socket(io_context);
/root/boost_1_87_0/libs/asio/doc/overview/buffers.qbk:61:The class `boost::asio::basic_streambuf` is derived from `std::basic_streambuf` to
/root/boost_1_87_0/libs/asio/doc/overview/buffers.qbk:99:  boost::asio::streambuf sb;
/root/boost_1_87_0/libs/asio/doc/overview/buffers.qbk:101:  std::size_t n = boost::asio::read_until(sock, sb, '\n');
/root/boost_1_87_0/libs/asio/doc/overview/buffers.qbk:102:  boost::asio::streambuf::const_buffers_type bufs = sb.data();
/root/boost_1_87_0/libs/asio/doc/overview/buffers.qbk:104:      boost::asio::buffers_begin(bufs),
/root/boost_1_87_0/libs/asio/doc/overview/buffers.qbk:105:      boost::asio::buffers_begin(bufs) + n);
/root/boost_1_87_0/libs/asio/doc/overview/buffers.qbk:109:The `_buf` literal suffix, defined in namespace `boost::asio::buffer_literals`, may be
/root/boost_1_87_0/libs/asio/doc/overview/buffers.qbk:115:using namespace boost::asio::buffer_literals;
/root/boost_1_87_0/libs/asio/doc/overview/buffers.qbk:117:boost::asio::const_buffer b1 = "hello"_buf;
/root/boost_1_87_0/libs/asio/doc/overview/buffers.qbk:118:boost::asio::const_buffer b2 = 0xdeadbeef_buf;
/root/boost_1_87_0/libs/asio/doc/overview/buffers.qbk:119:boost::asio::const_buffer b3 = 0x01234567'89abcdef'01234567'89abcdef_buf;
/root/boost_1_87_0/libs/asio/doc/overview/buffers.qbk:120:boost::asio::const_buffer b4 = 0b1010101011001100_buf;
/root/boost_1_87_0/libs/asio/doc/overview/buffers.qbk:148:   boost::asio::async_write(sock, boost::asio::buffer(msg), my_handler);
/root/boost_1_87_0/libs/asio/doc/overview/cancellation.qbk:31:  boost::asio::associated_cancellation_slot_t<Handler> s
/root/boost_1_87_0/libs/asio/doc/overview/cancellation.qbk:32:    = boost::asio::get_associated_cancellation_slot(h);
/root/boost_1_87_0/libs/asio/doc/overview/cancellation.qbk:77:  } } // namespace boost::asio
/root/boost_1_87_0/libs/asio/doc/overview/cancellation.qbk:84:  boost::asio::async_read(my_socket, my_buffer,
/root/boost_1_87_0/libs/asio/doc/overview/cancellation.qbk:85:      boost::asio::bind_cancellation_slot(
/root/boost_1_87_0/libs/asio/doc/overview/cancellation.qbk:110:          boost::asio::bind_cancellation_slot(
/root/boost_1_87_0/libs/asio/doc/overview/cancellation.qbk:124:      cancel_signal_.emit(boost::asio::cancellation_type::total);
/root/boost_1_87_0/libs/asio/doc/overview/cancellation.qbk:129:    boost::asio::cancellation_signal cancel_signal_;
/root/boost_1_87_0/libs/asio/doc/overview/channels.qbk:30:  bool ok = ch.try_send(boost::asio::error::eof, 123);
/root/boost_1_87_0/libs/asio/doc/overview/channels.qbk:35:  ch.async_send(boost::asio::error::eof, 123,
/root/boost_1_87_0/libs/asio/doc/overview/compose.qbk:31:    boost::asio::mutable_buffer buffer_;
/root/boost_1_87_0/libs/asio/doc/overview/compose.qbk:54:          boost::asio::async_write(socket_, buffer_,
/root/boost_1_87_0/libs/asio/doc/overview/compose.qbk:55:              boost::asio::transfer_exactly(n),
/root/boost_1_87_0/libs/asio/doc/overview/compose.qbk:71:      boost::asio::mutable_buffer buffer,
/root/boost_1_87_0/libs/asio/doc/overview/compose.qbk:73:    typename boost::asio::async_result<
/root/boost_1_87_0/libs/asio/doc/overview/compose.qbk:77:    return boost::asio::async_compose<CompletionToken,
/root/boost_1_87_0/libs/asio/doc/overview/coro.qbk:24:           boost::asio::buffer(buf), deferred);
/root/boost_1_87_0/libs/asio/doc/overview/coro.qbk:198:@c boost::asio::awaitable.
/root/boost_1_87_0/libs/asio/doc/overview/coro.qbk:209:  using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/doc/overview/coro.qbk:211:  boost::asio::experimental::coro<std::string> reader(tcp::socket& sock)
/root/boost_1_87_0/libs/asio/doc/overview/coro.qbk:216:      std::size_t n = co_await boost::asio::async_read_until(
/root/boost_1_87_0/libs/asio/doc/overview/coro.qbk:217:          sock, boost::asio::dynamic_buffer(buf), '\n',
/root/boost_1_87_0/libs/asio/doc/overview/coro.qbk:218:          boost::asio::deferred);
/root/boost_1_87_0/libs/asio/doc/overview/coro.qbk:224:  boost::asio::awaitable<void> consumer(tcp::socket sock)
/root/boost_1_87_0/libs/asio/doc/overview/coro.qbk:227:    auto msg1 = co_await r.async_resume(boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/overview/coro.qbk:229:    auto msg2 = co_await r.async_resume(boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/overview/coro.qbk:233:  boost::asio::awaitable<void> listen(tcp::acceptor& acceptor)
/root/boost_1_87_0/libs/asio/doc/overview/coro.qbk:239:          consumer(co_await acceptor.async_accept(boost::asio::use_awaitable)),
/root/boost_1_87_0/libs/asio/doc/overview/coro.qbk:240:          boost::asio::detached);
/root/boost_1_87_0/libs/asio/doc/overview/coro.qbk:246:    boost::asio::io_context ctx;
/root/boost_1_87_0/libs/asio/doc/overview/coro.qbk:248:    co_spawn(ctx, listen(acceptor), boost::asio::detached);
/root/boost_1_87_0/libs/asio/doc/overview/coroutine.qbk:15:  struct session : boost::asio::coroutine
/root/boost_1_87_0/libs/asio/doc/overview/coroutine.qbk:32:          yield socket_->async_read_some(boost::asio::buffer(*buffer_), *this);
/root/boost_1_87_0/libs/asio/doc/overview/coroutine.qbk:33:          yield boost::asio::async_write(*socket_, boost::asio::buffer(*buffer_, n), *this);
/root/boost_1_87_0/libs/asio/doc/overview/cpp2011.qbk:117:      socket->async_read_some(boost::asio::buffer(*buffer), std::move(*this));
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:17:  boost::asio::co_spawn(executor, echo(std::move(socket)), boost::asio::detached);
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:21:  boost::asio::awaitable<void> echo(tcp::socket socket)
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:28:        std::size_t n = co_await socket.async_read_some(boost::asio::buffer(data), boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:29:        co_await async_write(socket, boost::asio::buffer(data, n), boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:55:boost_asio.reference.detached `boost::asio::detached`], which is used to explicitly ignore
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:63:  std::size_t n = co_await socket.async_read_some(boost::asio::buffer(data), boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:91:  boost::asio::awaitable<void> echo(tcp::socket socket)
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:97:        co_await socket.async_read_some(boost::asio::buffer(data),
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:98:          boost::asio::as_tuple(boost::asio::use_awaitable));
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:110:  boost::asio::awaitable<void> echo(tcp::socket socket)
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:116:          boost::asio::buffer(data), boost::asio::as_tuple(boost::asio::use_awaitable));
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:129:  boost::asio::awaitable<void> echo(tcp::socket socket)
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:135:      std::size_t n = co_await socket.async_read_some(boost::asio::buffer(data),
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:136:          boost::asio::redirect_error(boost::asio::use_awaitable, ec));
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:153:  boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:155:    boost::asio::cancellation_state cs
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:156:      = co_await boost::asio::this_coro::cancellation_state;
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:160:    if (cs.cancelled() != boost::asio::cancellation_type::none)
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:221:  using namespace boost::asio::experimental::awaitable_operators;
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:234:    return boost::asio::async_initiate<
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:236:        boost::asio::co_composed<
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:244:                  boost::asio::enable_terminal_cancellation());
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:250:                      boost::asio::buffer(data), boost::asio::deferred);
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:252:                  co_await boost::asio::async_write(socket,
/root/boost_1_87_0/libs/asio/doc/overview/cpp20_coroutines.qbk:253:                      boost::asio::buffer(data, n), boost::asio::deferred);
/root/boost_1_87_0/libs/asio/doc/overview/deferred.qbk:16:      boost::asio::deferred);
/root/boost_1_87_0/libs/asio/doc/overview/deferred.qbk:25:      boost::asio::deferred);
/root/boost_1_87_0/libs/asio/doc/overview/deferred.qbk:29:      boost::asio::use_future);
/root/boost_1_87_0/libs/asio/doc/overview/deferred.qbk:35:      boost::asio::deferred(
/root/boost_1_87_0/libs/asio/doc/overview/deferred.qbk:42:              boost::asio::deferred);
/root/boost_1_87_0/libs/asio/doc/overview/deferred.qbk:45:  std::future<void> = std::move(deferred_op)(boost::asio::use_future);
/root/boost_1_87_0/libs/asio/doc/overview/files.qbk:16:  boost::asio::stream_file file(
/root/boost_1_87_0/libs/asio/doc/overview/files.qbk:18:      boost::asio::stream_file::write_only
/root/boost_1_87_0/libs/asio/doc/overview/files.qbk:19:        | boost::asio::stream_file::create
/root/boost_1_87_0/libs/asio/doc/overview/files.qbk:20:        | boost::asio::stream_file::truncate);
/root/boost_1_87_0/libs/asio/doc/overview/files.qbk:30:  boost::asio::random_access_file file(
/root/boost_1_87_0/libs/asio/doc/overview/files.qbk:32:      boost::asio::random_access_file::read_only);
/root/boost_1_87_0/libs/asio/doc/overview/futures.qbk:10:The `boost::asio::use_future` completion token provides first-class support for
/root/boost_1_87_0/libs/asio/doc/overview/futures.qbk:13:To use `boost::asio::use_future`, pass it to an asynchronous operation instead of
/root/boost_1_87_0/libs/asio/doc/overview/futures.qbk:17:    my_socket.async_read_some(my_buffer, boost::asio::use_future);
/root/boost_1_87_0/libs/asio/doc/overview/handler_tracking.qbk:132:    socket_.async_read_some(boost::asio::buffer(data_, max_length),
/root/boost_1_87_0/libs/asio/doc/overview/immediate_completion.qbk:18:`boost::asio::dispatch` on that executor. By default, the immediate executor delivers
/root/boost_1_87_0/libs/asio/doc/overview/immediate_completion.qbk:19:the completion handler as if using `boost::asio::post` via the operation's I/O
/root/boost_1_87_0/libs/asio/doc/overview/line_based.qbk:25:      boost::asio::async_read_until(socket_, data_, "\r\n",
/root/boost_1_87_0/libs/asio/doc/overview/line_based.qbk:44:    boost::asio::ip::tcp::socket socket_;
/root/boost_1_87_0/libs/asio/doc/overview/line_based.qbk:45:    boost::asio::streambuf data_;
/root/boost_1_87_0/libs/asio/doc/overview/line_based.qbk:60:  typedef boost::asio::buffers_iterator<
/root/boost_1_87_0/libs/asio/doc/overview/line_based.qbk:61:      boost::asio::streambuf::const_buffers_type> iterator;
/root/boost_1_87_0/libs/asio/doc/overview/line_based.qbk:73:  boost::asio::streambuf b;
/root/boost_1_87_0/libs/asio/doc/overview/line_based.qbk:74:  boost::asio::read_until(s, b, match_whitespace);
/root/boost_1_87_0/libs/asio/doc/overview/line_based.qbk:101:  } } // namespace boost::asio
/root/boost_1_87_0/libs/asio/doc/overview/line_based.qbk:103:  boost::asio::streambuf b;
/root/boost_1_87_0/libs/asio/doc/overview/line_based.qbk:104:  boost::asio::read_until(s, b, match_char('a'));
/root/boost_1_87_0/libs/asio/doc/overview/model/completion_tokens.qbk:67:  void foo(boost::asio::yield_context yield)
/root/boost_1_87_0/libs/asio/doc/overview/other_protocols.qbk:25:  boost::asio::generic::stream_protocol::socket my_socket(my_io_context);
/root/boost_1_87_0/libs/asio/doc/overview/other_protocols.qbk:26:  my_socket.open(boost::asio::generic::stream_protocol(AF_INET, IPPROTO_TCP));
/root/boost_1_87_0/libs/asio/doc/overview/other_protocols.qbk:30:`boost::asio::generic::basic_endpoint`], is included to support these protocol
/root/boost_1_87_0/libs/asio/doc/overview/other_protocols.qbk:36:  boost::asio::ip::tcp::endpoint my_endpoint1 = ...;
/root/boost_1_87_0/libs/asio/doc/overview/other_protocols.qbk:37:  boost::asio::generic::stream_protocol::endpoint my_endpoint2(my_endpoint1);
/root/boost_1_87_0/libs/asio/doc/overview/other_protocols.qbk:41:  boost::asio::generic::stream_protocol::socket my_socket(my_io_context);
/root/boost_1_87_0/libs/asio/doc/overview/other_protocols.qbk:42:  boost::asio::ip::tcp::endpoint my_endpoint = ...;
/root/boost_1_87_0/libs/asio/doc/overview/other_protocols.qbk:63:  boost::asio::ip::tcp::socket my_socket1(my_io_context);
/root/boost_1_87_0/libs/asio/doc/overview/other_protocols.qbk:65:  boost::asio::generic::stream_protocol::socket my_socket2(std::move(my_socket1));
/root/boost_1_87_0/libs/asio/doc/overview/other_protocols.qbk:78:supported because the protocol `boost::asio::ip::tcp` is convertible to
/root/boost_1_87_0/libs/asio/doc/overview/other_protocols.qbk:79:`boost::asio::generic::stream_protocol`:
/root/boost_1_87_0/libs/asio/doc/overview/other_protocols.qbk:81:  boost::asio::ip::tcp::acceptor my_acceptor(my_io_context);
/root/boost_1_87_0/libs/asio/doc/overview/other_protocols.qbk:83:  boost::asio::generic::stream_protocol::socket my_socket(my_io_context);
/root/boost_1_87_0/libs/asio/doc/overview/parallel_group.qbk:21:        return stream.async_read_some(boost::asio::buffer(data), token);
/root/boost_1_87_0/libs/asio/doc/overview/parallel_group.qbk:50:      stream.async_read_some(boost::asio::buffer(data), deferred),
/root/boost_1_87_0/libs/asio/doc/overview/pipes.qbk:14:  boost::asio::readable_pipe read_end(my_io_context);
/root/boost_1_87_0/libs/asio/doc/overview/pipes.qbk:15:  boost::asio::writable_pipe write_end(my_io_context);
/root/boost_1_87_0/libs/asio/doc/overview/pipes.qbk:16:  boost::asio::connect_pipe(read_end, write_end);
/root/boost_1_87_0/libs/asio/doc/overview/posix.qbk:86:`boost::asio::null_buffers`, are not portably supported.
/root/boost_1_87_0/libs/asio/doc/overview/posix.qbk:122:  io_context_.notify_fork(boost::asio::io_context::fork_prepare);
/root/boost_1_87_0/libs/asio/doc/overview/posix.qbk:125:    io_context_.notify_fork(boost::asio::io_context::fork_child);
/root/boost_1_87_0/libs/asio/doc/overview/posix.qbk:130:    io_context_.notify_fork(boost::asio::io_context::fork_parent);
/root/boost_1_87_0/libs/asio/doc/overview/promises.qbk:18:      stream, boost::asio::buffer(my_buffer),
/root/boost_1_87_0/libs/asio/doc/overview/promises.qbk:19:      boost::asio::experimental::use_promise);
/root/boost_1_87_0/libs/asio/doc/overview/promises.qbk:36:      boost::asio::experimental::use_promise);
/root/boost_1_87_0/libs/asio/doc/overview/promises.qbk:39:      stream, boost::asio::buffer(my_buffer),
/root/boost_1_87_0/libs/asio/doc/overview/promises.qbk:40:      boost::asio::experimental::use_promise);
/root/boost_1_87_0/libs/asio/doc/overview/promises.qbk:43:    boost::asio::experimental::make_parallel_group(
/root/boost_1_87_0/libs/asio/doc/overview/promises.qbk:44:      timeout_promise.async_wait(boost::asio::deferred),
/root/boost_1_87_0/libs/asio/doc/overview/promises.qbk:45:      read_promise.async_wait(boost::asio::deferred)
/root/boost_1_87_0/libs/asio/doc/overview/promises.qbk:47:      boost::asio::experimental::wait_for_one(),
/root/boost_1_87_0/libs/asio/doc/overview/promises.qbk:48:      boost::asio::experimental::use_promise);
/root/boost_1_87_0/libs/asio/doc/overview/promises.qbk:68:      stream, boost::asio::buffer(my_write_buffer),
/root/boost_1_87_0/libs/asio/doc/overview/promises.qbk:69:      boost::asio::experimental::use_promise);
/root/boost_1_87_0/libs/asio/doc/overview/promises.qbk:72:      stream, boost::asio::buffer(my_buffer),
/root/boost_1_87_0/libs/asio/doc/overview/promises.qbk:73:      boost::asio::experimental::use_promise);
/root/boost_1_87_0/libs/asio/doc/overview/promises.qbk:76:    boost::asio::experimental::make_parallel_group(
/root/boost_1_87_0/libs/asio/doc/overview/promises.qbk:77:      timeout_promise.async_wait(boost::asio::deferred),
/root/boost_1_87_0/libs/asio/doc/overview/promises.qbk:78:      read_promise.async_wait(boost::asio::deferred)
/root/boost_1_87_0/libs/asio/doc/overview/promises.qbk:80:      boost::asio::experimental::wait_for_all(),
/root/boost_1_87_0/libs/asio/doc/overview/promises.qbk:81:      boost::asio::experimental::use_promise);
/root/boost_1_87_0/libs/asio/doc/overview/protocols.qbk:39:  boost::asio::connect(socket, resolver.resolve(query));
/root/boost_1_87_0/libs/asio/doc/overview/protocols.qbk:44:  boost::asio::async_connect(socket_, iter,
/root/boost_1_87_0/libs/asio/doc/overview/protocols.qbk:46:        boost::asio::placeholders::error));
/root/boost_1_87_0/libs/asio/doc/overview/signals.qbk:30:  boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/root/boost_1_87_0/libs/asio/doc/overview/spawn.qbk:15:  boost::asio::spawn(my_strand, do_echo, boost::asio::detached);
/root/boost_1_87_0/libs/asio/doc/overview/spawn.qbk:19:  void do_echo(boost::asio::yield_context yield)
/root/boost_1_87_0/libs/asio/doc/overview/spawn.qbk:28:            boost::asio::buffer(data), yield);
/root/boost_1_87_0/libs/asio/doc/overview/spawn.qbk:30:        boost::asio::async_write(my_socket,
/root/boost_1_87_0/libs/asio/doc/overview/spawn.qbk:31:            boost::asio::buffer(data, length), yield);
/root/boost_1_87_0/libs/asio/doc/overview/spawn.qbk:48:  void coroutine(boost::asio::yield_context yield);
/root/boost_1_87_0/libs/asio/doc/overview/spawn.qbk:56:      boost::asio::buffer(data), yield);
/root/boost_1_87_0/libs/asio/doc/overview/spawn.qbk:83:      boost::asio::buffer(data), yield[ec]);
/root/boost_1_87_0/libs/asio/doc/overview/spawn.qbk:88:  void coroutine(boost::asio::basic_yield_context<Executor> yield);
/root/boost_1_87_0/libs/asio/doc/overview/ssl.qbk:75:  using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/doc/overview/ssl.qbk:76:  namespace ssl = boost::asio::ssl;
/root/boost_1_87_0/libs/asio/doc/overview/ssl.qbk:85:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/doc/overview/ssl.qbk:89:  boost::asio::connect(sock.lowest_layer(), resolver.resolve(query));
/root/boost_1_87_0/libs/asio/doc/overview/strands.qbk:29:  `boost::asio::bind_executor()` or otherwise posted/dispatched through the strand
/root/boost_1_87_0/libs/asio/doc/overview/strands.qbk:42:  boost::asio::associated_executor_t<Handler> a = boost::asio::get_associated_executor(h);
/root/boost_1_87_0/libs/asio/doc/overview/strands.qbk:90:  } } // namespace boost::asio
/root/boost_1_87_0/libs/asio/doc/overview/strands.qbk:92:The `boost::asio::bind_executor()` function is a helper to bind a specific executor
/root/boost_1_87_0/libs/asio/doc/overview/strands.qbk:98:      boost::asio::bind_executor(my_strand,
/root/boost_1_87_0/libs/asio/doc/overview/token_adapters.qbk:34:      boost::asio::bind_executor(my_strand,
/root/boost_1_87_0/libs/asio/doc/overview/token_adapters.qbk:44:  boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/libs/asio/doc/overview/token_adapters.qbk:49:        boost::asio::bind_executor(my_strand, boost::asio::use_awaitable));
/root/boost_1_87_0/libs/asio/doc/overview/token_adapters.qbk:76:      boost::asio::redirect_error(
/root/boost_1_87_0/libs/asio/doc/overview/token_adapters.qbk:87:  boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/libs/asio/doc/overview/token_adapters.qbk:93:        boost::asio::redirect_error(boost::asio::use_awaitable, my_error));
/root/boost_1_87_0/libs/asio/doc/overview/token_adapters.qbk:109:      boost::asio::as_tuple(boost::asio::use_awaitable));
/root/boost_1_87_0/libs/asio/doc/overview/token_adapters.qbk:113:  using default_token = boost::asio::as_tuple_t<boost::asio::use_awaitable_t<>>;
/root/boost_1_87_0/libs/asio/doc/overview/token_adapters.qbk:116:  boost::asio::awaitable<void> do_read(tcp_socket my_socket)
/root/boost_1_87_0/libs/asio/doc/overview/token_adapters.qbk:137:      boost::asio::experimental::as_single(
/root/boost_1_87_0/libs/asio/doc/overview/token_adapters.qbk:147:      boost::asio::experimental::as_single,
/root/boost_1_87_0/libs/asio/doc/overview/token_adapters.qbk:162:      boost::asio::append(
/root/boost_1_87_0/libs/asio/doc/overview/token_adapters.qbk:172:      boost::asio::append(
/root/boost_1_87_0/libs/asio/doc/overview/token_adapters.qbk:173:        boost::asio::use_future,
/root/boost_1_87_0/libs/asio/doc/overview/token_adapters.qbk:187:      boost::asio::prepend(
/root/boost_1_87_0/libs/asio/doc/overview/token_adapters.qbk:197:      boost::asio::prepend(
/root/boost_1_87_0/libs/asio/doc/overview/token_adapters.qbk:198:        boost::asio::use_future,
/root/boost_1_87_0/libs/asio/doc/overview/token_adapters.qbk:212:  auto timer1 = std::make_shared<boost::asio::steady_timer>(my_io_context);
/root/boost_1_87_0/libs/asio/doc/overview/token_adapters.qbk:215:      boost::asio::consign(
/root/boost_1_87_0/libs/asio/doc/overview/token_adapters.qbk:224:  auto timer2 = std::make_shared<boost::asio::steady_timer>(my_io_context);
/root/boost_1_87_0/libs/asio/doc/overview/token_adapters.qbk:228:      boost::asio::consign(
/root/boost_1_87_0/libs/asio/doc/overview/token_adapters.qbk:229:        boost::asio::use_future,
/root/boost_1_87_0/libs/asio/doc/overview/type_erasure.qbk:21:      boost::asio::any_completion_handler<void(boost::system::error_code)> handler,
/root/boost_1_87_0/libs/asio/doc/overview/type_erasure.qbk:22:      boost::asio::any_io_executor ex, std::chrono::nanoseconds duration);
/root/boost_1_87_0/libs/asio/doc/overview/type_erasure.qbk:25:  inline auto async_sleep(boost::asio::any_io_executor ex,
/root/boost_1_87_0/libs/asio/doc/overview/type_erasure.qbk:28:    return boost::asio::async_initiate<
/root/boost_1_87_0/libs/asio/doc/overview/type_erasure.qbk:38:      boost::asio::any_completion_handler<void(boost::system::error_code)> handler,
/root/boost_1_87_0/libs/asio/doc/overview/type_erasure.qbk:39:      boost::asio::any_io_executor ex, std::chrono::nanoseconds duration)
/root/boost_1_87_0/libs/asio/doc/overview/type_erasure.qbk:41:    auto timer = std::make_shared<boost::asio::steady_timer>(ex, duration);
/root/boost_1_87_0/libs/asio/doc/overview/type_erasure.qbk:42:    timer->async_wait(boost::asio::consign(std::move(handler), timer));
/root/boost_1_87_0/libs/asio/doc/overview/type_erasure.qbk:56:      return boost::asio::async_initiate<
/root/boost_1_87_0/libs/asio/doc/overview/type_erasure.qbk:66:        boost::asio::any_completion_handler<
/root/boost_1_87_0/libs/asio/doc/overview/type_erasure.qbk:78:        boost::asio::any_completion_handler<
/root/boost_1_87_0/libs/asio/doc/reference.qbk:1531:  auto ex2 = boost::asio::prefer(ex, execution::relationship.fork);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:1621:  auto ex2 = boost::asio::prefer(ex, execution::blocking.possibly);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:1653:  size_t n = boost::asio::query(ex, execution::occupancy);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:1698:  auto ex2 = boost::asio::require(ex, execution::relationship.fork);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:1728:  auto ex2 = boost::asio::require(ex, execution::blocking.possibly);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:3762:  auto ex2 = boost::asio::prefer(ex, execution::blocking.possibly);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:3867:  auto ex2 = boost::asio::prefer(ex, execution::blocking.possibly);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:3899:  size_t n = boost::asio::query(ex, execution::occupancy);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:3952:  auto ex2 = boost::asio::require(ex, execution::blocking.possibly);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:3997:  auto ex2 = boost::asio::require(ex, execution::blocking.possibly);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:5804:    [If T has a nested type immediate_executor_type, returns t.get_immediate_executor(). Otherwise returns boost::asio::require(ex, boost::asio::execution::blocking.never). ]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:5834:If `T` has a nested type `immediate_executor_type`, returns `t.get_immediate_executor()`. Otherwise returns `boost::asio::require(ex, boost::asio::execution::blocking.never)`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:5959:    [If T has a nested type immediate_executor_type, returns t.get_immediate_executor(). Otherwise returns boost::asio::require(ex, boost::asio::execution::blocking.never). ]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:6021:    [If T has a nested type immediate_executor_type, returns t.get_immediate_executor(). Otherwise returns boost::asio::require(ex, boost::asio::execution::blocking.never). ]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:6175:  typedef boost::asio::async_result< decay_t< CompletionToken >, Signatures... >::completion_handler_type completion_handler_type;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:6312:    boost::asio::mutable_buffer buffer_;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:6335:          boost::asio::async_write(socket_, buffer_,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:6336:              boost::asio::transfer_exactly(n),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:6349:      boost::asio::mutable_buffer buffer,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:6352:      boost::asio::async_compose<CompletionToken,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:6357:    return boost::asio::async_compose<CompletionToken,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:6484:    // boost::asio::error::not_found. Otherwise, contains the
/root/boost_1_87_0/libs/asio/doc/reference.qbk:6528:      boost::asio::async_connect(s, results, connect_handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:6599:    // boost::asio::error::not_found. Otherwise, contains the
/root/boost_1_87_0/libs/asio/doc/reference.qbk:6629:  boost::asio::async_connect(s,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:6708:    // boost::asio::error::not_found. Otherwise, contains the
/root/boost_1_87_0/libs/asio/doc/reference.qbk:6767:      boost::asio::async_connect(s, results,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:6857:    // boost::asio::error::not_found. Otherwise, contains the
/root/boost_1_87_0/libs/asio/doc/reference.qbk:6917:      boost::asio::async_connect(s, i, end,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:7309:  boost::asio::async_read(s, boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:7319:  boost::asio::async_read(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:7321:     boost::asio::transfer_all(),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:7426:  boost::asio::async_read(s,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:7427:     boost::asio::buffer(data, size),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:7428:     boost::asio::transfer_at_least(32),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:7522:  boost::asio::async_read(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:7524:     boost::asio::transfer_all(),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:7713:  boost::asio::async_read(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:7715:     boost::asio::transfer_all(),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:7903:  boost::asio::async_read(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:7905:     boost::asio::transfer_all(),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:8165:  boost::asio::async_read_at(d, 42, boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:8175:  boost::asio::async_read_at(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:8177:     boost::asio::transfer_all(),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:8284:  boost::asio::async_read_at(d, 42,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:8285:     boost::asio::buffer(data, size),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:8286:     boost::asio::transfer_at_least(32),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:8378:  boost::asio::async_read_at(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:8380:     boost::asio::transfer_all(),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:8576:      boost::asio::basic_streambuf< Allocator > & b,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:8587:      boost::asio::basic_streambuf< Allocator > & b,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:8601:      boost::asio::basic_streambuf< Allocator > & b,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:8615:      boost::asio::basic_streambuf< Allocator > & b,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:8773:  boost::asio::async_read_until(s, data, '\n', handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:8899:  boost::asio::async_read_until(s, data, "\r\n", handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:9028:  boost::asio::async_read_until(s, data,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:9159:  typedef boost::asio::buffers_iterator<
/root/boost_1_87_0/libs/asio/doc/reference.qbk:9160:      boost::asio::const_buffer> iterator;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:9175:  boost::asio::async_read_until(s, data, match_whitespace, handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:9210:  boost::asio::async_read_until(s, data, match_char('a'), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:9245:      boost::asio::basic_streambuf< Allocator > & b,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:9308:  boost::asio::streambuf b;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:9321:  boost::asio::async_read_until(s, b, '\n', handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:9371:      boost::asio::basic_streambuf< Allocator > & b,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:9434:  boost::asio::streambuf b;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:9447:  boost::asio::async_read_until(s, b, "\r\n", handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:9498:      boost::asio::basic_streambuf< Allocator > & b,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:9562:  boost::asio::streambuf b;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:9575:  boost::asio::async_read_until(s, b, boost::regex("\r\n"), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:9626:      boost::asio::basic_streambuf< Allocator > & b,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:9703:  typedef boost::asio::buffers_iterator<
/root/boost_1_87_0/libs/asio/doc/reference.qbk:9704:      boost::asio::streambuf::const_buffers_type> iterator;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:9718:  boost::asio::streambuf b;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:9719:  boost::asio::async_read_until(s, b, match_whitespace, handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:9753:  boost::asio::streambuf b;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:9754:  boost::asio::async_read_until(s, b, match_char('a'), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:9865:  boost::asio::async_read_until(s, data, '\n', handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:9990:  boost::asio::async_read_until(s, data, "\r\n", handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:10118:  boost::asio::async_read_until(s, data,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:10248:  typedef boost::asio::buffers_iterator<
/root/boost_1_87_0/libs/asio/doc/reference.qbk:10249:      boost::asio::const_buffer> iterator;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:10264:  boost::asio::async_read_until(s, data, match_whitespace, handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:10299:  boost::asio::async_read_until(s, data, match_char('a'), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:10944:  boost::asio::async_write(s, boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:11049:  boost::asio::async_write(s,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:11050:     boost::asio::buffer(data, size),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:11051:     boost::asio::transfer_at_least(32),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:11748:  boost::asio::async_write_at(d, 42, boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:11855:  boost::asio::async_write_at(d, 42,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:11856:     boost::asio::buffer(data, size),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:11857:     boost::asio::transfer_at_least(32),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:12875:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:12876:  boost::asio::ip::tcp::endpoint endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:12877:      boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:12982:  socket.async_receive(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:13163:     boost::asio::buffer(data, size), sender_endpoint, handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:13341:  socket.async_send(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:13521:  boost::asio::ip::udp::endpoint destination(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:13522:      boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:13524:      boost::asio::buffer(data, size), destination, handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:13685:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:13687:  socket.async_wait(boost::asio::ip::tcp::socket::wait_read, wait_handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14436:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14437:  socket.open(boost::asio::ip::tcp::v4());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14438:  socket.bind(boost::asio::ip::tcp::endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14439:        boost::asio::ip::tcp::v4(), 12345));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14484:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14485:  socket.open(boost::asio::ip::tcp::v4());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14487:  socket.bind(boost::asio::ip::tcp::endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14488:        boost::asio::ip::tcp::v4(), 12345), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14526:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14528:  boost::asio::socket_base::broadcast option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14537:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14539:  boost::asio::socket_base::broadcast option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14580:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14582:  boost::asio::socket_base::bytes_readable command(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14628:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14643:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14679:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14694:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14744:This function is used to close the socket. Any asynchronous send, receive or connect operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14781:This function is used to close the socket. Any asynchronous send, receive or connect operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14798:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14881:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14882:  boost::asio::ip::tcp::endpoint endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14883:      boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14931:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14932:  boost::asio::ip::tcp::endpoint endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14933:      boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14973:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14975:  boost::asio::socket_base::debug option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14984:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:14986:  boost::asio::socket_base::debug option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15027:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15029:  boost::asio::socket_base::do_not_route option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15038:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15040:  boost::asio::socket_base::do_not_route option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15074:Implements a custom socket option that determines whether or not an accept operation is permitted to fail with `boost::asio::error::connection_aborted`. By default the option is false.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15081:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15083:  boost::asio::socket_base::enable_connection_aborted option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15092:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15094:  boost::asio::socket_base::enable_connection_aborted option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15236:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15238:  boost::asio::ip::tcp::socket::keep_alive option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15288:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15290:  boost::asio::ip::tcp::socket::keep_alive option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15373:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15375:  boost::asio::ip::tcp::socket::bytes_readable command;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15425:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15427:  boost::asio::ip::tcp::socket::bytes_readable command;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15485:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15487:  boost::asio::socket_base::keep_alive option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15496:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15498:  boost::asio::socket_base::keep_alive option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15539:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15541:  boost::asio::socket_base::linger option(true, 30);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15550:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15552:  boost::asio::socket_base::linger option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15621:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15623:  boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint();
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15670:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:15673:  boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint(ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16340:`true` if the underlying socket is in non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16378:              boost::asio::error::get_system_category());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16382:          if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16386:          if (ec == boost::asio::error::would_block
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16387:              || ec == boost::asio::error::try_again)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16448:[[mode][If `true`, the underlying socket is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16458:[[boost::system::system_error][Thrown on failure. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16493:              boost::asio::error::get_system_category());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16497:          if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16501:          if (ec == boost::asio::error::would_block
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16502:              || ec == boost::asio::error::try_again)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16564:[[mode][If `true`, the underlying socket is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16566:[[ec][Set to indicate what error occurred, if any. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16601:              boost::asio::error::get_system_category());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16605:          if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16609:          if (ec == boost::asio::error::would_block
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16610:              || ec == boost::asio::error::try_again)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16689:`true` if the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16694:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16722:[[mode][If `true`, the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16739:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16768:[[mode][If `true`, the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16777:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16843:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16844:  socket.open(boost::asio::ip::tcp::v4());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16889:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:16891:  socket.open(boost::asio::ip::tcp::v4(), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17023:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17025:  boost::asio::socket_base::out_of_band_inline option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17034:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17036:  boost::asio::socket_base::out_of_band_inline option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17154:  socket.receive(boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17289:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17291:  boost::asio::socket_base::receive_buffer_size option(8192);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17300:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17302:  boost::asio::socket_base::receive_buffer_size option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17400:  boost::asio::ip::udp::endpoint sender_endpoint;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17402:      boost::asio::buffer(data, size), sender_endpoint);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17533:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17535:  boost::asio::socket_base::receive_low_watermark option(1024);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17544:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17546:  boost::asio::socket_base::receive_low_watermark option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17592:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native socket is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17607:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17629:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native socket is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17644:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17702:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17704:  boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint();
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17751:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17754:  boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint(ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17792:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17794:  boost::asio::socket_base::reuse_address option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17803:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17805:  boost::asio::socket_base::reuse_address option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:17902:  socket.send(boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:18037:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:18039:  boost::asio::socket_base::send_buffer_size option(8192);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:18048:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:18050:  boost::asio::socket_base::send_buffer_size option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:18091:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:18093:  boost::asio::socket_base::send_low_watermark option(1024);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:18102:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:18104:  boost::asio::socket_base::send_low_watermark option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:18202:  boost::asio::ip::udp::endpoint destination(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:18203:      boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:18204:  socket.send_to(boost::asio::buffer(data, size), destination);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:18377:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:18379:  boost::asio::ip::tcp::no_delay option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:18428:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:18430:  boost::asio::ip::tcp::no_delay option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:18505:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:18507:  socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:18552:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:18555:  socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send, ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:18658:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:18660:  socket.wait(boost::asio::ip::tcp::socket::wait_read);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:18705:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:18708:  socket.wait(boost::asio::ip::tcp::socket::wait_read, ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:19249:      typename ``[link boost_asio.reference.TimeTraits TimeTraits]`` = boost::asio::time_traits<Time>,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:19380:  boost::asio::deadline_timer timer(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:19405:  boost::asio::deadline_timer timer(my_context,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:19438:    if (e != boost::asio::error::operation_aborted)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:19448:* The `boost::asio::basic_deadline_timer::expires_from_now()` function cancels any pending asynchronous waits, and returns the number of asynchronous waits that were cancelled. If it returns 0 then you were too late and the wait handler has already been executed, or will soon be executed. If it returns 1 then the wait handler was successfully cancelled.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:19451:* If a wait handler is cancelled, the boost::system::error\_code passed to it contains the value `boost::asio::error::operation_aborted`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:19482:* The timer was cancelled, in which case the handler is passed the error code `boost::asio::error::operation_aborted`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:19843:This function forces the completion of any pending asynchronous wait operations against the timer. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:19890:This function forces the completion of any pending asynchronous wait operations against the timer. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:19951:This function forces the completion of one pending asynchronous wait operation against the timer. Handlers are cancelled in FIFO order. The handler for the cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:19998:This function forces the completion of one pending asynchronous wait operation against the timer. Handlers are cancelled in FIFO order. The handler for the cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:20127:This function sets the expiry time. Any pending asynchronous wait operations will be cancelled. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:20183:This function sets the expiry time. Any pending asynchronous wait operations will be cancelled. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:20270:This function sets the expiry time. Any pending asynchronous wait operations will be cancelled. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:20326:This function sets the expiry time. Any pending asynchronous wait operations will be cancelled. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:20713:  boost::asio::deadline_timer timer(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:20738:  boost::asio::deadline_timer timer(my_context,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:20771:    if (e != boost::asio::error::operation_aborted)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:20781:* The `boost::asio::basic_deadline_timer::expires_from_now()` function cancels any pending asynchronous waits, and returns the number of asynchronous waits that were cancelled. If it returns 0 then you were too late and the wait handler has already been executed, or will soon be executed. If it returns 1 then the wait handler was successfully cancelled.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:20784:* If a wait handler is cancelled, the boost::system::error\_code passed to it contains the value `boost::asio::error::operation_aborted`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:21565:This function causes all outstanding asynchronous read and write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:21580:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:21607:This function causes all outstanding asynchronous read and write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:21622:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:21663:This function is used to close the file. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:21692:This function is used to close the file. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:21709:  boost::asio::stream_file file(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:21942:  boost::asio::stream_file file(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:21943:  file.open("/path/to/my/file", boost::asio::stream_file::read_only);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:21988:  boost::asio::stream_file file(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:21990:  file.open("/path/to/my/file", boost::asio::stream_file::read_only, ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:22046:  boost::asio::stream_file file(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:22047:  file.open("/path/to/my/file", boost::asio::stream_file::read_only);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:22092:  boost::asio::stream_file file(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:22094:  file.open("/path/to/my/file", boost::asio::stream_file::read_only, ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:22260:This function causes all outstanding asynchronous read and write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native file is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:22275:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:22294:This function causes all outstanding asynchronous read and write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native file is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:22309:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:23102:      boost::asio::io_context & io_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:23132:      boost::asio::io_context & io_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:23203:  typedef boost::asio::io_context::executor_type executor_type;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:23280:  boost::asio::io_context & get_io_context();
/root/boost_1_87_0/libs/asio/doc/reference.qbk:23303:  boost::asio::io_context & get_io_service();
/root/boost_1_87_0/libs/asio/doc/reference.qbk:23558:      boost::asio::io_context & io_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:23578:      boost::asio::io_context & io_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:23621:  typedef boost::asio::io_context::executor_type executor_type;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:23688:  boost::asio::io_context & get_io_context();
/root/boost_1_87_0/libs/asio/doc/reference.qbk:23700:  boost::asio::io_context & get_io_service();
/root/boost_1_87_0/libs/asio/doc/reference.qbk:24168:  handle.async_read_some_at(42, boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:24252:  handle.async_write_some_at(42, boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:24797:This function causes all outstanding asynchronous read and write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:24812:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:24842:This function causes all outstanding asynchronous read and write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:24857:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:24901:This function is used to close the file. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:24933:This function is used to close the file. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:24950:  boost::asio::stream_file file(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:25195:  boost::asio::stream_file file(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:25196:  file.open("/path/to/my/file", boost::asio::stream_file::read_only);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:25244:  boost::asio::stream_file file(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:25246:  file.open("/path/to/my/file", boost::asio::stream_file::read_only, ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:25305:  boost::asio::stream_file file(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:25306:  file.open("/path/to/my/file", boost::asio::stream_file::read_only);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:25354:  boost::asio::stream_file file(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:25356:  file.open("/path/to/my/file", boost::asio::stream_file::read_only, ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:25542:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the end of the file was reached.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:25556:  handle.read_some_at(42, boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:25659:This function causes all outstanding asynchronous read and write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native file is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:25674:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:25696:This function causes all outstanding asynchronous read and write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native file is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:25711:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:26200:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the end of the file was reached.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:26214:  handle.write_some_at(42, boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:27102:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:27103:  boost::asio::ip::tcp::endpoint endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:27104:      boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:27209:  socket.async_receive(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:27390:     boost::asio::buffer(data, size), 0, sender_endpoint, handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:27568:  socket.async_send(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:27748:  boost::asio::ip::udp::endpoint destination(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:27749:      boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:27751:      boost::asio::buffer(data, size), destination, handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:27912:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:27914:  socket.async_wait(boost::asio::ip::tcp::socket::wait_read, wait_handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:28663:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:28664:  socket.open(boost::asio::ip::tcp::v4());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:28665:  socket.bind(boost::asio::ip::tcp::endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:28666:        boost::asio::ip::tcp::v4(), 12345));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:28711:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:28712:  socket.open(boost::asio::ip::tcp::v4());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:28714:  socket.bind(boost::asio::ip::tcp::endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:28715:        boost::asio::ip::tcp::v4(), 12345), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:28753:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:28755:  boost::asio::socket_base::broadcast option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:28764:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:28766:  boost::asio::socket_base::broadcast option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:28807:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:28809:  boost::asio::socket_base::bytes_readable command(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:28855:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:28870:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:28906:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:28921:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:28971:This function is used to close the socket. Any asynchronous send, receive or connect operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29008:This function is used to close the socket. Any asynchronous send, receive or connect operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29025:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29108:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29109:  boost::asio::ip::tcp::endpoint endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29110:      boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29158:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29159:  boost::asio::ip::tcp::endpoint endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29160:      boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29200:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29202:  boost::asio::socket_base::debug option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29211:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29213:  boost::asio::socket_base::debug option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29254:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29256:  boost::asio::socket_base::do_not_route option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29265:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29267:  boost::asio::socket_base::do_not_route option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29301:Implements a custom socket option that determines whether or not an accept operation is permitted to fail with `boost::asio::error::connection_aborted`. By default the option is false.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29308:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29310:  boost::asio::socket_base::enable_connection_aborted option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29319:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29321:  boost::asio::socket_base::enable_connection_aborted option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29463:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29465:  boost::asio::ip::tcp::socket::keep_alive option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29515:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29517:  boost::asio::ip::tcp::socket::keep_alive option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29600:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29602:  boost::asio::ip::tcp::socket::bytes_readable command;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29652:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29654:  boost::asio::ip::tcp::socket::bytes_readable command;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29712:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29714:  boost::asio::socket_base::keep_alive option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29723:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29725:  boost::asio::socket_base::keep_alive option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29766:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29768:  boost::asio::socket_base::linger option(true, 30);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29777:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29779:  boost::asio::socket_base::linger option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29848:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29850:  boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint();
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29897:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:29900:  boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint(ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:30567:`true` if the underlying socket is in non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).
/root/boost_1_87_0/libs/asio/doc/reference.qbk:30605:              boost::asio::error::get_system_category());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:30609:          if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:30613:          if (ec == boost::asio::error::would_block
/root/boost_1_87_0/libs/asio/doc/reference.qbk:30614:              || ec == boost::asio::error::try_again)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:30675:[[mode][If `true`, the underlying socket is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:30685:[[boost::system::system_error][Thrown on failure. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:30720:              boost::asio::error::get_system_category());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:30724:          if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:30728:          if (ec == boost::asio::error::would_block
/root/boost_1_87_0/libs/asio/doc/reference.qbk:30729:              || ec == boost::asio::error::try_again)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:30791:[[mode][If `true`, the underlying socket is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:30793:[[ec][Set to indicate what error occurred, if any. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:30828:              boost::asio::error::get_system_category());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:30832:          if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:30836:          if (ec == boost::asio::error::would_block
/root/boost_1_87_0/libs/asio/doc/reference.qbk:30837:              || ec == boost::asio::error::try_again)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:30916:`true` if the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:30921:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:30949:[[mode][If `true`, the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:30966:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:30995:[[mode][If `true`, the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31004:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31070:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31071:  socket.open(boost::asio::ip::tcp::v4());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31116:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31118:  socket.open(boost::asio::ip::tcp::v4(), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31250:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31252:  boost::asio::socket_base::out_of_band_inline option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31261:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31263:  boost::asio::socket_base::out_of_band_inline option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31381:  socket.receive(boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31516:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31518:  boost::asio::socket_base::receive_buffer_size option(8192);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31527:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31529:  boost::asio::socket_base::receive_buffer_size option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31627:  boost::asio::ip::udp::endpoint sender_endpoint;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31629:      boost::asio::buffer(data, size), sender_endpoint);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31760:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31762:  boost::asio::socket_base::receive_low_watermark option(1024);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31771:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31773:  boost::asio::socket_base::receive_low_watermark option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31819:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native socket is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31834:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31856:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native socket is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31871:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31929:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31931:  boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint();
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31978:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:31981:  boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint(ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32019:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32021:  boost::asio::socket_base::reuse_address option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32030:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32032:  boost::asio::socket_base::reuse_address option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32129:  socket.send(boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32264:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32266:  boost::asio::socket_base::send_buffer_size option(8192);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32275:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32277:  boost::asio::socket_base::send_buffer_size option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32318:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32320:  boost::asio::socket_base::send_low_watermark option(1024);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32329:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32331:  boost::asio::socket_base::send_low_watermark option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32429:  boost::asio::ip::udp::endpoint destination(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32430:      boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32431:  socket.send_to(boost::asio::buffer(data, size), destination);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32604:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32606:  boost::asio::ip::tcp::no_delay option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32655:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32657:  boost::asio::ip::tcp::no_delay option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32732:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32734:  socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32779:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32782:  socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send, ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32885:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32887:  socket.wait(boost::asio::ip::tcp::socket::wait_read);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32932:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:32935:  socket.wait(boost::asio::ip::tcp::socket::wait_read, ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:33716:      boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:34024:This function causes all outstanding asynchronous read operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:34053:This function causes all outstanding asynchronous read operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:34096:This function is used to close the pipe. Any asynchronous read operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:34125:This function is used to close the pipe. Any asynchronous read operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:34589:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:34603:  basic_readable_pipe.read_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:34683:This function causes all outstanding asynchronous read operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native pipe is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:34698:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:34717:This function causes all outstanding asynchronous read operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native pipe is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:34732:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:35469:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:35470:  boost::asio::ip::tcp::endpoint endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:35471:      boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:35576:  socket.async_receive(boost::asio::buffer(data, size), out_flags, handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:35659:      boost::asio::buffer(data, size),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:35741:  socket.async_send(boost::asio::buffer(data, size), 0, handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:35828:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:35830:  socket.async_wait(boost::asio::ip::tcp::socket::wait_read, wait_handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:36579:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:36580:  socket.open(boost::asio::ip::tcp::v4());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:36581:  socket.bind(boost::asio::ip::tcp::endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:36582:        boost::asio::ip::tcp::v4(), 12345));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:36627:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:36628:  socket.open(boost::asio::ip::tcp::v4());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:36630:  socket.bind(boost::asio::ip::tcp::endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:36631:        boost::asio::ip::tcp::v4(), 12345), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:36669:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:36671:  boost::asio::socket_base::broadcast option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:36680:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:36682:  boost::asio::socket_base::broadcast option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:36723:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:36725:  boost::asio::socket_base::bytes_readable command(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:36771:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:36786:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:36822:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:36837:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:36887:This function is used to close the socket. Any asynchronous send, receive or connect operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:36924:This function is used to close the socket. Any asynchronous send, receive or connect operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:36941:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37024:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37025:  boost::asio::ip::tcp::endpoint endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37026:      boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37074:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37075:  boost::asio::ip::tcp::endpoint endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37076:      boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37116:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37118:  boost::asio::socket_base::debug option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37127:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37129:  boost::asio::socket_base::debug option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37170:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37172:  boost::asio::socket_base::do_not_route option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37181:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37183:  boost::asio::socket_base::do_not_route option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37217:Implements a custom socket option that determines whether or not an accept operation is permitted to fail with `boost::asio::error::connection_aborted`. By default the option is false.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37224:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37226:  boost::asio::socket_base::enable_connection_aborted option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37235:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37237:  boost::asio::socket_base::enable_connection_aborted option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37379:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37381:  boost::asio::ip::tcp::socket::keep_alive option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37431:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37433:  boost::asio::ip::tcp::socket::keep_alive option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37516:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37518:  boost::asio::ip::tcp::socket::bytes_readable command;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37568:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37570:  boost::asio::ip::tcp::socket::bytes_readable command;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37628:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37630:  boost::asio::socket_base::keep_alive option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37639:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37641:  boost::asio::socket_base::keep_alive option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37682:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37684:  boost::asio::socket_base::linger option(true, 30);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37693:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37695:  boost::asio::socket_base::linger option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37764:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37766:  boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint();
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37813:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:37816:  boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint(ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38483:`true` if the underlying socket is in non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38521:              boost::asio::error::get_system_category());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38525:          if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38529:          if (ec == boost::asio::error::would_block
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38530:              || ec == boost::asio::error::try_again)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38591:[[mode][If `true`, the underlying socket is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38601:[[boost::system::system_error][Thrown on failure. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38636:              boost::asio::error::get_system_category());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38640:          if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38644:          if (ec == boost::asio::error::would_block
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38645:              || ec == boost::asio::error::try_again)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38707:[[mode][If `true`, the underlying socket is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38709:[[ec][Set to indicate what error occurred, if any. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38744:              boost::asio::error::get_system_category());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38748:          if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38752:          if (ec == boost::asio::error::would_block
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38753:              || ec == boost::asio::error::try_again)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38832:`true` if the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38837:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38865:[[mode][If `true`, the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38882:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38911:[[mode][If `true`, the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38920:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38986:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:38987:  socket.open(boost::asio::ip::tcp::v4());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39032:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39034:  socket.open(boost::asio::ip::tcp::v4(), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39166:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39168:  boost::asio::socket_base::out_of_band_inline option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39177:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39179:  boost::asio::socket_base::out_of_band_inline option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39293:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39302:  socket.receive(boost::asio::buffer(data, size), out_flags);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39355:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39369:  socket.receive(boost::asio::buffer(data, size), 0, out_flags);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39453:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39455:  boost::asio::socket_base::receive_buffer_size option(8192);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39464:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39466:  boost::asio::socket_base::receive_buffer_size option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39507:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39509:  boost::asio::socket_base::receive_low_watermark option(1024);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39518:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39520:  boost::asio::socket_base::receive_low_watermark option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39566:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native socket is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39581:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39603:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native socket is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39618:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39676:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39678:  boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint();
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39725:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39728:  boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint(ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39766:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39768:  boost::asio::socket_base::reuse_address option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39777:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39779:  boost::asio::socket_base::reuse_address option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39868:  socket.send(boost::asio::buffer(data, size), 0);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39949:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39951:  boost::asio::socket_base::send_buffer_size option(8192);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39960:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:39962:  boost::asio::socket_base::send_buffer_size option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:40003:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:40005:  boost::asio::socket_base::send_low_watermark option(1024);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:40014:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:40016:  boost::asio::socket_base::send_low_watermark option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:40099:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:40101:  boost::asio::ip::tcp::no_delay option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:40150:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:40152:  boost::asio::ip::tcp::no_delay option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:40227:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:40229:  socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:40274:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:40277:  socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send, ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:40380:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:40382:  socket.wait(boost::asio::ip::tcp::socket::wait_read);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:40427:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:40430:  socket.wait(boost::asio::ip::tcp::socket::wait_read, ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:41221:      boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:41303:      boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:41789:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:41818:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:41861:This function is used to close the serial port. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:41890:This function is used to close the serial port. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:42567:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:42581:  basic_serial_port.read_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:42863:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:42877:  basic_serial_port.write_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:43291:  boost::asio::signal_set signals(my_context, SIGINT, SIGTERM);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:43539:* The signal set was cancelled, in which case the handler is passed the error code `boost::asio::error::operation_aborted`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:43754:  boost::asio::signal_set signals(ex);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:43800:  boost::asio::signal_set signals(context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:43846:  boost::asio::signal_set signals(ex);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:43896:  boost::asio::signal_set signals(context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:43946:  boost::asio::signal_set signals(ex);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:44000:  boost::asio::signal_set signals(context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:44039:This function forces the completion of any pending asynchronous wait operations against the signal set. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:44081:This function forces the completion of any pending asynchronous wait operations against the signal set. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:44581:  boost::asio::signal_set signals(my_context, SIGINT, SIGTERM);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:45129:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:45130:  boost::asio::ip::tcp::endpoint endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:45131:      boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:45216:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:45218:  socket.async_wait(boost::asio::ip::tcp::socket::wait_read, wait_handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:45952:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:45953:  socket.open(boost::asio::ip::tcp::v4());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:45954:  socket.bind(boost::asio::ip::tcp::endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:45955:        boost::asio::ip::tcp::v4(), 12345));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:45997:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:45998:  socket.open(boost::asio::ip::tcp::v4());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46000:  socket.bind(boost::asio::ip::tcp::endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46001:        boost::asio::ip::tcp::v4(), 12345), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46039:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46041:  boost::asio::socket_base::broadcast option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46050:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46052:  boost::asio::socket_base::broadcast option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46093:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46095:  boost::asio::socket_base::bytes_readable command(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46138:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46153:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46186:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46201:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46248:This function is used to close the socket. Any asynchronous send, receive or connect operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46282:This function is used to close the socket. Any asynchronous send, receive or connect operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46299:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46379:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46380:  boost::asio::ip::tcp::endpoint endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46381:      boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46426:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46427:  boost::asio::ip::tcp::endpoint endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46428:      boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46468:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46470:  boost::asio::socket_base::debug option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46479:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46481:  boost::asio::socket_base::debug option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46522:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46524:  boost::asio::socket_base::do_not_route option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46533:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46535:  boost::asio::socket_base::do_not_route option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46569:Implements a custom socket option that determines whether or not an accept operation is permitted to fail with `boost::asio::error::connection_aborted`. By default the option is false.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46576:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46578:  boost::asio::socket_base::enable_connection_aborted option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46587:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46589:  boost::asio::socket_base::enable_connection_aborted option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46725:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46727:  boost::asio::ip::tcp::socket::keep_alive option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46774:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46776:  boost::asio::ip::tcp::socket::keep_alive option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46856:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46858:  boost::asio::ip::tcp::socket::bytes_readable command;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46905:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46907:  boost::asio::ip::tcp::socket::bytes_readable command;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46962:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46964:  boost::asio::socket_base::keep_alive option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46973:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:46975:  boost::asio::socket_base::keep_alive option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:47016:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:47018:  boost::asio::socket_base::linger option(true, 30);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:47027:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:47029:  boost::asio::socket_base::linger option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:47095:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:47097:  boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint();
/root/boost_1_87_0/libs/asio/doc/reference.qbk:47141:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:47144:  boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint(ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:47796:`true` if the underlying socket is in non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).
/root/boost_1_87_0/libs/asio/doc/reference.qbk:47834:              boost::asio::error::get_system_category());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:47838:          if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:47842:          if (ec == boost::asio::error::would_block
/root/boost_1_87_0/libs/asio/doc/reference.qbk:47843:              || ec == boost::asio::error::try_again)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:47901:[[mode][If `true`, the underlying socket is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:47911:[[boost::system::system_error][Thrown on failure. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:47946:              boost::asio::error::get_system_category());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:47950:          if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:47954:          if (ec == boost::asio::error::would_block
/root/boost_1_87_0/libs/asio/doc/reference.qbk:47955:              || ec == boost::asio::error::try_again)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48014:[[mode][If `true`, the underlying socket is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48016:[[ec][Set to indicate what error occurred, if any. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48051:              boost::asio::error::get_system_category());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48055:          if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48059:          if (ec == boost::asio::error::would_block
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48060:              || ec == boost::asio::error::try_again)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48136:`true` if the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48141:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48166:[[mode][If `true`, the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48183:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48209:[[mode][If `true`, the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48218:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48281:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48282:  socket.open(boost::asio::ip::tcp::v4());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48324:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48326:  socket.open(boost::asio::ip::tcp::v4(), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48458:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48460:  boost::asio::socket_base::out_of_band_inline option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48469:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48471:  boost::asio::socket_base::out_of_band_inline option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48533:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48535:  boost::asio::socket_base::receive_buffer_size option(8192);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48544:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48546:  boost::asio::socket_base::receive_buffer_size option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48587:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48589:  boost::asio::socket_base::receive_low_watermark option(1024);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48598:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48600:  boost::asio::socket_base::receive_low_watermark option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48643:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native socket is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48658:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48677:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native socket is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48692:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48747:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48749:  boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint();
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48793:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48796:  boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint(ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48834:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48836:  boost::asio::socket_base::reuse_address option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48845:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48847:  boost::asio::socket_base::reuse_address option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48888:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48890:  boost::asio::socket_base::send_buffer_size option(8192);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48899:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48901:  boost::asio::socket_base::send_buffer_size option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48942:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48944:  boost::asio::socket_base::send_low_watermark option(1024);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48953:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:48955:  boost::asio::socket_base::send_low_watermark option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:49035:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:49037:  boost::asio::ip::tcp::no_delay option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:49083:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:49085:  boost::asio::ip::tcp::no_delay option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:49157:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:49159:  socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:49201:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:49204:  socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send, ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:49304:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:49306:  socket.wait(boost::asio::ip::tcp::socket::wait_read);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:49348:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:49351:  socket.wait(boost::asio::ip::tcp::socket::wait_read, ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50202:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50203:  boost::asio::ip::tcp::endpoint endpoint(boost::asio::ip::tcp::v4(), port);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50205:  acceptor.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50384:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50386:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50433:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50435:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50495:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50497:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50498:  boost::asio::ip::tcp::endpoint endpoint;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50546:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50548:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50549:  boost::asio::ip::tcp::endpoint endpoint;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50600:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50602:  boost::asio::ip::tcp::socket socket(acceptor.accept());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50648:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50650:  boost::asio::ip::tcp::socket socket(acceptor.accept(ec));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50713:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50715:  boost::asio::ip::tcp::socket socket(acceptor.accept());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50774:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50776:  boost::asio::ip::tcp::socket socket(acceptor.accept());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50828:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50830:  boost::asio::ip::tcp::socket socket(acceptor.accept(my_context2, ec));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50886:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50888:  boost::asio::ip::tcp::socket socket(acceptor.accept(my_context2, ec));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50948:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50950:  boost::asio::ip::tcp::endpoint endpoint;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:50951:  boost::asio::ip::tcp::socket socket(acceptor.accept(endpoint));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51000:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51002:  boost::asio::ip::tcp::endpoint endpoint;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51003:  boost::asio::ip::tcp::socket socket(acceptor.accept(endpoint, ec));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51069:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51071:  boost::asio::ip::tcp::endpoint endpoint;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51072:  boost::asio::ip::tcp::socket socket(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51135:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51137:  boost::asio::ip::tcp::endpoint endpoint;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51138:  boost::asio::ip::tcp::socket socket(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51194:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51196:  boost::asio::ip::tcp::endpoint endpoint;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51197:  boost::asio::ip::tcp::socket socket(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51257:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51259:  boost::asio::ip::tcp::endpoint endpoint;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51260:  boost::asio::ip::tcp::socket socket(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51468:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51470:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51620:      boost::asio::ip::tcp::socket peer)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51630:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51718:      boost::asio::ip::tcp::socket peer)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51728:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51816:      boost::asio::ip::tcp::socket peer)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51826:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51912:      boost::asio::ip::tcp::socket peer)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51922:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:51924:  boost::asio::ip::tcp::endpoint endpoint;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:52014:      boost::asio::ip::tcp::socket peer)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:52024:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:52026:  boost::asio::ip::tcp::endpoint endpoint;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:52116:      boost::asio::ip::tcp::socket peer)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:52126:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:52128:  boost::asio::ip::tcp::endpoint endpoint;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:52215:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:52218:      boost::asio::ip::tcp::acceptor::wait_read,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:52827:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:52828:  boost::asio::ip::tcp::endpoint endpoint(boost::asio::ip::tcp::v4(), 12345);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:52872:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:52873:  boost::asio::ip::tcp::endpoint endpoint(boost::asio::ip::tcp::v4(), 12345);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:52914:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:52916:  boost::asio::socket_base::broadcast option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:52925:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:52927:  boost::asio::socket_base::broadcast option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:52968:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:52970:  boost::asio::socket_base::bytes_readable command(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53013:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53042:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53135:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53176:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53178:  boost::asio::socket_base::debug option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53187:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53189:  boost::asio::socket_base::debug option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53230:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53232:  boost::asio::socket_base::do_not_route option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53241:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53243:  boost::asio::socket_base::do_not_route option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53277:Implements a custom socket option that determines whether or not an accept operation is permitted to fail with `boost::asio::error::connection_aborted`. By default the option is false.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53284:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53286:  boost::asio::socket_base::enable_connection_aborted option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53295:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53297:  boost::asio::socket_base::enable_connection_aborted option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53433:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53435:  boost::asio::ip::tcp::acceptor::reuse_address option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53482:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53484:  boost::asio::ip::tcp::acceptor::reuse_address option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53564:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53566:  boost::asio::ip::tcp::acceptor::non_blocking_io command(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53612:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53614:  boost::asio::ip::tcp::acceptor::non_blocking_io command(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53668:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53670:  boost::asio::socket_base::keep_alive option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53679:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53681:  boost::asio::socket_base::keep_alive option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53722:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53724:  boost::asio::socket_base::linger option(true, 30);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53733:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53735:  boost::asio::socket_base::linger option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53841:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53844:  acceptor.listen(boost::asio::socket_base::max_listen_connections, ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53906:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53908:  boost::asio::ip::tcp::endpoint endpoint = acceptor.local_endpoint();
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53952:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:53955:  boost::asio::ip::tcp::endpoint endpoint = acceptor.local_endpoint(ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54155:`true` if the underlying acceptor is in non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54187:[[mode][If `true`, the underlying acceptor is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54197:[[boost::system::system_error][Thrown on failure. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense. ]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54227:[[mode][If `true`, the underlying acceptor is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54229:[[ec][Set to indicate what error occurred, if any. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense. ]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54276:`true` if the acceptor's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54281:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54306:[[mode][If `true`, the acceptor's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54323:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54349:[[mode][If `true`, the acceptor's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54358:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54421:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54422:  acceptor.open(boost::asio::ip::tcp::v4());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54464:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54466:  acceptor.open(boost::asio::ip::tcp::v4(), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54598:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54600:  boost::asio::socket_base::out_of_band_inline option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54609:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54611:  boost::asio::socket_base::out_of_band_inline option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54673:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54675:  boost::asio::socket_base::receive_buffer_size option(8192);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54684:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54686:  boost::asio::socket_base::receive_buffer_size option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54727:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54729:  boost::asio::socket_base::receive_low_watermark option(1024);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54738:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54740:  boost::asio::socket_base::receive_low_watermark option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54783:This function causes all outstanding asynchronous accept operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native acceptor is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54798:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54817:This function causes all outstanding asynchronous accept operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native acceptor is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54832:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54863:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54865:  boost::asio::socket_base::reuse_address option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54874:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54876:  boost::asio::socket_base::reuse_address option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54917:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54919:  boost::asio::socket_base::send_buffer_size option(8192);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54928:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54930:  boost::asio::socket_base::send_buffer_size option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54971:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54973:  boost::asio::socket_base::send_low_watermark option(1024);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54982:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:54984:  boost::asio::socket_base::send_low_watermark option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:55064:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:55066:  boost::asio::ip::tcp::acceptor::reuse_address option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:55112:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:55114:  boost::asio::ip::tcp::acceptor::reuse_address option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:55216:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:55218:  acceptor.wait(boost::asio::ip::tcp::acceptor::wait_read);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:55260:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:55263:  acceptor.wait(boost::asio::ip::tcp::acceptor::wait_read, ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:55718:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:55719:  boost::asio::ip::tcp::endpoint endpoint(boost::asio::ip::tcp::v4(), port);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:55721:  acceptor.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:56111:This function sets the expiry time associated with the stream. Stream operations performed after this time (where the operations cannot be completed using the internal buffers) will fail with the error `boost::asio::error::operation_aborted`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:56140:This function sets the expiry time associated with the stream. Stream operations performed after this time (where the operations cannot be completed using the internal buffers) will fail with the error `boost::asio::error::operation_aborted`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:56672:This function sets the expiry time associated with the stream. Stream operations performed after this time (where the operations cannot be completed using the internal buffers) will fail with the error `boost::asio::error::operation_aborted`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:56701:This function sets the expiry time associated with the stream. Stream operations performed after this time (where the operations cannot be completed using the internal buffers) will fail with the error `boost::asio::error::operation_aborted`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:57241:  file.async_read_some(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:57322:  file.async_write_some(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:57867:This function causes all outstanding asynchronous read and write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:57882:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:57912:This function causes all outstanding asynchronous read and write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:57927:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:57971:This function is used to close the file. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:58003:This function is used to close the file. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:58020:  boost::asio::stream_file file(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:58265:  boost::asio::stream_file file(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:58266:  file.open("/path/to/my/file", boost::asio::stream_file::read_only);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:58314:  boost::asio::stream_file file(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:58316:  file.open("/path/to/my/file", boost::asio::stream_file::read_only, ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:58375:  boost::asio::stream_file file(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:58376:  file.open("/path/to/my/file", boost::asio::stream_file::read_only);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:58424:  boost::asio::stream_file file(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:58426:  file.open("/path/to/my/file", boost::asio::stream_file::read_only, ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:58607:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the end of the file was reached.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:58621:  file.read_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:58721:This function causes all outstanding asynchronous read and write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native file is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:58736:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:58758:This function causes all outstanding asynchronous read and write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native file is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:58773:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:59363:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the end of the file was reached.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:59377:  file.write_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:60273:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:60274:  boost::asio::ip::tcp::endpoint endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:60275:      boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:60357:  socket.async_read_some(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:60461:  socket.async_receive(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:60545:  socket.async_receive(boost::asio::buffer(data, size), 0, handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:60651:  socket.async_send(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:60735:  socket.async_send(boost::asio::buffer(data, size), 0, handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:60824:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:60826:  socket.async_wait(boost::asio::ip::tcp::socket::wait_read, wait_handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:60907:  socket.async_write_some(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:61656:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:61657:  socket.open(boost::asio::ip::tcp::v4());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:61658:  socket.bind(boost::asio::ip::tcp::endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:61659:        boost::asio::ip::tcp::v4(), 12345));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:61704:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:61705:  socket.open(boost::asio::ip::tcp::v4());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:61707:  socket.bind(boost::asio::ip::tcp::endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:61708:        boost::asio::ip::tcp::v4(), 12345), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:61746:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:61748:  boost::asio::socket_base::broadcast option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:61757:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:61759:  boost::asio::socket_base::broadcast option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:61800:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:61802:  boost::asio::socket_base::bytes_readable command(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:61848:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:61863:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:61899:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:61914:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:61964:This function is used to close the socket. Any asynchronous send, receive or connect operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62001:This function is used to close the socket. Any asynchronous send, receive or connect operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62018:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62101:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62102:  boost::asio::ip::tcp::endpoint endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62103:      boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62151:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62152:  boost::asio::ip::tcp::endpoint endpoint(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62153:      boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62193:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62195:  boost::asio::socket_base::debug option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62204:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62206:  boost::asio::socket_base::debug option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62247:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62249:  boost::asio::socket_base::do_not_route option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62258:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62260:  boost::asio::socket_base::do_not_route option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62294:Implements a custom socket option that determines whether or not an accept operation is permitted to fail with `boost::asio::error::connection_aborted`. By default the option is false.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62301:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62303:  boost::asio::socket_base::enable_connection_aborted option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62312:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62314:  boost::asio::socket_base::enable_connection_aborted option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62456:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62458:  boost::asio::ip::tcp::socket::keep_alive option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62508:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62510:  boost::asio::ip::tcp::socket::keep_alive option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62593:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62595:  boost::asio::ip::tcp::socket::bytes_readable command;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62645:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62647:  boost::asio::ip::tcp::socket::bytes_readable command;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62705:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62707:  boost::asio::socket_base::keep_alive option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62716:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62718:  boost::asio::socket_base::keep_alive option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62759:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62761:  boost::asio::socket_base::linger option(true, 30);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62770:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62772:  boost::asio::socket_base::linger option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62841:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62843:  boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint();
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62890:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:62893:  boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint(ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:63560:`true` if the underlying socket is in non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).
/root/boost_1_87_0/libs/asio/doc/reference.qbk:63598:              boost::asio::error::get_system_category());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:63602:          if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:63606:          if (ec == boost::asio::error::would_block
/root/boost_1_87_0/libs/asio/doc/reference.qbk:63607:              || ec == boost::asio::error::try_again)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:63668:[[mode][If `true`, the underlying socket is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:63678:[[boost::system::system_error][Thrown on failure. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:63713:              boost::asio::error::get_system_category());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:63717:          if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:63721:          if (ec == boost::asio::error::would_block
/root/boost_1_87_0/libs/asio/doc/reference.qbk:63722:              || ec == boost::asio::error::try_again)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:63784:[[mode][If `true`, the underlying socket is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:63786:[[ec][Set to indicate what error occurred, if any. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:63821:              boost::asio::error::get_system_category());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:63825:          if (ec == boost::asio::error::interrupted)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:63829:          if (ec == boost::asio::error::would_block
/root/boost_1_87_0/libs/asio/doc/reference.qbk:63830:              || ec == boost::asio::error::try_again)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:63909:`true` if the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:63914:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:63942:[[mode][If `true`, the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:63959:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:63988:[[mode][If `true`, the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:63997:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64063:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64064:  socket.open(boost::asio::ip::tcp::v4());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64109:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64111:  socket.open(boost::asio::ip::tcp::v4(), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64243:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64245:  boost::asio::socket_base::out_of_band_inline option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64254:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64256:  boost::asio::socket_base::out_of_band_inline option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64352:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64366:  socket.read_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64490:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64504:  socket.receive(boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64554:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64568:  socket.receive(boost::asio::buffer(data, size), 0);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64649:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64651:  boost::asio::socket_base::receive_buffer_size option(8192);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64660:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64662:  boost::asio::socket_base::receive_buffer_size option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64703:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64705:  boost::asio::socket_base::receive_low_watermark option(1024);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64714:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64716:  boost::asio::socket_base::receive_low_watermark option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64762:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native socket is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64777:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64799:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native socket is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64814:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64872:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64874:  boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint();
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64921:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64924:  boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint(ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64962:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64964:  boost::asio::socket_base::reuse_address option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64973:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:64975:  boost::asio::socket_base::reuse_address option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:65072:  socket.send(boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:65136:  socket.send(boost::asio::buffer(data, size), 0);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:65217:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:65219:  boost::asio::socket_base::send_buffer_size option(8192);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:65228:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:65230:  boost::asio::socket_base::send_buffer_size option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:65271:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:65273:  boost::asio::socket_base::send_low_watermark option(1024);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:65282:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:65284:  boost::asio::socket_base::send_low_watermark option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:65367:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:65369:  boost::asio::ip::tcp::no_delay option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:65418:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:65420:  boost::asio::ip::tcp::no_delay option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:65495:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:65497:  socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:65542:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:65545:  socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send, ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:65648:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:65650:  socket.wait(boost::asio::ip::tcp::socket::wait_read);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:65695:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:65698:  socket.wait(boost::asio::ip::tcp::socket::wait_read, ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:65808:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:65822:  socket.write_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:66489:  boost::asio::streambuf b;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:66503:  boost::asio::streambuf b;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:66506:  boost::asio::streambuf::mutable_buffers_type bufs = b.prepare(512);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:67140:  boost::asio::streambuf b;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:67154:  boost::asio::streambuf b;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:67157:  boost::asio::streambuf::mutable_buffers_type bufs = b.prepare(512);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:67349:  boost::asio::streambuf b;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:67363:  boost::asio::streambuf b;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:67366:  boost::asio::streambuf::mutable_buffers_type bufs = b.prepare(512);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:67826:  boost::asio::system_executor ex;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:67827:  auto alloc = boost::asio::query(ex,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:67828:      boost::asio::execution::allocator);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:67852:  boost::asio::system_executor ex;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:67853:  auto alloc = boost::asio::query(ex,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:67854:      boost::asio::execution::allocator);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:67878:  boost::asio::system_executor ex;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:67879:  std::size_t occupancy = boost::asio::query(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:67880:      ex, boost::asio::execution::occupancy);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:67940:  boost::asio::system_executor ex;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:67941:  if (boost::asio::query(ex, boost::asio::execution::mapping)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:67942:        == boost::asio::execution::mapping.thread)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:67967:  boost::asio::system_executor ex;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:67968:  boost::asio::system_context& pool = boost::asio::query(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:67969:      ex, boost::asio::execution::context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:67993:  boost::asio::system_executor ex;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:67994:  if (boost::asio::query(ex, boost::asio::execution::blocking)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:67995:        == boost::asio::execution::blocking.always)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68020:  boost::asio::system_executor ex;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68021:  if (boost::asio::query(ex, boost::asio::execution::relationship)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68022:        == boost::asio::execution::relationship.continuation)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68109:  boost::asio::system_executor ex1;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68110:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68111:      boost::asio::execution::blocking.possibly);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68135:  boost::asio::system_executor ex1;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68136:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68137:      boost::asio::execution::blocking.always);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68161:  boost::asio::system_executor ex1;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68162:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68163:      boost::asio::execution::blocking.never);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68187:  boost::asio::system_executor ex1;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68188:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68189:      boost::asio::execution::relationship.continuation);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68213:  boost::asio::system_executor ex1;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68214:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68215:      boost::asio::execution::relationship.fork);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68241:  boost::asio::system_executor ex1;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68242:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68243:      boost::asio::execution::allocator(my_allocator));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68267:  boost::asio::system_executor ex1;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68268:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68269:      boost::asio::execution::allocator);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68437:  boost::asio::steady_timer timer(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68462:  boost::asio::steady_timer timer(my_context,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68495:    if (e != boost::asio::error::operation_aborted)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68505:* The `boost::asio::basic_waitable_timer::expires_after()` function cancels any pending asynchronous waits, and returns the number of asynchronous waits that were cancelled. If it returns 0 then you were too late and the wait handler has already been executed, or will soon be executed. If it returns 1 then the wait handler was successfully cancelled.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68508:* If a wait handler is cancelled, the boost::system::error\_code passed to it contains the value `boost::asio::error::operation_aborted`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68539:* The timer was cancelled, in which case the handler is passed the error code `boost::asio::error::operation_aborted`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68931:This function forces the completion of any pending asynchronous wait operations against the timer. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:68977:This function forces the completion of one pending asynchronous wait operation against the timer. Handlers are cancelled in FIFO order. The handler for the cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:69087:This function sets the expiry time. Any pending asynchronous wait operations will be cancelled. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:69142:This function sets the expiry time. Any pending asynchronous wait operations will be cancelled. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:69618:  boost::asio::steady_timer timer(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:69643:  boost::asio::steady_timer timer(my_context,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:69676:    if (e != boost::asio::error::operation_aborted)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:69686:* The `boost::asio::basic_waitable_timer::expires_after()` function cancels any pending asynchronous waits, and returns the number of asynchronous waits that were cancelled. If it returns 0 then you were too late and the wait handler has already been executed, or will soon be executed. If it returns 1 then the wait handler was successfully cancelled.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:69689:* If a wait handler is cancelled, the boost::system::error\_code passed to it contains the value `boost::asio::error::operation_aborted`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:69956:  pipe.async_write_some(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:70264:This function causes all outstanding asynchronous write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:70293:This function causes all outstanding asynchronous write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:70336:This function is used to close the pipe. Any asynchronous write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:70365:This function is used to close the pipe. Any asynchronous write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:70797:This function causes all outstanding asynchronous write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native pipe is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:70812:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:70831:This function causes all outstanding asynchronous write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native pipe is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:70846:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:70911:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:70925:  pipe.write_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:72279:  sock.send(boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:72291:  size_t bytes_transferred = sock.receive(boost::asio::buffer(d1));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:72294:  bytes_transferred = sock.receive(boost::asio::buffer(d2));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:72297:  bytes_transferred = sock.receive(boost::asio::buffer(d3));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:72300:  bytes_transferred = sock.receive(boost::asio::buffer(d4));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:72316:  boost::asio::mutable_buffer b1 = ...;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:72320:  boost::asio::const_buffer b2 = ...;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:72344:  vector<unsigned char> data(boost::asio::buffer_size(buffers));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:72345:  boost::asio::buffer_copy(boost::asio::buffer(data), buffers);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:72381:  b1 = boost::asio::buffer(a);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:72390:  b2 = boost::asio::buffer(a, 3);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:72412:  b4 = boost::asio::buffer(b1 + 1, 3);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:72433:    boost::asio::buffer(d1),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:72434:    boost::asio::buffer(d2),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:72435:    boost::asio::buffer(d3) };
/root/boost_1_87_0/libs/asio/doc/reference.qbk:72439:  bufs2.push_back(boost::asio::buffer(d1));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:72440:  bufs2.push_back(boost::asio::buffer(d2));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:72441:  bufs2.push_back(boost::asio::buffer(d3));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:72452:The `_buf` literal suffix, defined in namespace `boost::asio::buffer_literals`, may be used to create `const_buffer` objects from string, binary integer, and hexadecimal integer literals. For example:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:72456:  using namespace boost::asio::buffer_literals;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:72458:  boost::asio::const_buffer b1 = "hello"_buf;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:72459:  boost::asio::const_buffer b2 = 0xdeadbeef_buf;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:72460:  boost::asio::const_buffer b3 = 0x0123456789abcdef0123456789abcdef_buf;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:72461:  boost::asio::const_buffer b4 = 0b1010101011001100_buf;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:74676:  auto i = boost::asio::buffer_sequence_begin(buffers);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:74677:  auto end = boost::asio::buffer_sequence_end(buffers);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:77881:Class template `can_prefer` is a trait that is derived from `true_type` if the expression `boost::asio::prefer(std::declval<T>(), std::declval<Properties>()...)` is well formed; otherwise `false_type`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:77907:Class template `can_query` is a trait that is derived from `true_type` if the expression `boost::asio::query(std::declval<T>(), std::declval<Property>())` is well formed; otherwise `false_type`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:77933:Class template `can_require` is a trait that is derived from `true_type` if the expression `boost::asio::require(std::declval<T>(), std::declval<Properties>()...)` is well formed; otherwise `false_type`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:77959:Class template `can_require_concept` is a trait that is derived from `true_type` if the expression `boost::asio::require_concept(std::declval<T>(), std::declval<Property>())` is well formed; otherwise `false_type`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:78237:      typename ``[link boost_asio.reference.WaitTraits WaitTraits]`` = boost::asio::wait_traits<Clock>>
/root/boost_1_87_0/libs/asio/doc/reference.qbk:78350:      typename ``[link boost_asio.reference.WaitTraits WaitTraits]`` = boost::asio::wait_traits<Clock>,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:78732:      typename ``[link boost_asio.reference.WaitTraits WaitTraits]`` = boost::asio::wait_traits<Clock>>
/root/boost_1_87_0/libs/asio/doc/reference.qbk:78845:      typename ``[link boost_asio.reference.WaitTraits WaitTraits]`` = boost::asio::wait_traits<Clock>,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:79201:  void handler(boost::asio::cancellation_type_t);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:79275:  void handler(boost::asio::cancellation_type_t);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80244:  boost::asio::cancellation_type_t filter(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80245:     boost::asio::cancellation_type_t);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80295:  boost::asio::cancellation_type_t in_filter(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80296:     boost::asio::cancellation_type_t);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80302:  boost::asio::cancellation_type_t out_filter(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80303:     boost::asio::cancellation_type_t);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80501:    return boost::asio::async_initiate<
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80503:        boost::asio::co_composed(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80507:              boost::asio::enable_terminal_cancellation());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80514:                  boost::asio::buffer(data));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80521:                  make_error_code(boost::asio::error::operation_aborted));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80524:                co_await boost::asio::async_write(socket,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80525:                  boost::asio::buffer(data, n1));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80545:    return boost::asio::async_initiate<
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80547:        boost::asio::co_composed<
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80555:                  boost::asio::enable_terminal_cancellation());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80561:                      boost::asio::buffer(data));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80563:                  co_await boost::asio::async_write(socket,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80564:                      boost::asio::buffer(data, n));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80720:  boost::asio::awaitable<std::size_t> echo(tcp::socket socket)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80730:            boost::asio::buffer(data), boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80732:        co_await boost::asio::async_write(socket,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80733:            boost::asio::buffer(data, n), boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80747:  boost::asio::co_spawn(my_executor,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80819:  boost::asio::awaitable<void> echo(tcp::socket socket)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80827:            boost::asio::buffer(data), boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80829:        co_await boost::asio::async_write(socket,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80830:            boost::asio::buffer(data, n), boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80841:  boost::asio::co_spawn(my_executor,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80843:    boost::asio::detached);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80911:  boost::asio::awaitable<std::size_t> echo(tcp::socket socket)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80921:            boost::asio::buffer(data), boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80923:        co_await boost::asio::async_write(socket,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80924:            boost::asio::buffer(data, n), boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:80938:  boost::asio::co_spawn(my_io_context,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81010:  boost::asio::awaitable<void> echo(tcp::socket socket)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81018:            boost::asio::buffer(data), boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81020:        co_await boost::asio::async_write(socket,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81021:            boost::asio::buffer(data, n), boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81032:  boost::asio::co_spawn(my_io_context,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81034:    boost::asio::detached);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81076:[[f][A nullary function object with a return type of the form `boost::asio::awaitable<R,E>` that will be used as the coroutine's entry point.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81104:  boost::asio::awaitable<R, AwaitableExecutor> F()
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81114:  boost::asio::awaitable<std::size_t> echo(tcp::socket socket)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81124:            boost::asio::buffer(data), boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81126:        co_await boost::asio::async_write(socket,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81127:            boost::asio::buffer(data, n), boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81141:  boost::asio::co_spawn(my_executor,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81143:      -> boost::asio::awaitable<void>
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81151:              boost::asio::buffer(data), boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81153:          co_await boost::asio::async_write(socket,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81154:              boost::asio::buffer(data, n), boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81161:    }, boost::asio::detached);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81203:[[f][A nullary function object with a return type of the form `boost::asio::awaitable<R,E>` that will be used as the coroutine's entry point.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81231:  boost::asio::awaitable<R, AwaitableExecutor> F()
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81241:  boost::asio::awaitable<std::size_t> echo(tcp::socket socket)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81251:            boost::asio::buffer(data), boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81253:        co_await boost::asio::async_write(socket,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81254:            boost::asio::buffer(data, n), boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81268:  boost::asio::co_spawn(my_io_context,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81270:      -> boost::asio::awaitable<void>
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81278:              boost::asio::buffer(data), boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81280:          co_await boost::asio::async_write(socket,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81281:              boost::asio::buffer(data, n), boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81288:    }, boost::asio::detached);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81444:    boost::asio::mutable_buffer buffer_;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81467:          boost::asio::async_write(socket_, buffer_,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81468:              boost::asio::transfer_exactly(n),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81481:      boost::asio::mutable_buffer buffer,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81484:      boost::asio::async_initiate<CompletionToken,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81486:          boost::asio::composed(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81491:    return boost::asio::async_initiate<CompletionToken,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81493:        boost::asio::composed(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81658:  boost::asio::io_context my_io_context{
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81659:     boost::asio::config_from_concurrency_hint{1}};
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81775:  boost::asio::io_context my_io_context{
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81776:     boost::asio::config_from_env{"my_app"}};
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81900:  boost::asio::io_context my_io_context{
/root/boost_1_87_0/libs/asio/doc/reference.qbk:81901:     boost::asio::config_from_string{
/root/boost_1_87_0/libs/asio/doc/reference.qbk:82321:[[boost::system::system_error][Thrown on failure. If the sequence is empty, the associated `error_code` is `boost::asio::error::not_found`. Otherwise, contains the error from the last connection attempt.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:82333:  boost::asio::connect(s, r.resolve(q));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:82374:[[ec][Set to indicate what error occurred, if any. If the sequence is empty, set to `boost::asio::error::not_found`. Otherwise, contains the error from the last connection attempt.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:82392:  boost::asio::connect(s, r.resolve(q), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:82451:[[boost::system::system_error][Thrown on failure. If the sequence is empty, the associated `error_code` is `boost::asio::error::not_found`. Otherwise, contains the error from the last connection attempt.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:82464:  boost::asio::connect(s, e.begin(), e.end());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:82507:[[ec][Set to indicate what error occurred, if any. If the sequence is empty, set to `boost::asio::error::not_found`. Otherwise, contains the error from the last connection attempt.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:82526:  boost::asio::connect(s, e.begin(), e.end(), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:82594:[[boost::system::system_error][Thrown on failure. If the sequence is empty, the associated `error_code` is `boost::asio::error::not_found`. Otherwise, contains the error from the last connection attempt.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:82621:  tcp::endpoint e = boost::asio::connect(s,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:82675:[[ec][Set to indicate what error occurred, if any. If the sequence is empty, set to `boost::asio::error::not_found`. Otherwise, contains the error from the last connection attempt.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:82708:  tcp::endpoint e = boost::asio::connect(s,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:82783:[[boost::system::system_error][Thrown on failure. If the sequence is empty, the associated `error_code` is `boost::asio::error::not_found`. Otherwise, contains the error from the last connection attempt.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:82811:  tcp::resolver::results_type::iterator i = boost::asio::connect(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:82867:[[ec][Set to indicate what error occurred, if any. If the sequence is empty, set to `boost::asio::error::not_found`. Otherwise, contains the error from the last connection attempt.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:82901:  tcp::resolver::results_type::iterator i = boost::asio::connect(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:83199:  boost::asio::const_buffer b1 = ...;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:84190:  boost::asio::deadline_timer timer(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:84215:  boost::asio::deadline_timer timer(my_context,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:84248:    if (e != boost::asio::error::operation_aborted)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:84258:* The `boost::asio::basic_deadline_timer::expires_from_now()` function cancels any pending asynchronous waits, and returns the number of asynchronous waits that were cancelled. If it returns 0 then you were too late and the wait handler has already been executed, or will soon be executed. If it returns 1 then the wait handler was successfully cancelled.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:84261:* If a wait handler is cancelled, the boost::system::error\_code passed to it contains the value `boost::asio::error::operation_aborted`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:84296:    [If T has a nested type default_completion_token_type, T::default_completion_token_type. Otherwise the typedef type is boost::asio::deferred_t. ]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:84354:    [If T has a nested type default_completion_token_type, T::default_completion_token_type. Otherwise the typedef type is boost::asio::deferred_t. ]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:85550:or by explicitly passing the special value `boost::asio::deferred`:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:85556:       boost::asio::deferred);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:85854:or by explicitly passing the special value `boost::asio::deferred`:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:85860:       boost::asio::deferred);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:86127:The [link boost_asio.reference.detached_t `detached_t`] class is used to indicate that an asynchronous operation is detached. That is, there is no completion handler waiting for the operation's result. A [link boost_asio.reference.detached_t `detached_t`] object may be passed as a handler to an asynchronous operation, typically using the special value `boost::asio::detached`. For example:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:86131:  my_socket.async_send(my_buffer, boost::asio::detached);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:86315:The [link boost_asio.reference.detached_t `detached_t`] class is used to indicate that an asynchronous operation is detached. That is, there is no completion handler waiting for the operation's result. A [link boost_asio.reference.detached_t `detached_t`] object may be passed as a handler to an asynchronous operation, typically using the special value `boost::asio::detached`. For example:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:86319:  my_socket.async_send(my_buffer, boost::asio::detached);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:87457:  boost::asio::const_buffer b1 = ...;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:87836:  boost::asio::mutable_buffer b1 = ...;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:88159:  boost::asio::const_buffer b1 = ...;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:88528:  boost::asio::mutable_buffer b1 = ...;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:88733:  static const boost::system::error_category & addrinfo_category = boost::asio::error::get_addrinfo_category();
/root/boost_1_87_0/libs/asio/doc/reference.qbk:89228:  static const boost::system::error_category & misc_category = boost::asio::error::get_misc_category();
/root/boost_1_87_0/libs/asio/doc/reference.qbk:89295:  static const boost::system::error_category & netdb_category = boost::asio::error::get_netdb_category();
/root/boost_1_87_0/libs/asio/doc/reference.qbk:89362:  static const boost::system::error_category & ssl_category = boost::asio::error::get_ssl_category();
/root/boost_1_87_0/libs/asio/doc/reference.qbk:89399:  static const boost::system::error_category & system_category = boost::asio::error::get_system_category();
/root/boost_1_87_0/libs/asio/doc/reference.qbk:90262:  auto ex2 = boost::asio::prefer(ex, execution::blocking.possibly);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:90289:  size_t n = boost::asio::query(ex, execution::occupancy);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:90316:  auto ex2 = boost::asio::require(ex, execution::blocking.possibly);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:95068:[[boost::asio::service_already_exists][Thrown if a service of the given type is already present in the [link boost_asio.reference.execution_context `execution_context`].]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:95070:[[boost::asio::invalid_service_owner][Thrown if the service's owning [link boost_asio.reference.execution_context `execution_context`] is not the [link boost_asio.reference.execution_context `execution_context`] object specified by the `e` parameter. ]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:95279:[[boost::asio::service_already_exists][Thrown if a service of the given type is already present in the [link boost_asio.reference.execution_context `execution_context`]. ]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:98897:All outstanding send operations will complete with the error `boost::asio::experimental::error::channel_cancelled`. Outstanding receive operations complete with the result as determined by the channel traits.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:99925:All outstanding send operations will complete with the error `boost::asio::experimental::error::channel_cancelled`. Outstanding receive operations complete with the result as determined by the channel traits.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:101251:    [The traits of the coroutine. See boost::asio::experimental::coro_traits for details. ]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:102264:  static const boost::system::error_category & channel_category = boost::asio::experimental::error::get_channel_category();
/root/boost_1_87_0/libs/asio/doc/reference.qbk:102433:    [The traits of the coroutine. See boost::asio::experimental::coro_traits for details. ]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:102688:  boost::asio::experimental::make_parallel_group(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:102689:    in.async_read_some(boost::asio::buffer(data)),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:102692:    boost::asio::experimental::wait_for_all(),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:102720:  boost::asio::experimental::make_parallel_group(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:102723:      return in.async_read_some(boost::asio::buffer(data), token);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:102730:    boost::asio::experimental::wait_for_all(),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:102787:    decltype(socket1.async_read_some(boost::asio::buffer(data1)));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:102790:  ops.push_back(socket1.async_read_some(boost::asio::buffer(data1)));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:102791:  ops.push_back(socket2.async_read_some(boost::asio::buffer(data2)));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:102793:  boost::asio::experimental::make_parallel_group(ops).async_wait(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:102794:      boost::asio::experimental::wait_for_all(),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:102849:    decltype(socket1.async_read_some(boost::asio::buffer(data1)));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:102852:  ops.push_back(socket1.async_read_some(boost::asio::buffer(data1)));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:102853:  ops.push_back(socket2.async_read_some(boost::asio::buffer(data2)));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:102855:  boost::asio::experimental::make_parallel_group(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:102860:      boost::asio::experimental::wait_for_all(),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:102958:[[cancellation_condition][A function object, called on completion of an operation within the group, that is used to determine whether to cancel the remaining operations. The function object is passed the arguments of the completed operation's handler. To trigger cancellation of the remaining operations, it must return a [link boost_asio.reference.cancellation_type `cancellation_type`] value other than `boost::asio::cancellation_type::none`.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:103030:      typename ``[link boost_asio.reference.Executor1 Executor]`` = boost::asio::any_io_executor,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:103100:  awaitable<void> read_write_some(boost::asio::ip::tcp::socket & sock,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:103101:      boost::asio::mutable_buffer read_buf, boost::asio::const_buffer to_write)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:103103:    auto p = boost::asio::async_read(read_buf,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:103104:        boost::asio::experimental::use_promise);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:103105:    co_await boost::asio::async_write_some(to_write);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:103503:[[cancellation_condition][A function object, called on completion of an operation within the group, that is used to determine whether to cancel the remaining operations. The function object is passed the arguments of the completed operation's handler. To trigger cancellation of the remaining operations, it must return a [link boost_asio.reference.cancellation_type `cancellation_type`] value other than `boost::asio::cancellation_type::none`.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:103645:    [The traits of the coroutine. See boost::asio::experimental::coro_traits for details. ]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:103753:See the documentation for boost::asio::use\_coro\_t for a usage example.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:103848:Note that this token is not the most efficient (use the default completion token `boost::asi
::deferred` for that) but does provide type erasure, as it will always return a `coro`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:104153:Note that this token is not the most efficient (use the default completion token `boost::asi
::deferred` for that) but does provide type erasure, as it will always return a `coro`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:105881:  datagram_protocol p(boost::asio::ip::udp::v4());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:106713:  raw_protocol p(boost::asio::ip::icmp::v4());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:108361:  stream_protocol p(boost::asio::ip::tcp::v4());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:109743:  boost::asio::steady_timer timer(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:109768:  boost::asio::steady_timer timer(my_context,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:109801:    if (e != boost::asio::error::operation_aborted)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:109811:* The `boost::asio::basic_waitable_timer::expires_after()` function cancels any pending asynchronous waits, and returns the number of asynchronous waits that were cancelled. If it returns 0 then you were too late and the wait handler has already been executed, or will soon be executed. If it returns 1 then the wait handler was successfully cancelled.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:109814:* If a wait handler is cancelled, the boost::system::error\_code passed to it contains the value `boost::asio::error::operation_aborted`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:110726:    [(Deprecated: Use boost::asio::bind_executor().) Create a new handler that automatically dispatches the wrapped handler on the io_context. ]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:110766:* `boost::asio::ip::tcp::socket`
/root/boost_1_87_0/libs/asio/doc/reference.qbk:110768:* `boost::asio::ip::tcp::acceptor`
/root/boost_1_87_0/libs/asio/doc/reference.qbk:110770:* `boost::asio::ip::udp::socket`
/root/boost_1_87_0/libs/asio/doc/reference.qbk:110804:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:110840:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:110843:  boost::asio::post(io_context, my_task);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:110846:  boost::asio::post(io_context,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:110863:Some applications may need to prevent an [link boost_asio.reference.io_context `io_context`] object's `run()` call from returning when there is no more work to do. For example, the [link boost_asio.reference.io_context `io_context`] may be being run in a background thread that is launched prior to the application's asynchronous operations. The `run()` call may be kept running by using the [link boost_asio.reference.make_work_guard `make_work_guard`] function to create an object of type boost::asio::executor\_work\_guard<io\_context::executor\_type>:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:110867:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:110868:  boost::asio::executor_work_guard<boost::asio::io_context::executor_type>
/root/boost_1_87_0/libs/asio/doc/reference.qbk:110869:    = boost::asio::make_work_guard(io_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:110881:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:110882:  boost::asio::executor_work_guard<boost::asio::io_context::executor_type>
/root/boost_1_87_0/libs/asio/doc/reference.qbk:110883:    = boost::asio::make_work_guard(io_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:111699:  boost::asio::dispatch(io_context,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112277:  boost::asio::io_context& ctx = boost::asio::query(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112278:      ex, boost::asio::execution::context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112303:  if (boost::asio::query(ex, boost::asio::execution::blocking)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112304:        == boost::asio::execution::blocking.always)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112330:  if (boost::asio::query(ex, boost::asio::execution::relationship)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112331:        == boost::asio::execution::relationship.continuation)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112359:  auto alloc = boost::asio::query(ex,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112360:      boost::asio::execution::allocator);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112385:  auto alloc = boost::asio::query(ex,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112386:      boost::asio::execution::allocator);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112431:  if (boost::asio::query(ex, boost::asio::execution::mapping)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112432:        == boost::asio::execution::mapping.thread)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112458:  if (boost::asio::query(ex, boost::asio::execution::outstanding_work)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112459:        == boost::asio::execution::outstanding_work.tracked)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112555:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112556:      boost::asio::execution::blocking.possibly);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112581:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112582:      boost::asio::execution::blocking.never);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112607:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112608:      boost::asio::execution::relationship.fork);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112633:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112634:      boost::asio::execution::relationship.continuation);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112659:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112660:      boost::asio::execution::outstanding_work.tracked);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112685:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112686:      boost::asio::execution::outstanding_work.untracked);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112713:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112714:      boost::asio::execution::allocator(my_allocator));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112739:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112740:      boost::asio::execution::allocator);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112863:  boost::asio::io_context & get_io_context();
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112878:      boost::asio::io_context & owner);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:112973:    [(Deprecated: Use boost::asio::bind_executor().) Create a new handler that automatically dispatches the wrapped handler on the strand. ]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:113073:  boost::asio::io_context & context() const;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:113305:      boost::asio::io_context & io_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:113324:      boost::asio::io_context & io_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:113413:  boost::asio::dispatch(strand, boost::bind(f, a1, ... an));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:113609:      const boost::asio::ip::address_v4 & ipv4_address);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:113617:      const boost::asio::ip::address_v6 & ipv6_address);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:113658:      const boost::asio::ip::address_v4 & ipv4_address);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:113673:      const boost::asio::ip::address_v6 & ipv6_address);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:114039:      const boost::asio::ip::address_v4 & ipv4_address);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:114047:      const boost::asio::ip::address_v6 & ipv6_address);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:114088:      const boost::asio::ip::address_v4 & ipv4_address);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:114103:      const boost::asio::ip::address_v6 & ipv6_address);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:114199:  boost::asio::ip::address_v4 to_v4() const;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:114213:  boost::asio::ip::address_v6 to_v6() const;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:119338:  boost::asio::ip::address ``[link boost_asio.reference.ip__basic_endpoint.address.overload1 address]``() const;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:119346:      const boost::asio::ip::address & addr);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:119356:  boost::asio::ip::address address() const;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:119371:      const boost::asio::ip::address & addr);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:119403:      const boost::asio::ip::address & addr,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:119454:  boost::asio::ip::tcp::endpoint ep(boost::asio::ip::tcp::v4(), 1234);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:119461:  boost::asio::ip::udp::endpoint ep(boost::asio::ip::udp::v6(), 9876);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:119478:      const boost::asio::ip::address & addr,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:120681:This function forces the completion of any pending asynchronous operations on the host resolver. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:123414:  const boost::asio::detail::addrinfo_type & hints() const;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:125462:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:125464:  boost::asio::ip::multicast::enable_loopback option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:125473:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:125475:  boost::asio::ip::multicast::enable_loopback option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:125514:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:125516:  boost::asio::ip::multicast::hops option(4);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:125525:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:125527:  boost::asio::ip::multicast::hops option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:125566:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:125568:  boost::asio::ip::address multicast_address =
/root/boost_1_87_0/libs/asio/doc/reference.qbk:125569:    boost::asio::ip::address::from_string("225.0.0.1");
/root/boost_1_87_0/libs/asio/doc/reference.qbk:125570:  boost::asio::ip::multicast::join_group option(multicast_address);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:125608:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:125610:  boost::asio::ip::address multicast_address =
/root/boost_1_87_0/libs/asio/doc/reference.qbk:125611:    boost::asio::ip::address::from_string("225.0.0.1");
/root/boost_1_87_0/libs/asio/doc/reference.qbk:125612:  boost::asio::ip::multicast::leave_group option(multicast_address);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:125650:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:125652:  boost::asio::ip::address_v4 local_interface =
/root/boost_1_87_0/libs/asio/doc/reference.qbk:125653:    boost::asio::ip::address_v4::from_string("1.2.3.4");
/root/boost_1_87_0/libs/asio/doc/reference.qbk:125654:  boost::asio::ip::multicast::outbound_interface option(local_interface);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:127882:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:127883:  boost::asio::ip::tcp::endpoint endpoint(boost::asio::ip::tcp::v4(), port);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:127885:  acceptor.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:128226:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:128228:  boost::asio::ip::tcp::no_delay option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:128237:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:128239:  boost::asio::ip::tcp::no_delay option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:129955:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:129957:  boost::asio::ip::unicast::hops option(4);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:129966:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:129968:  boost::asio::ip::unicast::hops option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:130039:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:130041:  boost::asio::ip::v6_only option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:130050:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:130052:  boost::asio::ip::v6_only option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:130542:Class template `is_nothrow_prefer` is a trait that is derived from `true_type` if the expression `boost::asio::prefer(std::declval<T>(), std::declval<Properties>()...)` is `noexcept`; otherwise `false_type`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:130568:Class template `is_nothrow_query` is a trait that is derived from `true_type` if the expression `boost::asio::query(std::declval<T>(), std::declval<Property>())` is `noexcept`; otherwise `false_type`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:130594:Class template `is_nothrow_require` is a trait that is derived from `true_type` if the expression `boost::asio::require(std::declval<T>(), std::declval<Properties>()...)` is `noexcept`; otherwise `false_type`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:130620:Class template `is_nothrow_require_concept` is a trait that is derived from `true_type` if the expression `boost::asio::require_concept(std::declval<T>(), std::declval<Property>())` is `noexcept`; otherwise `false_type`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:132619:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:132620:  boost::asio::ip::tcp::endpoint endpoint(boost::asio::ip::tcp::v4(), port);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:132622:  acceptor.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:133680:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:133681:  boost::asio::ip::tcp::endpoint endpoint(boost::asio::ip::tcp::v4(), port);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:133683:  acceptor.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:134947:  boost::asio::mutable_buffer b1 = ...;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:135821:  boost::asio::mutable_buffer b1 = ...;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:136044:      typename ``[link boost_asio.reference.WaitTraits WaitTraits]`` = boost::asio::wait_traits<Clock>>
/root/boost_1_87_0/libs/asio/doc/reference.qbk:136158:      typename ``[link boost_asio.reference.WaitTraits WaitTraits]`` = boost::asio::wait_traits<Clock>,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:136291:      typename ``[link boost_asio.reference.WaitTraits WaitTraits]`` = boost::asio::wait_traits<Clock>>
/root/boost_1_87_0/libs/asio/doc/reference.qbk:136405:      typename ``[link boost_asio.reference.WaitTraits WaitTraits]`` = boost::asio::wait_traits<Clock>,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:136911:An argument placeholder, for use with std::bind() or boost::bind(), that corresponds to the bytes\_transferred argument of a handler for asynchronous functions such as `boost::asio::basic_stream_socket::async_write_some` or [link boost_asio.reference.async_write `async_write`].
/root/boost_1_87_0/libs/asio/doc/reference.qbk:136995:An argument placeholder, for use with std::bind() or boost::bind(), that corresponds to the results argument of a handler for asynchronous functions such as boost::asio::basic\_resolver::async\_resolve.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:137016:An argument placeholder, for use with std::bind() or boost::bind(), that corresponds to the signal\_number argument of a handler for asynchronous functions such as `boost::asio::signal_set::async_wait`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:137324:  boost::asio::posix::stream_descriptor descriptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:137327:      boost::asio::posix::stream_descriptor::wait_read,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:137648:  boost::asio::posix::stream_descriptor descriptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:137650:  boost::asio::descriptor_base::bytes_readable command(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:137693:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:137722:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:137765:This function is used to close the descriptor. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:137794:This function is used to close the descriptor. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:137909:  boost::asio::posix::stream_descriptor descriptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:137911:  boost::asio::posix::stream_descriptor::bytes_readable command;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:137958:  boost::asio::posix::stream_descriptor descriptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:137960:  boost::asio::posix::stream_descriptor::bytes_readable command;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:138318:`true` if the underlying descriptor is in non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).
/root/boost_1_87_0/libs/asio/doc/reference.qbk:138350:[[mode][If `true`, the underlying descriptor is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:138360:[[boost::system::system_error][Thrown on failure. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense. ]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:138390:[[mode][If `true`, the underlying descriptor is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:138392:[[ec][Set to indicate what error occurred, if any. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense. ]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:138439:`true` if the descriptor's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:138444:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:138469:[[mode][If `true`, the descriptor's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:138486:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:138512:[[mode][If `true`, the descriptor's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:138521:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:138635:All outstanding asynchronous read or write operations will finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:138684:  boost::asio::posix::stream_descriptor descriptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:138686:  descriptor.wait(boost::asio::posix::stream_descriptor::wait_read);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:138728:  boost::asio::posix::stream_descriptor descriptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:138731:  descriptor.wait(boost::asio::posix::stream_descriptor::wait_read, ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:139333:  descriptor.async_read_some(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:139420:  boost::asio::posix::stream_descriptor descriptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:139423:      boost::asio::posix::stream_descriptor::wait_read,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:139505:  descriptor.async_write_some(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:139825:  boost::asio::posix::stream_descriptor descriptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:139827:  boost::asio::descriptor_base::bytes_readable command(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:139873:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:139905:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:139951:This function is used to close the descriptor. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:139983:This function is used to close the descriptor. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:140104:  boost::asio::posix::stream_descriptor descriptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:140106:  boost::asio::posix::stream_descriptor::bytes_readable command;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:140156:  boost::asio::posix::stream_descriptor descriptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:140158:  boost::asio::posix::stream_descriptor::bytes_readable command;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:140699:`true` if the underlying descriptor is in non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).
/root/boost_1_87_0/libs/asio/doc/reference.qbk:140734:[[mode][If `true`, the underlying descriptor is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:140744:[[boost::system::system_error][Thrown on failure. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense. ]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:140777:[[mode][If `true`, the underlying descriptor is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:140779:[[ec][Set to indicate what error occurred, if any. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense. ]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:140829:`true` if the descriptor's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:140834:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:140862:[[mode][If `true`, the descriptor's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:140879:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:140908:[[mode][If `true`, the descriptor's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:140917:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:141074:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:141088:  descriptor.read_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:141160:All outstanding asynchronous read or write operations will finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:141212:  boost::asio::posix::stream_descriptor descriptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:141214:  descriptor.wait(boost::asio::posix::stream_descriptor::wait_read);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:141259:  boost::asio::posix::stream_descriptor descriptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:141262:  descriptor.wait(boost::asio::posix::stream_descriptor::wait_read, ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:141372:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:141386:  descriptor.write_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:141932:  boost::asio::posix::stream_descriptor descriptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:141934:  boost::asio::descriptor_base::bytes_readable command(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:142546:The name `prefer` denotes a customisation point object. The expression `boost::asio::prefer(E, P0, Pn...)` for some subexpressions `E` and `P0`, and where `Pn...` represents `N` subexpressions (where `N` is 0 or more, and with types `T = decay_t<decltype(E)>` and `Prop0 = decay_t<decltype(P0)>`) is expression-equivalent to:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:142549:* If `is_applicable_property_v<T, Prop0> && Prop0::is_preferable` is not a well-formed constant expression with value `true`, `boost::asio::prefer(E, P0, Pn...)` is ill-formed.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:142570:* Otherwise, `boost::asio::prefer(boost::asio::prefer(E, P0), Pn...)` if `N > 0` and the expression `boost::asio::prefer(boost::asio::prefer(E, P0), Pn...)` is a valid expression.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:142573:* Otherwise, `boost::asio::prefer(E, P0, Pn...)` is ill-formed.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:142614:Class template `prefer_result` is a trait that determines the result type of the expression
boost::asio::prefer(std::declval<T>(), std::declval<Properties>()...)`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:142776:The name `query` denotes a customization point object. The expression `boost::asio::query(E, P)` for some subexpressions `E` and `P` (with types `T = decay_t<decltype(E)>` and `Prop = decay_t<decltype(P)>`) is expression-equivalent to:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:142779:* If `is_applicable_property_v<T, Prop>` is not a well-formed constant expression with value `true`, `boost::asio::query(E,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:142792:* Otherwise, `boost::asio::query(E, P)` is ill-formed.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:142833:Class template `query_result` is a trait that determines the result type of the expression `boost::asio::query(std::declval<T>(), std::declval<Property>())`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:143345:  boost::asio::read(s, boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:143355:  boost::asio::read(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:143357:     boost::asio::transfer_all());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:143419:  boost::asio::read(s, boost::asio::buffer(data, size), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:143429:  boost::asio::read(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:143431:     boost::asio::transfer_all(), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:143515:  boost::asio::read(s, boost::asio::buffer(data, size),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:143516:     boost::asio::transfer_at_least(32));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:143653:  boost::asio::read(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:143655:     boost::asio::transfer_all());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:143718:  boost::asio::read(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:143720:     boost::asio::transfer_all(), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:143931:  boost::asio::read(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:143933:     boost::asio::transfer_all());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:143994:  boost::asio::read(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:143996:     boost::asio::transfer_all(), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:144204:  boost::asio::read(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:144206:     boost::asio::transfer_all());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:144268:  boost::asio::read(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:144270:     boost::asio::transfer_all(), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:144587:  boost::asio::read_at(d, 42, boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:144597:  boost::asio::read_at(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:144599:     boost::asio::transfer_all());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:144663:  boost::asio::read_at(d, 42,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:144664:     boost::asio::buffer(data, size), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:144674:  boost::asio::read_at(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:144676:     boost::asio::transfer_all(), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:144762:  boost::asio::read_at(d, 42, boost::asio::buffer(data, size),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:144763:     boost::asio::transfer_at_least(32));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:144900:  boost::asio::read_at(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:144902:     boost::asio::transfer_all());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:144963:  boost::asio::read_at(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:144965:     boost::asio::transfer_all(), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:145235:      boost::asio::basic_streambuf< Allocator > & b,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:145244:      boost::asio::basic_streambuf< Allocator > & b,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:145254:      boost::asio::basic_streambuf< Allocator > & b,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:145263:      boost::asio::basic_streambuf< Allocator > & b,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:145276:      boost::asio::basic_streambuf< Allocator > & b,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:145286:      boost::asio::basic_streambuf< Allocator > & b,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:145299:      boost::asio::basic_streambuf< Allocator > & b,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:145310:      boost::asio::basic_streambuf< Allocator > & b,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:145486:  std::size_t n = boost::asio::read_until(s,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:145487:      boost::asio::dynamic_buffer(data), '\n');
/root/boost_1_87_0/libs/asio/doc/reference.qbk:145634:  std::size_t n = boost::asio::read_until(s,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:145635:      boost::asio::dynamic_buffer(data), "\r\n");
/root/boost_1_87_0/libs/asio/doc/reference.qbk:145793:  std::size_t n = boost::asio::read_until(s,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:145794:      boost::asio::dynamic_buffer(data), boost::regex("\r\n"));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:145966:  typedef boost::asio::buffers_iterator<
/root/boost_1_87_0/libs/asio/doc/reference.qbk:145967:      boost::asio::const_buffer> iterator;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:145980:  boost::asio::read_until(s, data, match_whitespace);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146013:  boost::asio::read_until(s, data, match_char('a'));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146110:      boost::asio::basic_streambuf< Allocator > & b,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146163:  boost::asio::streambuf b;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146164:  boost::asio::read_until(s, b, '\n');
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146205:      boost::asio::basic_streambuf< Allocator > & b,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146264:      boost::asio::basic_streambuf< Allocator > & b,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146317:  boost::asio::streambuf b;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146318:  boost::asio::read_until(s, b, "\r\n");
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146359:      boost::asio::basic_streambuf< Allocator > & b,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146419:      boost::asio::basic_streambuf< Allocator > & b,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146472:  boost::asio::streambuf b;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146473:  boost::asio::read_until(s, b, boost::regex("\r\n"));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146515:      boost::asio::basic_streambuf< Allocator > & b,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146575:      boost::asio::basic_streambuf< Allocator > & b,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146642:  typedef boost::asio::buffers_iterator<
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146643:      boost::asio::streambuf::const_buffers_type> iterator;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146655:  boost::asio::streambuf b;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146656:  boost::asio::read_until(s, b, match_whitespace);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146688:  boost::asio::streambuf b;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146689:  boost::asio::read_until(s, b, match_char('a'));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146711:      boost::asio::basic_streambuf< Allocator > & b,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146839:  std::size_t n = boost::asio::read_until(s,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146840:      boost::asio::dynamic_buffer(data), '\n');
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146985:  std::size_t n = boost::asio::read_until(s,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:146986:      boost::asio::dynamic_buffer(data), "\r\n");
/root/boost_1_87_0/libs/asio/doc/reference.qbk:147142:  std::size_t n = boost::asio::read_until(s,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:147143:      boost::asio::dynamic_buffer(data), boost::regex("\r\n"));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:147313:  typedef boost::asio::buffers_iterator<
/root/boost_1_87_0/libs/asio/doc/reference.qbk:147314:      boost::asio::const_buffer> iterator;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:147327:  boost::asio::read_until(s, data, match_whitespace);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:147360:  boost::asio::read_until(s, data, match_char('a'));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:148655:The name `require` denotes a customisation point object. The expression `boost::asio::require(E, P0, Pn...)` for some subexpressions `E` and `P0`, and where `Pn...` represents `N` subexpressions (where `N` is 0 or more, and with types `T = decay_t<decltype(E)>` and `Prop0 = decay_t<decltype(P0)>`) is expression-equivalent to:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:148658:* If `is_applicable_property_v<T, Prop0> && Prop0::is_requirable` is not a well-formed constant expression with value `true`, `boost::asio::require(E, P0, Pn...)` is ill-formed.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:148670:* Otherwise, `boost::asio::require(boost::asio::require(E, P0), Pn...)` if `N > 0` and the expression `boost::asio::require(boost::asio::require(E, P0), Pn...)` is a valid expression.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:148673:* Otherwise, `boost::asio::require(E, P0, Pn...)` is ill-formed.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:148698:The name `require_concept` denotes a customization point object. The expression `boost::asio::require_concept(E, P)` for some subexpressions `E` and `P` (with types `T = decay_t<decltype(E)>` and `Prop = decay_t<decltype(P)>`) is expression-equivalent to:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:148701:* If `is_applicable_property_v<T, Prop> && Prop::is_requirable_concept` is not a well-formed constant expression with value `true`, `boost::asio::require_concept(E, P)` is ill-formed.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:148713:* Otherwise, `boost::asio::require_concept(E, P)` is ill-formed.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:148754:Class template `require_concept_result` is a trait that determines the result type of the expression `boost::asio::require_concept(std::declval<T>(), std::declval<Property>())`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:148813:Class template `require_result` is a trait that determines the result type of the expression `boost::asio::require(std::declval<T>(), std::declval<Properties>()...)`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:149944:  boost::asio::signal_set signals(my_context, SIGINT, SIGTERM);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150318:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150320:  boost::asio::socket_base::broadcast option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150329:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150331:  boost::asio::socket_base::broadcast option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150369:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150371:  boost::asio::socket_base::bytes_readable command(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150409:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150411:  boost::asio::socket_base::debug option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150420:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150422:  boost::asio::socket_base::debug option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150460:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150462:  boost::asio::socket_base::do_not_route option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150471:  boost::asio::ip::udp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150473:  boost::asio::socket_base::do_not_route option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150504:Implements a custom socket option that determines whether or not an accept operation is permitted to fail with `boost::asio::error::connection_aborted`. By default the option is false.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150511:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150513:  boost::asio::socket_base::enable_connection_aborted option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150522:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150524:  boost::asio::socket_base::enable_connection_aborted option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150562:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150564:  boost::asio::socket_base::keep_alive option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150573:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150575:  boost::asio::socket_base::keep_alive option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150613:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150615:  boost::asio::socket_base::linger option(true, 30);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150624:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150626:  boost::asio::socket_base::linger option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150756:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150758:  boost::asio::socket_base::out_of_band_inline option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150767:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150769:  boost::asio::socket_base::out_of_band_inline option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150807:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150809:  boost::asio::socket_base::receive_buffer_size option(8192);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150818:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150820:  boost::asio::socket_base::receive_buffer_size option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150858:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150860:  boost::asio::socket_base::receive_low_watermark option(1024);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150869:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150871:  boost::asio::socket_base::receive_low_watermark option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150909:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150911:  boost::asio::socket_base::reuse_address option(true);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150920:  boost::asio::ip::tcp::acceptor acceptor(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150922:  boost::asio::socket_base::reuse_address option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150960:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150962:  boost::asio::socket_base::send_buffer_size option(8192);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150971:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:150973:  boost::asio::socket_base::send_buffer_size option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:151011:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:151013:  boost::asio::socket_base::send_low_watermark option(1024);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:151022:  boost::asio::ip::tcp::socket socket(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:151024:  boost::asio::socket_base::send_low_watermark option;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:151235:  boost::asio::spawn(my_strand, do_echo, boost::asio::detached);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:151239:  void do_echo(boost::asio::yield_context yield)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:151248:            boost::asio::buffer(data), yield);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:151250:        boost::asio::async_write(my_socket,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:151251:            boost::asio::buffer(data, length), yield);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:155096:  static const boost::system::error_category & stream_category = boost::asio::ssl::error::get_stream_category();
/root/boost_1_87_0/libs/asio/doc/reference.qbk:155196:  using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:155197:  namespace ssl = boost::asio::ssl;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:155205:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:155209:  boost::asio::connect(sock.lowest_layer(), resolver.resolve(query));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:155462:  boost::asio::io_context my_context;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:155463:  boost::asio::ssl::context ctx(boost::asio::ssl::context::sslv23);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:155464:  boost::asio::ssl::stream<boost::asio::ip::tcp::socket> sock(my_context, ctx);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:156182:  boost::asio::ssl::stream<boost::asio::ip::tcp::socket> sock(io_ctx, ctx);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:157598:  boost::asio::thread_pool pool(4);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:157601:  boost::asio::post(pool, my_task);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:157604:  boost::asio::post(pool,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:157777:  boost::asio::steady_timer timer(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:157802:  boost::asio::steady_timer timer(my_context,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:157835:    if (e != boost::asio::error::operation_aborted)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:157845:* The `boost::asio::basic_waitable_timer::expires_after()` function cancels any pending asynchronous waits, and returns the number of asynchronous waits that were cancelled. If it returns 0 then you were too late and the wait handler has already been executed, or will soon be executed. If it returns 1 then the wait handler was successfully cancelled.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:157848:* If a wait handler is cancelled, the boost::system::error\_code passed to it contains the value `boost::asio::error::operation_aborted`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:158421:  boost::asio::strand<my_executor_type> ex1 = ...;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:158422:  auto ex2 = boost::asio::prefer(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:158423:      boost::asio::execution::blocking.never);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:158449:  boost::asio::strand<my_executor_type> ex = ...;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:158450:  if (boost::asio::query(ex, boost::asio::execution::blocking)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:158451:        == boost::asio::execution::blocking.never)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:158478:  boost::asio::strand<my_executor_type> ex1 = ...;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:158479:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:158480:      boost::asio::execution::blocking.never);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:159049:  boost::asio::streambuf b;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:159063:  boost::asio::streambuf b;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:159066:  boost::asio::streambuf::mutable_buffers_type bufs = b.prepare(512);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:159804:  boost::asio::steady_timer timer(my_context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:159829:  boost::asio::steady_timer timer(my_context,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:159862:    if (e != boost::asio::error::operation_aborted)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:159872:* The `boost::asio::basic_waitable_timer::expires_after()` function cancels any pending asynchronous waits, and returns the number of asynchronous waits that were cancelled. If it returns 0 then you were too late and the wait handler has already been executed, or will soon be executed. If it returns 1 then the wait handler was successfully cancelled.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:159875:* If a wait handler is cancelled, the boost::system::error\_code passed to it contains the value `boost::asio::error::operation_aborted`.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:159913:  boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/libs/asio/doc/reference.qbk:159915:    boost::asio::cancellation_state cs
/root/boost_1_87_0/libs/asio/doc/reference.qbk:159916:      = co_await boost::asio::this_coro::cancellation_state;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:159920:    if (cs.cancelled() != boost::asio::cancellation_type::none)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:160092:  boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/libs/asio/doc/reference.qbk:160094:    co_await boost::asio::this_coro::reset_cancellation_state();
/root/boost_1_87_0/libs/asio/doc/reference.qbk:160135:  boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/libs/asio/doc/reference.qbk:160137:    co_await boost::asio::this_coro::reset_cancellation_state(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:160138:        boost::asio::enable_partial_cancellation());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:160180:  boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/libs/asio/doc/reference.qbk:160182:    co_await boost::asio::this_coro::reset_cancellation_state(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:160183:        boost::asio::enable_partial_cancellation(),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:160184:        boost::asio::disable_cancellation());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:160242:  boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/libs/asio/doc/reference.qbk:160244:    if (co_await boost::asio::this_coro::throw_if_cancelled)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:160275:  boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/libs/asio/doc/reference.qbk:160277:    co_await boost::asio::this_coro::throw_if_cancelled(false);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:160429:  boost::asio::thread_pool pool(4);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:160432:  boost::asio::post(pool, my_task);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:160435:  boost::asio::post(pool,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161492:  boost::asio::thread_pool& pool = boost::asio::query(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161493:      ex, boost::asio::execution::context);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161518:  if (boost::asio::query(ex, boost::asio::execution::blocking)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161519:        == boost::asio::execution::blocking.always)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161545:  if (boost::asio::query(ex, boost::asio::execution::relationship)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161546:        == boost::asio::execution::relationship.continuation)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161574:  auto alloc = boost::asio::query(ex,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161575:      boost::asio::execution::allocator);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161600:  auto alloc = boost::asio::query(ex,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161601:      boost::asio::execution::allocator);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161626:  std::size_t occupancy = boost::asio::query(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161627:      ex, boost::asio::execution::occupancy);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161672:  if (boost::asio::query(ex, boost::asio::execution::mapping)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161673:        == boost::asio::execution::mapping.thread)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161699:  if (boost::asio::query(ex, boost::asio::execution::outstanding_work)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161700:        == boost::asio::execution::outstanding_work.tracked)
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161804:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161805:      boost::asio::execution::blocking.possibly);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161830:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161831:      boost::asio::execution::blocking.always);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161856:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161857:      boost::asio::execution::blocking.never);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161882:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161883:      boost::asio::execution::relationship.fork);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161908:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161909:      boost::asio::execution::relationship.continuation);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161934:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161935:      boost::asio::execution::outstanding_work.tracked);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161960:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161961:      boost::asio::execution::outstanding_work.untracked);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161988:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:161989:      boost::asio::execution::allocator(my_allocator));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:162014:  auto ex2 = boost::asio::require(ex1,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:162015:      boost::asio::execution::allocator);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:162347:  std::size_t n = boost::asio::read(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:162348:      sock, boost::asio::buffer(buf),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:162349:      boost::asio::transfer_all(), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:162395:  std::size_t n = boost::asio::read(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:162396:      sock, boost::asio::buffer(buf),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:162397:      boost::asio::transfer_at_least(64), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:162443:  std::size_t n = boost::asio::read(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:162444:      sock, boost::asio::buffer(buf),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:162445:      boost::asio::transfer_exactly(64), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:162900:The [link boost_asio.reference.use_future_t `use_future_t`] class is a completion token type that is used to indicate that an asynchronous operation should return a std::future object. A [link boost_asio.reference.use_future_t `use_future_t`] object may be passed as a completion token to an asynchronous operation, typically using the special value `boost::asio::use_future`. For example:
/root/boost_1_87_0/libs/asio/doc/reference.qbk:162905:   = my_socket.async_read_some(my_buffer, boost::asio::use_future);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:163742:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:163771:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:163814:This function is used to close the handle. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:163843:This function is used to close the handle. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:164975:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:165004:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:165047:This function is used to close the handle. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:165076:This function is used to close the handle. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:165504:This function causes all outstanding asynchronous operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native handle is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:165519:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:165538:This function causes all outstanding asynchronous operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native handle is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:165553:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:166024:  handle.async_read_some_at(42, boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:166108:  handle.async_write_some_at(42, boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:166433:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:166465:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:166511:This function is used to close the handle. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:166543:This function is used to close the handle. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:167026:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:167040:  handle.read_some_at(42, boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:167126:This function causes all outstanding asynchronous operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native handle is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:167141:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:167163:This function causes all outstanding asynchronous operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native handle is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:167178:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:167248:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:167262:  handle.write_some_at(42, boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:167774:  handle.async_read_some(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:167855:  handle.async_write_some(boost::asio::buffer(data, size), handler);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:168180:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:168212:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:168258:This function is used to close the handle. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:168290:This function is used to close the handle. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:168768:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:168782:  handle.read_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:168865:This function causes all outstanding asynchronous operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native handle is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:168880:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:168902:This function causes all outstanding asynchronous operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native handle is then transferred to the caller.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:168917:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms.
/root/boost_1_87_0/libs/asio/doc/reference.qbk:168982:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:168996:  handle.write_some(boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:170576:  boost::asio::write(s, boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:170586:  boost::asio::write(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:170588:     boost::asio::transfer_all());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:170650:  boost::asio::write(s, boost::asio::buffer(data, size), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:170660:  boost::asio::write(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:170662:     boost::asio::transfer_all(), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:170746:  boost::asio::write(s, boost::asio::buffer(data, size),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:170747:     boost::asio::transfer_at_least(32));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:170884:  boost::asio::write(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:170886:     boost::asio::transfer_all());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:170949:  boost::asio::write(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:170951:     boost::asio::transfer_all(), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:171162:  boost::asio::write(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:171164:     boost::asio::transfer_all());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:171225:  boost::asio::write(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:171227:     boost::asio::transfer_all(), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:171435:  boost::asio::write(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:171437:     boost::asio::transfer_all());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:171499:  boost::asio::write(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:171501:     boost::asio::transfer_all(), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:171824:  boost::asio::write_at(d, 42, boost::asio::buffer(data, size));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:171834:  boost::asio::write_at(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:171836:     boost::asio::transfer_all());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:171900:  boost::asio::write_at(d, 42,
/root/boost_1_87_0/libs/asio/doc/reference.qbk:171901:     boost::asio::buffer(data, size), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:171911:  boost::asio::write_at(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:171913:     boost::asio::transfer_all(), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:171999:  boost::asio::write_at(d, 42, boost::asio::buffer(data, size),
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172000:     boost::asio::transfer_at_least(32));
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172140:  boost::asio::write_at(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172142:     boost::asio::transfer_all());
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172206:  boost::asio::write_at(
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172208:     boost::asio::transfer_all(), ec);
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172473:[section:is_error_code_enum_lt__addrinfo_errors__gt_ boost::system::is_error_code_enum< boost::asio::error::addrinfo_errors >]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172475:[indexterm1 boost_asio.indexterm.is_error_code_enum_lt__addrinfo_errors__gt_..boost::system::is_error_code_enum< boost::asio::error::addrinfo_errors >]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172480:  struct boost::system::is_error_code_enum< boost::asio::error::addrinfo_errors >
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172501:[section:value boost::system::is_error_code_enum< boost::asio::error::addrinfo_errors >::value]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172503:[indexterm2 boost_asio.indexterm.is_error_code_enum_lt__addrinfo_errors__gt_.value..value..boost::system::is_error_code_enum< boost::asio::error::addrinfo_errors >]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172515:[section:is_error_code_enum_lt__basic_errors__gt_ boost::system::is_error_code_enum< boost::asio::error::basic_errors >]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172517:[indexterm1 boost_asio.indexterm.is_error_code_enum_lt__basic_errors__gt_..boost::system::is_error_code_enum< boost::asio::error::basic_errors >]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172522:  struct boost::system::is_error_code_enum< boost::asio::error::basic_errors >
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172543:[section:value boost::system::is_error_code_enum< boost::asio::error::basic_errors >::value]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172545:[indexterm2 boost_asio.indexterm.is_error_code_enum_lt__basic_errors__gt_.value..value..boost::system::is_error_code_enum< boost::asio::error::basic_errors >]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172557:[section:is_error_code_enum_lt__misc_errors__gt_ boost::system::is_error_code_enum< boost::asio::error::misc_errors >]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172559:[indexterm1 boost_asio.indexterm.is_error_code_enum_lt__misc_errors__gt_..boost::system::is_error_code_enum< boost::asio::error::misc_errors >]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172564:  struct boost::system::is_error_code_enum< boost::asio::error::misc_errors >
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172585:[section:value boost::system::is_error_code_enum< boost::asio::error::misc_errors >::value]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172587:[indexterm2 boost_asio.indexterm.is_error_code_enum_lt__misc_errors__gt_.value..value..boost::system::is_error_code_enum< boost::asio::error::misc_errors >]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172599:[section:is_error_code_enum_lt__netdb_errors__gt_ boost::system::is_error_code_enum< boost::asio::error::netdb_errors >]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172601:[indexterm1 boost_asio.indexterm.is_error_code_enum_lt__netdb_errors__gt_..boost::system::is_error_code_enum< boost::asio::error::netdb_errors >]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172606:  struct boost::system::is_error_code_enum< boost::asio::error::netdb_errors >
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172627:[section:value boost::system::is_error_code_enum< boost::asio::error::netdb_errors >::value]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172629:[indexterm2 boost_asio.indexterm.is_error_code_enum_lt__netdb_errors__gt_.value..value..boost::system::is_error_code_enum< boost::asio::error::netdb_errors >]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172641:[section:is_error_code_enum_lt__ssl_errors__gt_ boost::system::is_error_code_enum< boost::asio::error::ssl_errors >]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172643:[indexterm1 boost_asio.indexterm.is_error_code_enum_lt__ssl_errors__gt_..boost::system::is_error_code_enum< boost::asio::error::ssl_errors >]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172648:  struct boost::system::is_error_code_enum< boost::asio::error::ssl_errors >
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172669:[section:value boost::system::is_error_code_enum< boost::asio::error::ssl_errors >::value]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172671:[indexterm2 boost_asio.indexterm.is_error_code_enum_lt__ssl_errors__gt_.value..value..boost::system::is_error_code_enum< boost::asio::error::ssl_errors >]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172683:[section:is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_ boost::system::is_error_code_enum< boost::asio::experimental::error::channel_errors >]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172685:[indexterm1 boost_asio.indexterm.is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_..boost::system::is_error_code_enum< boost::asio::experimental::error::channel_errors >]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172690:  struct boost::system::is_error_code_enum< boost::asio::experimental::error::channel_errors >
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172711:[section:value boost::system::is_error_code_enum< boost::asio::experimental::error::channel_errors >::value]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172713:[indexterm2 boost_asio.indexterm.is_error_code_enum_lt__boost__asio__experimental__error__channel_errors__gt_.value..value..boost::system::is_error_code_enum< boost::asio::experimental::error::channel_errors >]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172725:[section:is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_ boost::system::is_error_code_enum< boost::asio::ssl::error::stream_errors >]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172727:[indexterm1 boost_asio.indexterm.is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_..boost::system::is_error_code_enum< boost::asio::ssl::error::stream_errors >]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172732:  struct boost::system::is_error_code_enum< boost::asio::ssl::error::stream_errors >
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172753:[section:value boost::system::is_error_code_enum< boost::asio::ssl::error::stream_errors >::value]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172755:[indexterm2 boost_asio.indexterm.is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.value..value..boost::system::is_error_code_enum< boost::asio::ssl::error::stream_errors >]
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172774:  struct hash< boost::asio::ip::address >
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172800:      const boost::asio::ip::address & addr) const;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172817:  struct hash< boost::asio::ip::address_v4 >
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172843:      const boost::asio::ip::address_v4 & addr) const;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172860:  struct hash< boost::asio::ip::address_v6 >
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172886:      const boost::asio::ip::address_v6 & addr) const;
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172904:  struct hash< boost::asio::ip::basic_endpoint< InternetProtocol > >
/root/boost_1_87_0/libs/asio/doc/reference.qbk:172930:      const boost::asio::ip::basic_endpoint< InternetProtocol > & ep) const;
/root/boost_1_87_0/libs/asio/doc/reference.xsl:256:    <xsl:when test="contains($name, 'boost::asio::error::')">
/root/boost_1_87_0/libs/asio/doc/reference.xsl:259:         select="concat(substring-before($name, 'boost::asio::error::'), substring-after($name, 'boost::asio::error::'))"/>
/root/boost_1_87_0/libs/asio/doc/requirements/AcceptToken.qbk:68:        this, boost::asio::placeholders::error));
/root/boost_1_87_0/libs/asio/doc/requirements/AcceptToken.qbk:72:  std::future<void> f = acceptor.async_accept(..., boost::asio::use_future);
/root/boost_1_87_0/libs/asio/doc/requirements/AcceptToken.qbk:85:  boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/libs/asio/doc/requirements/AcceptToken.qbk:90:      co_await acceptor.async_accept(..., boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/requirements/BufferedHandshakeToken.qbk:74:        this, boost::asio::placeholders::error,
/root/boost_1_87_0/libs/asio/doc/requirements/BufferedHandshakeToken.qbk:75:        boost::asio::placeholders::bytes_transferred));
/root/boost_1_87_0/libs/asio/doc/requirements/BufferedHandshakeToken.qbk:80:    ssl_stream.async_handshake(..., boost::asio::use_future);
/root/boost_1_87_0/libs/asio/doc/requirements/BufferedHandshakeToken.qbk:95:  boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/libs/asio/doc/requirements/BufferedHandshakeToken.qbk:102:            ..., boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/requirements/CancellationHandler.qbk:12:`boost::asio::cancellation_type`.
/root/boost_1_87_0/libs/asio/doc/requirements/CancellationHandler.qbk:19:      boost::asio::cancellation_type type)
/root/boost_1_87_0/libs/asio/doc/requirements/CancellationHandler.qbk:32:        boost::asio::cancellation_type type)
/root/boost_1_87_0/libs/asio/doc/requirements/CancellationHandler.qbk:44:      [](boost::asio::cancellation_type type)
/root/boost_1_87_0/libs/asio/doc/requirements/ConnectToken.qbk:68:        this, boost::asio::placeholders::error));
/root/boost_1_87_0/libs/asio/doc/requirements/ConnectToken.qbk:72:  std::future<void> f = socket.async_connect(..., boost::asio::use_future);
/root/boost_1_87_0/libs/asio/doc/requirements/ConnectToken.qbk:85:  boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/libs/asio/doc/requirements/ConnectToken.qbk:90:      co_await socket.async_connect(..., boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/requirements/ConstBufferSequence.qbk:24:    [`boost::asio::buffer_sequence_begin(x)`[br]
/root/boost_1_87_0/libs/asio/doc/requirements/ConstBufferSequence.qbk:25:     `boost::asio::buffer_sequence_end(x)`]
/root/boost_1_87_0/libs/asio/doc/requirements/ConstBufferSequence.qbk:39:         boost::asio::buffer_sequence_begin(x),
/root/boost_1_87_0/libs/asio/doc/requirements/ConstBufferSequence.qbk:40:         boost::asio::buffer_sequence_end(x),
/root/boost_1_87_0/libs/asio/doc/requirements/ConstBufferSequence.qbk:41:         boost::asio::buffer_sequence_begin(u),
/root/boost_1_87_0/libs/asio/doc/requirements/ConstBufferSequence.qbk:42:         boost::asio::buffer_sequence_end(u),
/root/boost_1_87_0/libs/asio/doc/requirements/Disposition.qbk:18:    [`boost::asio::disposition_traits<X>::not_an_error(x)`]
/root/boost_1_87_0/libs/asio/doc/requirements/Disposition.qbk:23:    [`boost::asio::disposition_traits<X>::throw_exception(x)`]
/root/boost_1_87_0/libs/asio/doc/requirements/Disposition.qbk:25:    [pre: `boost::asio::disposition_traits<X>::not_an_error(x)` is `false.`\n
/root/boost_1_87_0/libs/asio/doc/requirements/Disposition.qbk:29:    [`boost::asio::disposition_traits<X>::to_exception_ptr(x)`]
/root/boost_1_87_0/libs/asio/doc/requirements/Executor.qbk:46:`x1 == x2` shall return `true` only if `boost::asio::query(x1,p) == boost::asio::query(x2,p)`
/root/boost_1_87_0/libs/asio/doc/requirements/Executor.qbk:47:for every property `p` where both `boost::asio::query(x1,p)` and `boost::asio::query(x2,p)`
/root/boost_1_87_0/libs/asio/doc/requirements/Executor.qbk:52:not exposed by a named property type that can be observed via `boost::asio::query`; in
/root/boost_1_87_0/libs/asio/doc/requirements/HandshakeToken.qbk:68:        this, boost::asio::placeholders::error));
/root/boost_1_87_0/libs/asio/doc/requirements/HandshakeToken.qbk:72:  std::future<void> f = ssl_stream.async_handshake(..., boost::asio::use_future);
/root/boost_1_87_0/libs/asio/doc/requirements/HandshakeToken.qbk:85:  boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/libs/asio/doc/requirements/HandshakeToken.qbk:90:      co_await ssl_stream.async_handshake(..., boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/requirements/IteratorConnectToken.qbk:20:      boost::asio::ip::tcp::resolver::iterator iterator)
/root/boost_1_87_0/libs/asio/doc/requirements/IteratorConnectToken.qbk:42:  boost::asio::async_connect(...,
/root/boost_1_87_0/libs/asio/doc/requirements/IteratorConnectToken.qbk:44:        boost::asio::ip::tcp::resolver::iterator iterator)
/root/boost_1_87_0/libs/asio/doc/requirements/IteratorConnectToken.qbk:54:      boost::asio::ip::tcp::resolver::iterator iterator)
/root/boost_1_87_0/libs/asio/doc/requirements/IteratorConnectToken.qbk:59:  boost::asio::async_connect(...,
/root/boost_1_87_0/libs/asio/doc/requirements/IteratorConnectToken.qbk:69:      boost::asio::ip::tcp::resolver::iterator iterator)
/root/boost_1_87_0/libs/asio/doc/requirements/IteratorConnectToken.qbk:74:  boost::asio::async_connect(...,
/root/boost_1_87_0/libs/asio/doc/requirements/IteratorConnectToken.qbk:76:        this, boost::asio::placeholders::error,
/root/boost_1_87_0/libs/asio/doc/requirements/IteratorConnectToken.qbk:77:        boost::asio::placeholders::iterator));
/root/boost_1_87_0/libs/asio/doc/requirements/IteratorConnectToken.qbk:81:  std::future<boost::asio::ip::tcp::resolver::iterator> f =
/root/boost_1_87_0/libs/asio/doc/requirements/IteratorConnectToken.qbk:82:    boost::asio::async_connect(..., boost::asio::use_future);
/root/boost_1_87_0/libs/asio/doc/requirements/IteratorConnectToken.qbk:86:    boost::asio::ip::tcp::resolver::iterator i = f.get();
/root/boost_1_87_0/libs/asio/doc/requirements/IteratorConnectToken.qbk:97:  boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/libs/asio/doc/requirements/IteratorConnectToken.qbk:102:      boost::asio::ip::tcp::resolver::iterator i =
/root/boost_1_87_0/libs/asio/doc/requirements/IteratorConnectToken.qbk:103:        co_await boost::asio::async_connect(
/root/boost_1_87_0/libs/asio/doc/requirements/IteratorConnectToken.qbk:104:            ..., boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/requirements/MoveAcceptToken.qbk:21:      const boost::system::error_code& ec, boost::asio::ip::tcp::socket s)
/root/boost_1_87_0/libs/asio/doc/requirements/MoveAcceptToken.qbk:32:        const boost::system::error_code& ec, boost::asio::ip::tcp::socket s)
/root/boost_1_87_0/libs/asio/doc/requirements/MoveAcceptToken.qbk:42:      [](const boost::system::error_code& ec, boost::asio::ip::tcp::socket s)
/root/boost_1_87_0/libs/asio/doc/requirements/MoveAcceptToken.qbk:51:      const boost::system::error_code& ec, boost::asio::ip::tcp::socket socket)
/root/boost_1_87_0/libs/asio/doc/requirements/MoveAcceptToken.qbk:56:  boost::asio::async_accept(...,
/root/boost_1_87_0/libs/asio/doc/requirements/MoveAcceptToken.qbk:63:  std::future<boost::asio::ip::tcp::socket> f =
/root/boost_1_87_0/libs/asio/doc/requirements/MoveAcceptToken.qbk:64:    acceptor.async_accept(..., boost::asio::use_future);
/root/boost_1_87_0/libs/asio/doc/requirements/MoveAcceptToken.qbk:68:    boost::asio::ip::tcp::socket s = f.get();
/root/boost_1_87_0/libs/asio/doc/requirements/MoveAcceptToken.qbk:78:  boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/libs/asio/doc/requirements/MoveAcceptToken.qbk:83:      boost::asio::ip::tcp::socket s =
/root/boost_1_87_0/libs/asio/doc/requirements/MoveAcceptToken.qbk:85:            ..., boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/requirements/MutableBufferSequence.qbk:25:    [`boost::asio::buffer_sequence_begin(x)`[br]
/root/boost_1_87_0/libs/asio/doc/requirements/MutableBufferSequence.qbk:26:     `boost::asio::buffer_sequence_end(x)`]
/root/boost_1_87_0/libs/asio/doc/requirements/MutableBufferSequence.qbk:40:         boost::asio::buffer_sequence_begin(x),
/root/boost_1_87_0/libs/asio/doc/requirements/MutableBufferSequence.qbk:41:         boost::asio::buffer_sequence_end(x),
/root/boost_1_87_0/libs/asio/doc/requirements/MutableBufferSequence.qbk:42:         boost::asio::buffer_sequence_begin(u),
/root/boost_1_87_0/libs/asio/doc/requirements/MutableBufferSequence.qbk:43:         boost::asio::buffer_sequence_end(u),
/root/boost_1_87_0/libs/asio/doc/requirements/NullaryToken.qbk:36:  boost::asio::post(...,
/root/boost_1_87_0/libs/asio/doc/requirements/NullaryToken.qbk:50:  boost::asio::post(...,
/root/boost_1_87_0/libs/asio/doc/requirements/NullaryToken.qbk:61:  boost::asio::post(...,
/root/boost_1_87_0/libs/asio/doc/requirements/NullaryToken.qbk:66:  std::future<void> f = boost::asio::post(..., boost::asio::use_future);
/root/boost_1_87_0/libs/asio/doc/requirements/NullaryToken.qbk:72:  boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/libs/asio/doc/requirements/NullaryToken.qbk:75:    co_await boost::asio::post(..., boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/requirements/RangeConnectToken.qbk:21:      const boost::asio::ip::tcp::endpoint& endpoint)
/root/boost_1_87_0/libs/asio/doc/requirements/RangeConnectToken.qbk:34:        const boost::asio::ip::tcp::endpoint& endpoint)
/root/boost_1_87_0/libs/asio/doc/requirements/RangeConnectToken.qbk:43:  boost::asio::async_connect(...,
/root/boost_1_87_0/libs/asio/doc/requirements/RangeConnectToken.qbk:45:        const boost::asio::ip::tcp::endpoint& endpoint)
/root/boost_1_87_0/libs/asio/doc/requirements/RangeConnectToken.qbk:55:      const boost::asio::ip::tcp::endpoint& endpoint)
/root/boost_1_87_0/libs/asio/doc/requirements/RangeConnectToken.qbk:60:  boost::asio::async_connect(...,
/root/boost_1_87_0/libs/asio/doc/requirements/RangeConnectToken.qbk:70:      const boost::asio::ip::tcp::endpoint& endpoint)
/root/boost_1_87_0/libs/asio/doc/requirements/RangeConnectToken.qbk:75:  boost::asio::async_connect(...,
/root/boost_1_87_0/libs/asio/doc/requirements/RangeConnectToken.qbk:77:        this, boost::asio::placeholders::error,
/root/boost_1_87_0/libs/asio/doc/requirements/RangeConnectToken.qbk:78:        boost::asio::placeholders::endpoint));
/root/boost_1_87_0/libs/asio/doc/requirements/RangeConnectToken.qbk:82:  std::future<boost::asio::ip::tcp::endpoint> f =
/root/boost_1_87_0/libs/asio/doc/requirements/RangeConnectToken.qbk:83:    boost::asio::async_connect(..., boost::asio::use_future);
/root/boost_1_87_0/libs/asio/doc/requirements/RangeConnectToken.qbk:87:    boost::asio::ip::tcp::endpoint e = f.get();
/root/boost_1_87_0/libs/asio/doc/requirements/RangeConnectToken.qbk:98:  boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/libs/asio/doc/requirements/RangeConnectToken.qbk:103:      boost::asio::ip::tcp::endpoint e =
/root/boost_1_87_0/libs/asio/doc/requirements/RangeConnectToken.qbk:104:        co_await boost::asio::async_connect(
/root/boost_1_87_0/libs/asio/doc/requirements/RangeConnectToken.qbk:105:            ..., boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/requirements/ReadToken.qbk:74:        this, boost::asio::placeholders::error,
/root/boost_1_87_0/libs/asio/doc/requirements/ReadToken.qbk:75:        boost::asio::placeholders::bytes_transferred));
/root/boost_1_87_0/libs/asio/doc/requirements/ReadToken.qbk:80:    socket.async_read_some(..., boost::asio::use_future);
/root/boost_1_87_0/libs/asio/doc/requirements/ReadToken.qbk:94:  boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/libs/asio/doc/requirements/ReadToken.qbk:101:            ..., boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/requirements/ResolveToken.qbk:21:      boost::asio::ip::tcp::resolver::results_type results)
/root/boost_1_87_0/libs/asio/doc/requirements/ResolveToken.qbk:33:        boost::asio::ip::tcp::resolver::results_type results)
/root/boost_1_87_0/libs/asio/doc/requirements/ResolveToken.qbk:44:        boost::asio::ip::tcp::resolver::results_type results)
/root/boost_1_87_0/libs/asio/doc/requirements/ResolveToken.qbk:54:      boost::asio::ip::tcp::resolver::results_type results)
/root/boost_1_87_0/libs/asio/doc/requirements/ResolveToken.qbk:69:      boost::asio::ip::tcp::resolver::results_type results)
/root/boost_1_87_0/libs/asio/doc/requirements/ResolveToken.qbk:76:        this, boost::asio::placeholders::error,
/root/boost_1_87_0/libs/asio/doc/requirements/ResolveToken.qbk:77:        boost::asio::placeholders::results));
/root/boost_1_87_0/libs/asio/doc/requirements/ResolveToken.qbk:81:  std::future<boost::asio::ip::tcp::resolver::results_type> f =
/root/boost_1_87_0/libs/asio/doc/requirements/ResolveToken.qbk:82:    resolver.async_resolve(..., boost::asio::use_future);
/root/boost_1_87_0/libs/asio/doc/requirements/ResolveToken.qbk:86:    boost::asio::ip::tcp::resolver::results_type r = f.get();
/root/boost_1_87_0/libs/asio/doc/requirements/ResolveToken.qbk:96:  boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/libs/asio/doc/requirements/ResolveToken.qbk:101:      boost::asio::ip::tcp::resolver::results_type r =
/root/boost_1_87_0/libs/asio/doc/requirements/ResolveToken.qbk:103:            ..., boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/requirements/ShutdownToken.qbk:68:        this, boost::asio::placeholders::error));
/root/boost_1_87_0/libs/asio/doc/requirements/ShutdownToken.qbk:72:  std::future<void> f = ssl_stream.async_shutdown(..., boost::asio::use_future);
/root/boost_1_87_0/libs/asio/doc/requirements/ShutdownToken.qbk:85:  boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/libs/asio/doc/requirements/ShutdownToken.qbk:90:      co_await ssl_stream.async_shutdown(..., boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/requirements/SignalToken.qbk:74:        this, boost::asio::placeholders::error,
/root/boost_1_87_0/libs/asio/doc/requirements/SignalToken.qbk:75:        boost::asio::placeholders::signal_number));
/root/boost_1_87_0/libs/asio/doc/requirements/SignalToken.qbk:79:  std::future<int> f = signal_set.async_wait(..., boost::asio::use_future);
/root/boost_1_87_0/libs/asio/doc/requirements/SignalToken.qbk:93:  boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/libs/asio/doc/requirements/SignalToken.qbk:100:            ..., boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/requirements/WaitToken.qbk:68:        this, boost::asio::placeholders::error));
/root/boost_1_87_0/libs/asio/doc/requirements/WaitToken.qbk:72:  std::future<void> f = socket.async_wait(..., boost::asio::use_future);
/root/boost_1_87_0/libs/asio/doc/requirements/WaitToken.qbk:85:  boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/libs/asio/doc/requirements/WaitToken.qbk:90:      co_await socket.async_wait(..., boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/requirements/WriteToken.qbk:74:        this, boost::asio::placeholders::error,
/root/boost_1_87_0/libs/asio/doc/requirements/WriteToken.qbk:75:        boost::asio::placeholders::bytes_transferred));
/root/boost_1_87_0/libs/asio/doc/requirements/WriteToken.qbk:80:    socket.async_write_some(..., boost::asio::use_future);
/root/boost_1_87_0/libs/asio/doc/requirements/WriteToken.qbk:94:  boost::asio::awaitable<void> my_coroutine()
/root/boost_1_87_0/libs/asio/doc/requirements/WriteToken.qbk:101:            ..., boost::asio::use_awaitable);
/root/boost_1_87_0/libs/asio/doc/std_executors.qbk:92:  boost::asio::execution_context* context_;
/root/boost_1_87_0/libs/asio/doc/std_executors.qbk:105:  boost::asio::execution_context& query(
/root/boost_1_87_0/libs/asio/doc/std_executors.qbk:106:      boost::asio::execution::context_t) const noexcept
/root/boost_1_87_0/libs/asio/doc/std_executors.qbk:111:  static constexpr boost::asio::execution::blocking_t::never_t query(
/root/boost_1_87_0/libs/asio/doc/std_executors.qbk:112:      boost::asio::execution::blocking_t) noexcept
/root/boost_1_87_0/libs/asio/doc/std_executors.qbk:115:    return boost::asio::execution::blocking.never;
/root/boost_1_87_0/libs/asio/doc/std_executors.qbk:129:boost::asio::execution_context context;
/root/boost_1_87_0/libs/asio/doc/std_executors.qbk:137:boost::asio::ip::tcp::acceptor acceptor(executor);
/root/boost_1_87_0/libs/asio/doc/std_executors.qbk:144:boost::asio::any_io_executor poly_executor = executor;
/root/boost_1_87_0/libs/asio/doc/std_executors.qbk:184:    boost::asio::execution::context_t>
/root/boost_1_87_0/libs/asio/doc/std_executors.qbk:188:  typedef boost::asio::execution_context& result_type;
/root/boost_1_87_0/libs/asio/doc/std_executors.qbk:197:      std::is_convertible<Property, boost::asio::execution::blocking_t>::value
/root/boost_1_87_0/libs/asio/doc/std_executors.qbk:202:  typedef boost::asio::execution::blocking_t::never_t result_type;
/root/boost_1_87_0/libs/asio/doc/std_executors.qbk:209:} } // namespace boost::asio
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:89:  ``''''''``  boost::asio::io_context io;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:91:Next we declare an object of type boost::asio::steady\_timer. The core asio classes that provide I/O functionality (or as in this case timer functionality) always take an executor, or a reference to an execution context (such as
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:96:  ``''''''``  boost::asio::steady_timer t(io, boost::asio::chrono::seconds(5));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:140:  ``''''''``  boost::asio::io_context io;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:142:  ``''''''``  boost::asio::steady_timer t(io, boost::asio::chrono::seconds(5));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:175:  ``''''''``  boost::asio::io_context io;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:177:  ``''''''``  boost::asio::steady_timer t(io, boost::asio::chrono::seconds(5));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:184:Finally, we must call the boost::asio::io\_context::run() member function on the io\_context object.
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:186:The asio library provides a guarantee that completion handlers will only be called from threads that are currently calling boost::asio::io\_context::run(). Therefore unless the boost::asio::io\_context::run() function is called the completion handler for the asynchronous wait completion will never be invoked.
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:188:The boost::asio::io\_context::run() function will also continue to run while there is still "work" to do. In this example, the work is the asynchronous wait on the timer, so the call will not return until the timer has expired and the completion handler has returned.
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:190:It is important to remember to give the io\_context some work to do before calling boost::asio::io\_context::run(). For example, if we had omitted the above call to [link boost_asio.reference.basic_waitable_timer.async_wait steady_timer::async_wait()], the io\_context would not have had any work to do, and consequently boost::asio::io\_context::run() would have returned immediately.
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:231:  ``''''''``  boost::asio::io_context io;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:233:  ``''''''``  boost::asio::steady_timer t(io, boost::asio::chrono::seconds(5));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:270:  ``''''''``    boost::asio::steady_timer* t, int* count)
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:273:As mentioned above, this tutorial program uses a counter to stop running when the timer fires for the sixth time. However you will observe that there is no explicit call to ask the io\_context to stop. Recall that in tutorial Timer.2 we learnt that the boost::asio::io\_context::run() function completes when there is no more "work" to do. By not starting a new asynchronous wait on the timer when `count` reaches 5, the io\_context will run out of work and stop running.
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:285:  ``''''''``    t->expires_at(t->expiry() + boost::asio::chrono::seconds(1));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:289:In this example, the boost::asio::placeholders::error argument to `std::bind` is a named placeholder for the error object passed to the handler. When initiating the asynchronous operation, and if using `std::bind`, you must specify only the arguments that match the handler's parameter list. In tutorial Timer.4 you will see that this placeholder may be elided if the parameter is not needed by the completion handler.
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:293:  ``''''''``          boost::asio::placeholders::error, t, count));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:299:  ``''''''``  boost::asio::io_context io;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:306:  ``''''''``  boost::asio::steady_timer t(io, boost::asio::chrono::seconds(1));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:312:  ``''''''``        boost::asio::placeholders::error, &t, &count));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:353:  ``''''''``    boost::asio::steady_timer* t, int* count)
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:360:  ``''''''``    t->expires_at(t->expiry() + boost::asio::chrono::seconds(1));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:362:  ``''''''``          boost::asio::placeholders::error, t, count));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:368:  ``''''''``  boost::asio::io_context io;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:371:  ``''''''``  boost::asio::steady_timer t(io, boost::asio::chrono::seconds(1));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:373:  ``''''''``        boost::asio::placeholders::error, &t, &count));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:408:  ``''''''``  printer(boost::asio::io_context& io)
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:409:  ``''''''``    : timer_(io, boost::asio::chrono::seconds(1)),
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:416:You will note that the boost::asio::placeholders::error placeholder is not specified here, as the `print` member function does not accept an error object as a parameter.
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:442:  ``''''''``      timer_.expires_at(timer_.expiry() + boost::asio::chrono::seconds(1));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:448:  ``''''''``  boost::asio::steady_timer timer_;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:458:  ``''''''``  boost::asio::io_context io;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:497:  ``''''''``  printer(boost::asio::io_context& io)
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:498:  ``''''''``    : timer_(io, boost::asio::chrono::seconds(1)),
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:516:  ``''''''``      timer_.expires_at(timer_.expiry() + boost::asio::chrono::seconds(1));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:522:  ``''''''``  boost::asio::steady_timer timer_;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:528:  ``''''''``  boost::asio::io_context io;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:546:The previous four tutorials avoided the issue of handler synchronisation by calling the boost::asio::io\_context::run() function from one thread only. As you already know, the asio library provides a guarantee that completion handlers will only be called from threads that are currently calling boost::asio::io\_context::run(). Consequently, calling boost::asio::io\_context::run() from only one thread ensures that completion handlers cannot run concurrently.
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:558:If you find yourself running into these limitations, an alternative approach is to have a pool of threads calling boost::asio::io\_context::run(). However, as this allows handlers to execute concurrently, we need a method of synchronisation when handlers might be accessing a shared, thread-unsafe resource.
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:574:In addition to initialising a pair of boost::asio::steady\_timer members, the constructor initialises the `strand_` member, an object of type boost::asio::strand<boost::asio::io\_context::executor\_type>.
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:577:[link boost_asio.reference.strand strand] class template is an executor adapter that guarantees that, for those handlers that are dispatched through it, an executing handler will be allowed to complete before the next one is started. This is guaranteed irrespective of the number of threads that are calling boost::asio::io\_context::run(). Of course, the handlers may still execute concurrently with other handlers that were not dispatched through an
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:582:  ``''''''``  printer(boost::asio::io_context& io)
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:583:  ``''''''``    : strand_(boost::asio::make_strand(io)),
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:584:  ``''''''``      timer1_(io, boost::asio::chrono::seconds(1)),
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:585:  ``''''''``      timer2_(io, boost::asio::chrono::seconds(1)),
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:589:When initiating the asynchronous operations, each completion handler is "bound" to an boost::asi
::strand<boost::asio::io\_context::executor\_type> object. The boost::asio::bind\_executor() function returns a new handler that automatically dispatches its contained handler through the
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:594:  ``''''''``    timer1_.async_wait(boost::asio::bind_executor(strand_,
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:597:  ``''''''``    timer2_.async_wait(boost::asio::bind_executor(strand_,
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:617:  ``''''''``      timer1_.expires_at(timer1_.expiry() + boost::asio::chrono::seconds(1));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:619:  ``''''''``      timer1_.async_wait(boost::asio::bind_executor(strand_,
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:631:  ``''''''``      timer2_.expires_at(timer2_.expiry() + boost::asio::chrono::seconds(1));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:633:  ``''''''``      timer2_.async_wait(boost::asio::bind_executor(strand_,
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:639:  ``''''''``  boost::asio::strand<boost::asio::io_context::executor_type> strand_;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:640:  ``''''''``  boost::asio::steady_timer timer1_;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:641:  ``''''''``  boost::asio::steady_timer timer2_;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:645:The `main` function now causes boost::asio::io\_context::run() to be called from two threads: the main thread and one additional thread. This is accomplished using an boost::thread object.
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:647:Just as it would with a call from a single thread, concurrent calls to boost::asio::io\_context::run() will continue to execute while there is "work" left to do. The background thread will not exit until all asynchronous operations have completed.
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:653:  ``''''''``  boost::asio::io_context io;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:693:  ``''''''``  printer(boost::asio::io_context& io)
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:694:  ``''''''``    : strand_(boost::asio::make_strand(io)),
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:695:  ``''''''``      timer1_(io, boost::asio::chrono::seconds(1)),
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:696:  ``''''''``      timer2_(io, boost::asio::chrono::seconds(1)),
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:699:  ``''''''``    timer1_.async_wait(boost::asio::bind_executor(strand_,
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:702:  ``''''''``    timer2_.async_wait(boost::asio::bind_executor(strand_,
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:718:  ``''''''``      timer1_.expires_at(timer1_.expiry() + boost::asio::chrono::seconds(1));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:720:  ``''''''``      timer1_.async_wait(boost::asio::bind_executor(strand_,
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:732:  ``''''''``      timer2_.expires_at(timer2_.expiry() + boost::asio::chrono::seconds(1));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:734:  ``''''''``      timer2_.async_wait(boost::asio::bind_executor(strand_,
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:740:  ``''''''``  boost::asio::strand<boost::asio::io_context::executor_type> strand_;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:741:  ``''''''``  boost::asio::steady_timer timer1_;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:742:  ``''''''``  boost::asio::steady_timer timer2_;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:748:  ``''''''``  boost::asio::io_context io;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:780:  ``''''''``using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:797:  ``''''''``    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:813:Now we create and connect the socket. The list of endpoints obtained above may contain both IPv4 and IPv6 endpoints, so we need to try each of them until we find one that works. This keeps the client program independent of a specific IP version. The boost::asio::connect() function does this for us automatically.
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:818:  ``''''''``    boost::asio::connect(socket, endpoints);
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:822:We use a `std::array` to hold the received data. The boost::asio::buffer() function automatically determines the size of the array to help prevent buffer overruns. Instead of a `std::array`, we could have used a `char []` or `std::vector`.
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:831:  ``''''''``      size_t len = socket.read_some(boost::asio::buffer(buf), error);
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:833:When the server closes the connection, the [link boost_asio.reference.basic_stream_socket.read_some ip::tcp::socket::read_some()] function will exit with the boost::asio::error::eof error, which is how we know to exit the loop.
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:837:  ``''''''``      if (error == boost::asio::error::eof)
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:879:  ``''''''``using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:891:  ``''''''``    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:898:  ``''''''``    boost::asio::connect(socket, endpoints);
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:905:  ``''''''``      size_t len = socket.read_some(boost::asio::buffer(buf), error);
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:907:  ``''''''``      if (error == boost::asio::error::eof)
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:939:  ``''''''``using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:956:  ``''''''``    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:980:  ``''''''``      boost::asio::write(socket, boost::asio::buffer(message), ignored_error);
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1023:  ``''''''``using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1036:  ``''''''``    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1048:  ``''''''``      boost::asio::write(socket, boost::asio::buffer(message), ignored_error);
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1079:  ``''''''``    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1108:  ``''''''``  tcp_server(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1127:  ``''''''``          boost::asio::placeholders::error));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1158:  ``''''''``  static pointer create(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1168:In the function `start()`, we call boost::asio::async\_write() to serve the data to the client. Note that we are using boost::asio::async\_write(), rather than [link boost_asio.reference.basic_stream_socket.async_write_some ip::tcp::socket::async_write_some()], to ensure that the entire block of data is sent.
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1180:When initiating the asynchronous operation, and if using `std::bind`, you must specify only the arguments that match the handler's parameter list. In this program, both of the argument placeholders (boost::asio::placeholders::error and boost::asio::placeholders::bytes\_transferred) could potentially have been removed, since they are not being used in `handle_write()`.
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1184:  ``''''''``    boost::asio::async_write(socket_, boost::asio::buffer(message_),
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1186:  ``''''''``          boost::asio::placeholders::error,
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1187:  ``''''''``          boost::asio::placeholders::bytes_transferred));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1195:  ``''''''``  tcp_connection(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1222:The boost::asio::async\_write() call used to initiate the call can then be changed to just:
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1225:  ``''''''``boost::asio::async_write(socket_, boost::asio::buffer(message_),
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1260:  ``''''''``using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1275:  ``''''''``  static pointer create(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1289:  ``''''''``    boost::asio::async_write(socket_, boost::asio::buffer(message_),
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1291:  ``''''''``          boost::asio::placeholders::error,
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1292:  ``''''''``          boost::asio::placeholders::bytes_transferred));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1296:  ``''''''``  tcp_connection(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1313:  ``''''''``  tcp_server(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1328:  ``''''''``          boost::asio::placeholders::error));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1342:  ``''''''``  boost::asio::io_context& io_context_;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1350:  ``''''''``    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1377:  ``''''''``using boost::asio::ip::udp;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1393:  ``''''''``    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1413:  ``''''''``    socket.send_to(boost::asio::buffer(send_buf), receiver_endpoint);
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1422:  ``''''''``        boost::asio::buffer(recv_buf), sender_endpoint);
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1465:  ``''''''``using boost::asio::ip::udp;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1477:  ``''''''``    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1487:  ``''''''``    socket.send_to(boost::asio::buffer(send_buf), receiver_endpoint);
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1492:  ``''''''``        boost::asio::buffer(recv_buf), sender_endpoint);
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1519:  ``''''''``    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1535:  ``''''''``      socket.receive_from(boost::asio::buffer(recv_buf), remote_endpoint);
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1548:  ``''''''``      socket.send_to(boost::asio::buffer(message),
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1593:  ``''''''``using boost::asio::ip::udp;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1606:  ``''''''``    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1614:  ``''''''``      socket.receive_from(boost::asio::buffer(recv_buf), remote_endpoint);
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1619:  ``''''''``      socket.send_to(boost::asio::buffer(message),
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1651:  ``''''''``    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1675:  ``''''''``  udp_server(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1690:  ``''''''``        boost::asio::buffer(recv_buffer_), remote_endpoint_,
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1692:  ``''''''``          boost::asio::placeholders::error,
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1693:  ``''''''``          boost::asio::placeholders::bytes_transferred));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1721:  ``''''''``      socket_.async_send_to(boost::asio::buffer(*message), remote_endpoint_,
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1723:  ``''''''``            boost::asio::placeholders::error,
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1724:  ``''''''``            boost::asio::placeholders::bytes_transferred));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1726:When initiating the asynchronous operation, and if using `std::bind`, you must specify only the arguments that match the handler's parameter list. In this program, both of the argument placeholders (boost::asio::placeholders::error and boost::asio::placeholders::bytes\_transferred) could potentially have been removed.
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1786:  ``''''''``using boost::asio::ip::udp;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1798:  ``''''''``  udp_server(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1808:  ``''''''``        boost::asio::buffer(recv_buffer_), remote_endpoint_,
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1810:  ``''''''``          boost::asio::placeholders::error,
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1811:  ``''''''``          boost::asio::placeholders::bytes_transferred));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1822:  ``''''''``      socket_.async_send_to(boost::asio::buffer(*message), remote_endpoint_,
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1824:  ``''''''``            boost::asio::placeholders::error,
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1825:  ``''''''``            boost::asio::placeholders::bytes_transferred));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1846:  ``''''''``    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1875:  ``''''''``    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1914:  ``''''''``  static pointer create(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1928:  ``''''''``    boost::asio::async_write(socket_, boost::asio::buffer(message_),
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1933:  ``''''''``  tcp_connection(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1949:  ``''''''``  tcp_server(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1964:  ``''''''``          boost::asio::placeholders::error));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1978:  ``''''''``  boost::asio::io_context& io_context_;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:1992:  ``''''''``  udp_server(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:2002:  ``''''''``        boost::asio::buffer(recv_buffer_), remote_endpoint_,
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:2004:  ``''''''``          boost::asio::placeholders::error));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:2014:  ``''''''``      socket_.async_send_to(boost::asio::buffer(*message), remote_endpoint_,
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:2059:  ``''''''``using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:2060:  ``''''''``using boost::asio::ip::udp;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:2075:  ``''''''``  static pointer create(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:2089:  ``''''''``    boost::asio::async_write(socket_, boost::asio::buffer(message_),
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:2094:  ``''''''``  tcp_connection(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:2110:  ``''''''``  tcp_server(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:2125:  ``''''''``          boost::asio::placeholders::error));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:2139:  ``''''''``  boost::asio::io_context& io_context_;
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:2146:  ``''''''``  udp_server(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:2156:  ``''''''``        boost::asio::buffer(recv_buffer_), remote_endpoint_,
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:2158:  ``''''''``          boost::asio::placeholders::error));
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:2168:  ``''''''``      socket_.async_send_to(boost::asio::buffer(*message), remote_endpoint_,
/root/boost_1_87_0/libs/asio/doc/tutorial.qbk:2188:  ``''''''``    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/doc/using.qbk:87:    boost::asio::ip::tcp::iostream s("www.boost.org", "http");
/root/boost_1_87_0/libs/asio/example/cpp11/allocation/server.cpp:19:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/allocation/server.cpp:133:    socket_.async_read_some(boost::asio::buffer(data_),
/root/boost_1_87_0/libs/asio/example/cpp11/allocation/server.cpp:134:        boost::asio::bind_allocator(
/root/boost_1_87_0/libs/asio/example/cpp11/allocation/server.cpp:148:    boost::asio::async_write(socket_, boost::asio::buffer(data_, length),
/root/boost_1_87_0/libs/asio/example/cpp11/allocation/server.cpp:149:        boost::asio::bind_allocator(
/root/boost_1_87_0/libs/asio/example/cpp11/allocation/server.cpp:173:  server(boost::asio::io_context& io_context, short port)
/root/boost_1_87_0/libs/asio/example/cpp11/allocation/server.cpp:207:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/buffers/reference_counted.cpp:18:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/buffers/reference_counted.cpp:27:      buffer_(boost::asio::buffer(*data_))
/root/boost_1_87_0/libs/asio/example/cpp11/buffers/reference_counted.cpp:32:  typedef boost::asio::const_buffer value_type;
/root/boost_1_87_0/libs/asio/example/cpp11/buffers/reference_counted.cpp:33:  typedef const boost::asio::const_buffer* const_iterator;
/root/boost_1_87_0/libs/asio/example/cpp11/buffers/reference_counted.cpp:34:  const boost::asio::const_buffer* begin() const { return &buffer_; }
/root/boost_1_87_0/libs/asio/example/cpp11/buffers/reference_counted.cpp:35:  const boost::asio::const_buffer* end() const { return &buffer_ + 1; }
/root/boost_1_87_0/libs/asio/example/cpp11/buffers/reference_counted.cpp:39:  boost::asio::const_buffer buffer_;
/root/boost_1_87_0/libs/asio/example/cpp11/buffers/reference_counted.cpp:63:    boost::asio::async_write(socket_, buffer,
/root/boost_1_87_0/libs/asio/example/cpp11/buffers/reference_counted.cpp:76:  server(boost::asio::io_context& io_context, short port)
/root/boost_1_87_0/libs/asio/example/cpp11/buffers/reference_counted.cpp:110:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/chat/chat_client.cpp:18:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/chat/chat_client.cpp:25:  chat_client(boost::asio::io_context& io_context,
/root/boost_1_87_0/libs/asio/example/cpp11/chat/chat_client.cpp:35:    boost::asio::post(io_context_,
/root/boost_1_87_0/libs/asio/example/cpp11/chat/chat_client.cpp:49:    boost::asio::post(io_context_, [this]() { socket_.close(); });
/root/boost_1_87_0/libs/asio/example/cpp11/chat/chat_client.cpp:55:    boost::asio::async_connect(socket_, endpoints,
/root/boost_1_87_0/libs/asio/example/cpp11/chat/chat_client.cpp:67:    boost::asio::async_read(socket_,
/root/boost_1_87_0/libs/asio/example/cpp11/chat/chat_client.cpp:68:        boost::asio::buffer(read_msg_.data(), chat_message::header_length),
/root/boost_1_87_0/libs/asio/example/cpp11/chat/chat_client.cpp:84:    boost::asio::async_read(socket_,
/root/boost_1_87_0/libs/asio/example/cpp11/chat/chat_client.cpp:85:        boost::asio::buffer(read_msg_.body(), read_msg_.body_length()),
/root/boost_1_87_0/libs/asio/example/cpp11/chat/chat_client.cpp:103:    boost::asio::async_write(socket_,
/root/boost_1_87_0/libs/asio/example/cpp11/chat/chat_client.cpp:104:        boost::asio::buffer(write_msgs_.front().data(),
/root/boost_1_87_0/libs/asio/example/cpp11/chat/chat_client.cpp:124:  boost::asio::io_context& io_context_;
/root/boost_1_87_0/libs/asio/example/cpp11/chat/chat_client.cpp:140:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/chat/chat_server.cpp:21:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/chat/chat_server.cpp:104:    boost::asio::async_read(socket_,
/root/boost_1_87_0/libs/asio/example/cpp11/chat/chat_server.cpp:105:        boost::asio::buffer(read_msg_.data(), chat_message::header_length),
/root/boost_1_87_0/libs/asio/example/cpp11/chat/chat_server.cpp:122:    boost::asio::async_read(socket_,
/root/boost_1_87_0/libs/asio/example/cpp11/chat/chat_server.cpp:123:        boost::asio::buffer(read_msg_.body(), read_msg_.body_length()),
/root/boost_1_87_0/libs/asio/example/cpp11/chat/chat_server.cpp:141:    boost::asio::async_write(socket_,
/root/boost_1_87_0/libs/asio/example/cpp11/chat/chat_server.cpp:142:        boost::asio::buffer(write_msgs_.front().data(),
/root/boost_1_87_0/libs/asio/example/cpp11/chat/chat_server.cpp:172:  chat_server(boost::asio::io_context& io_context,
/root/boost_1_87_0/libs/asio/example/cpp11/chat/chat_server.cpp:210:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/chat/posix_chat_client.cpp:20:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/chat/posix_chat_client.cpp:21:namespace posix = boost::asio::posix;
/root/boost_1_87_0/libs/asio/example/cpp11/chat/posix_chat_client.cpp:26:  posix_chat_client(boost::asio::io_context& io_context,
/root/boost_1_87_0/libs/asio/example/cpp11/chat/posix_chat_client.cpp:39:    boost::asio::async_connect(socket_, endpoints,
/root/boost_1_87_0/libs/asio/example/cpp11/chat/posix_chat_client.cpp:52:    boost::asio::async_read(socket_,
/root/boost_1_87_0/libs/asio/example/cpp11/chat/posix_chat_client.cpp:53:        boost::asio::buffer(read_msg_.data(), chat_message::header_length),
/root/boost_1_87_0/libs/asio/example/cpp11/chat/posix_chat_client.cpp:69:    boost::asio::async_read(socket_,
/root/boost_1_87_0/libs/asio/example/cpp11/chat/posix_chat_client.cpp:70:        boost::asio::buffer(read_msg_.body(), read_msg_.body_length()),
/root/boost_1_87_0/libs/asio/example/cpp11/chat/posix_chat_client.cpp:88:    std::array<boost::asio::const_buffer, 2> buffers = {{
/root/boost_1_87_0/libs/asio/example/cpp11/chat/posix_chat_client.cpp:89:      boost::asio::buffer(read_msg_.body(), read_msg_.body_length()),
/root/boost_1_87_0/libs/asio/example/cpp11/chat/posix_chat_client.cpp:90:      boost::asio::buffer(eol) }};
/root/boost_1_87_0/libs/asio/example/cpp11/chat/posix_chat_client.cpp:91:    boost::asio::async_write(output_, buffers,
/root/boost_1_87_0/libs/asio/example/cpp11/chat/posix_chat_client.cpp:108:    boost::asio::async_read_until(input_, input_buffer_, '\n',
/root/boost_1_87_0/libs/asio/example/cpp11/chat/posix_chat_client.cpp:120:          else if (ec == boost::asio::error::not_found)
/root/boost_1_87_0/libs/asio/example/cpp11/chat/posix_chat_client.cpp:137:    boost::asio::async_write(socket_,
/root/boost_1_87_0/libs/asio/example/cpp11/chat/posix_chat_client.cpp:138:        boost::asio::buffer(write_msg_.data(), write_msg_.length()),
/root/boost_1_87_0/libs/asio/example/cpp11/chat/posix_chat_client.cpp:166:  boost::asio::streambuf input_buffer_;
/root/boost_1_87_0/libs/asio/example/cpp11/chat/posix_chat_client.cpp:179:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/deferred/deferred_1.cpp:14:using boost::asio::deferred;
/root/boost_1_87_0/libs/asio/example/cpp11/deferred/deferred_1.cpp:18:  boost::asio::io_context ctx;
/root/boost_1_87_0/libs/asio/example/cpp11/deferred/deferred_1.cpp:20:  boost::asio::steady_timer timer(ctx);
/root/boost_1_87_0/libs/asio/example/cpp11/deferred/deferred_2.cpp:14:using boost::asio::deferred;
/root/boost_1_87_0/libs/asio/example/cpp11/deferred/deferred_2.cpp:18:  boost::asio::io_context ctx;
/root/boost_1_87_0/libs/asio/example/cpp11/deferred/deferred_2.cpp:20:  boost::asio::steady_timer timer(ctx);
/root/boost_1_87_0/libs/asio/example/cpp11/echo/async_tcp_echo_server.cpp:17:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/echo/async_tcp_echo_server.cpp:37:    socket_.async_read_some(boost::asio::buffer(data_, max_length),
/root/boost_1_87_0/libs/asio/example/cpp11/echo/async_tcp_echo_server.cpp:50:    boost::asio::async_write(socket_, boost::asio::buffer(data_, length),
/root/boost_1_87_0/libs/asio/example/cpp11/echo/async_tcp_echo_server.cpp:68:  server(boost::asio::io_context& io_context, short port)
/root/boost_1_87_0/libs/asio/example/cpp11/echo/async_tcp_echo_server.cpp:102:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/echo/async_udp_echo_server.cpp:15:using boost::asio::ip::udp;
/root/boost_1_87_0/libs/asio/example/cpp11/echo/async_udp_echo_server.cpp:20:  server(boost::asio::io_context& io_context, short port)
/root/boost_1_87_0/libs/asio/example/cpp11/echo/async_udp_echo_server.cpp:29:        boost::asio::buffer(data_, max_length), sender_endpoint_,
/root/boost_1_87_0/libs/asio/example/cpp11/echo/async_udp_echo_server.cpp:46:        boost::asio::buffer(data_, length), sender_endpoint_,
/root/boost_1_87_0/libs/asio/example/cpp11/echo/async_udp_echo_server.cpp:70:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/echo/blocking_tcp_echo_client.cpp:16:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/echo/blocking_tcp_echo_client.cpp:30:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/echo/blocking_tcp_echo_client.cpp:34:    boost::asio::connect(s, resolver.resolve(argv[1], argv[2]));
/root/boost_1_87_0/libs/asio/example/cpp11/echo/blocking_tcp_echo_client.cpp:40:    boost::asio::write(s, boost::asio::buffer(request, request_length));
/root/boost_1_87_0/libs/asio/example/cpp11/echo/blocking_tcp_echo_client.cpp:43:    size_t reply_length = boost::asio::read(s,
/root/boost_1_87_0/libs/asio/example/cpp11/echo/blocking_tcp_echo_client.cpp:44:        boost::asio::buffer(reply, request_length));
/root/boost_1_87_0/libs/asio/example/cpp11/echo/blocking_tcp_echo_server.cpp:17:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/echo/blocking_tcp_echo_server.cpp:30:      size_t length = sock.read_some(boost::asio::buffer(data), error);
/root/boost_1_87_0/libs/asio/example/cpp11/echo/blocking_tcp_echo_server.cpp:31:      if (error == boost::asio::error::eof)
/root/boost_1_87_0/libs/asio/example/cpp11/echo/blocking_tcp_echo_server.cpp:36:      boost::asio::write(sock, boost::asio::buffer(data, length));
/root/boost_1_87_0/libs/asio/example/cpp11/echo/blocking_tcp_echo_server.cpp:45:void server(boost::asio::io_context& io_context, unsigned short port)
/root/boost_1_87_0/libs/asio/example/cpp11/echo/blocking_tcp_echo_server.cpp:64:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/echo/blocking_udp_echo_client.cpp:16:using boost::asio::ip::udp;
/root/boost_1_87_0/libs/asio/example/cpp11/echo/blocking_udp_echo_client.cpp:30:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/echo/blocking_udp_echo_client.cpp:42:    s.send_to(boost::asio::buffer(request, request_length), *endpoints.begin());
/root/boost_1_87_0/libs/asio/example/cpp11/echo/blocking_udp_echo_client.cpp:47:        boost::asio::buffer(reply, max_length), sender_endpoint);
/root/boost_1_87_0/libs/asio/example/cpp11/echo/blocking_udp_echo_server.cpp:15:using boost::asio::ip::udp;
/root/boost_1_87_0/libs/asio/example/cpp11/echo/blocking_udp_echo_server.cpp:19:void server(boost::asio::io_context& io_context, unsigned short port)
/root/boost_1_87_0/libs/asio/example/cpp11/echo/blocking_udp_echo_server.cpp:27:        boost::asio::buffer(data, max_length), sender_endpoint);
/root/boost_1_87_0/libs/asio/example/cpp11/echo/blocking_udp_echo_server.cpp:28:    sock.send_to(boost::asio::buffer(data, length), sender_endpoint);
/root/boost_1_87_0/libs/asio/example/cpp11/echo/blocking_udp_echo_server.cpp:42:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/actor.cpp:13:using boost::asio::any_io_executor;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/actor.cpp:14:using boost::asio::defer;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/actor.cpp:15:using boost::asio::post;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/actor.cpp:16:using boost::asio::strand;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/actor.cpp:17:using boost::asio::system_executor;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/actor.cpp:219:using boost::asio::thread_pool;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/bank_account_1.cpp:5:using boost::asio::static_thread_pool;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/bank_account_1.cpp:6:namespace execution = boost::asio::execution;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/bank_account_2.cpp:5:using boost::asio::static_thread_pool;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/bank_account_2.cpp:6:namespace execution = boost::asio::execution;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/bank_account_2.cpp:19:    boost::asio::require(pool_.executor(), execution::blocking.always).execute(
/root/boost_1_87_0/libs/asio/example/cpp11/executors/bank_account_2.cpp:28:    boost::asio::require(pool_.executor(), execution::blocking.always).execute(
/root/boost_1_87_0/libs/asio/example/cpp11/executors/bank_account_2.cpp:39:    boost::asio::require(pool_.executor(), execution::blocking.always).execute(
/root/boost_1_87_0/libs/asio/example/cpp11/executors/fork_join.cpp:11:using boost::asio::static_thread_pool;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/fork_join.cpp:12:namespace execution = boost::asio::execution;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/pipeline.cpp:16:using boost::asio::execution_context;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/pipeline.cpp:17:using boost::asio::executor_binder;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/pipeline.cpp:18:using boost::asio::get_associated_executor;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/pipeline.cpp:19:using boost::asio::post;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/pipeline.cpp:20:using boost::asio::system_executor;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/pipeline.cpp:21:using boost::asio::use_future;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/pipeline.cpp:22:using boost::asio::use_service;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/pipeline.cpp:23:namespace execution = boost::asio::execution;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/pipeline.cpp:61:    return boost::asio::query(system_executor(), execution::context);
/root/boost_1_87_0/libs/asio/example/cpp11/executors/pipeline.cpp:244:using boost::asio::bind_executor;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/pipeline.cpp:245:using boost::asio::thread_pool;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/priority_scheduler.cpp:9:using boost::asio::dispatch;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/priority_scheduler.cpp:10:using boost::asio::execution_context;
/root/boost_1_87_0/libs/asio/example/cpp11/executors/priority_scheduler.cpp:11:namespace execution = boost::asio::execution;
/root/boost_1_87_0/libs/asio/example/cpp11/files/async_file_copy.cpp:19:  file_copier(boost::asio::io_context& io_context,
/root/boost_1_87_0/libs/asio/example/cpp11/files/async_file_copy.cpp:22:        boost::asio::stream_file::read_only),
/root/boost_1_87_0/libs/asio/example/cpp11/files/async_file_copy.cpp:24:        boost::asio::stream_file::write_only
/root/boost_1_87_0/libs/asio/example/cpp11/files/async_file_copy.cpp:25:          | boost::asio::stream_file::create
/root/boost_1_87_0/libs/asio/example/cpp11/files/async_file_copy.cpp:26:          | boost::asio::stream_file::truncate)
/root/boost_1_87_0/libs/asio/example/cpp11/files/async_file_copy.cpp:38:    from_file_.async_read_some(boost::asio::buffer(data_),
/root/boost_1_87_0/libs/asio/example/cpp11/files/async_file_copy.cpp:45:          else if (error != boost::asio::error::eof)
/root/boost_1_87_0/libs/asio/example/cpp11/files/async_file_copy.cpp:54:    boost::asio::async_write(to_file_, boost::asio::buffer(data_, n),
/root/boost_1_87_0/libs/asio/example/cpp11/files/async_file_copy.cpp:68:  boost::asio::stream_file from_file_;
/root/boost_1_87_0/libs/asio/example/cpp11/files/async_file_copy.cpp:69:  boost::asio::stream_file to_file_;
/root/boost_1_87_0/libs/asio/example/cpp11/files/async_file_copy.cpp:83:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/files/blocking_file_copy.cpp:26:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/files/blocking_file_copy.cpp:28:    boost::asio::stream_file from_file(io_context, argv[1],
/root/boost_1_87_0/libs/asio/example/cpp11/files/blocking_file_copy.cpp:29:        boost::asio::stream_file::read_only);
/root/boost_1_87_0/libs/asio/example/cpp11/files/blocking_file_copy.cpp:31:    boost::asio::stream_file to_file(io_context, argv[2],
/root/boost_1_87_0/libs/asio/example/cpp11/files/blocking_file_copy.cpp:32:        boost::asio::stream_file::write_only
/root/boost_1_87_0/libs/asio/example/cpp11/files/blocking_file_copy.cpp:33:          | boost::asio::stream_file::create
/root/boost_1_87_0/libs/asio/example/cpp11/files/blocking_file_copy.cpp:34:          | boost::asio::stream_file::truncate);
/root/boost_1_87_0/libs/asio/example/cpp11/files/blocking_file_copy.cpp:40:      std::size_t n = from_file.read_some(boost::asio::buffer(data), error);
/root/boost_1_87_0/libs/asio/example/cpp11/files/blocking_file_copy.cpp:43:      boost::asio::write(to_file, boost::asio::buffer(data, n), error);
/root/boost_1_87_0/libs/asio/example/cpp11/files/blocking_file_copy.cpp:48:    if (error && error != boost::asio::error::eof)
/root/boost_1_87_0/libs/asio/example/cpp11/fork/daemon.cpp:20:using boost::asio::ip::udp;
/root/boost_1_87_0/libs/asio/example/cpp11/fork/daemon.cpp:25:  udp_daytime_server(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/example/cpp11/fork/daemon.cpp:35:        boost::asio::buffer(recv_buffer_), remote_endpoint_,
/root/boost_1_87_0/libs/asio/example/cpp11/fork/daemon.cpp:45:            socket_.send_to(boost::asio::buffer(message),
/root/boost_1_87_0/libs/asio/example/cpp11/fork/daemon.cpp:62:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/fork/daemon.cpp:72:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/root/boost_1_87_0/libs/asio/example/cpp11/fork/daemon.cpp:82:    io_context.notify_fork(boost::asio::io_context::fork_prepare);
/root/boost_1_87_0/libs/asio/example/cpp11/fork/daemon.cpp:98:        //   io_context.notify_fork(boost::asio::io_context::fork_parent);
/root/boost_1_87_0/libs/asio/example/cpp11/fork/daemon.cpp:103:        //   io_context.notify_fork(boost::asio::io_context::fork_prepare);
/root/boost_1_87_0/libs/asio/example/cpp11/fork/daemon.cpp:177:    io_context.notify_fork(boost::asio::io_context::fork_child);
/root/boost_1_87_0/libs/asio/example/cpp11/fork/process_per_connection.cpp:21:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/fork/process_per_connection.cpp:26:  server(boost::asio::io_context& io_context, unsigned short port)
/root/boost_1_87_0/libs/asio/example/cpp11/fork/process_per_connection.cpp:70:            io_context_.notify_fork(boost::asio::io_context::fork_prepare);
/root/boost_1_87_0/libs/asio/example/cpp11/fork/process_per_connection.cpp:78:              io_context_.notify_fork(boost::asio::io_context::fork_child);
/root/boost_1_87_0/libs/asio/example/cpp11/fork/process_per_connection.cpp:97:              io_context_.notify_fork(boost::asio::io_context::fork_parent);
/root/boost_1_87_0/libs/asio/example/cpp11/fork/process_per_connection.cpp:116:    socket_.async_read_some(boost::asio::buffer(data_),
/root/boost_1_87_0/libs/asio/example/cpp11/fork/process_per_connection.cpp:126:    boost::asio::async_write(socket_, boost::asio::buffer(data_, length),
/root/boost_1_87_0/libs/asio/example/cpp11/fork/process_per_connection.cpp:134:  boost::asio::io_context& io_context_;
/root/boost_1_87_0/libs/asio/example/cpp11/fork/process_per_connection.cpp:135:  boost::asio::signal_set signal_;
/root/boost_1_87_0/libs/asio/example/cpp11/fork/process_per_connection.cpp:151:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/futures/daytime_client.cpp:19:using boost::asio::ip::udp;
/root/boost_1_87_0/libs/asio/example/cpp11/futures/daytime_client.cpp:21:void get_daytime(boost::asio::io_context& io_context, const char* hostname)
/root/boost_1_87_0/libs/asio/example/cpp11/futures/daytime_client.cpp:30:          boost::asio::use_future);
/root/boost_1_87_0/libs/asio/example/cpp11/futures/daytime_client.cpp:39:      socket.async_send_to(boost::asio::buffer(send_buf),
/root/boost_1_87_0/libs/asio/example/cpp11/futures/daytime_client.cpp:41:          boost::asio::use_future);
/root/boost_1_87_0/libs/asio/example/cpp11/futures/daytime_client.cpp:51:          boost::asio::buffer(recv_buf),
/root/boost_1_87_0/libs/asio/example/cpp11/futures/daytime_client.cpp:53:          boost::asio::use_future);
/root/boost_1_87_0/libs/asio/example/cpp11/futures/daytime_client.cpp:79:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/futures/daytime_client.cpp:80:    auto work = boost::asio::make_work_guard(io_context);
/root/boost_1_87_0/libs/asio/example/cpp11/handler_tracking/async_tcp_echo_server.cpp:17:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/handler_tracking/async_tcp_echo_server.cpp:48:    socket_.async_read_some(boost::asio::buffer(data_, max_length),
/root/boost_1_87_0/libs/asio/example/cpp11/handler_tracking/async_tcp_echo_server.cpp:65:    boost::asio::async_write(socket_, boost::asio::buffer(data_, length),
/root/boost_1_87_0/libs/asio/example/cpp11/handler_tracking/async_tcp_echo_server.cpp:85:  server(boost::asio::io_context& io_context, short port)
/root/boost_1_87_0/libs/asio/example/cpp11/handler_tracking/async_tcp_echo_server.cpp:123:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/handler_tracking/custom_tracking.hpp:85:  static void creation(boost::asio::execution_context& /*ctx*/,
/root/boost_1_87_0/libs/asio/example/cpp11/handler_tracking/custom_tracking.hpp:154:  static void operation(boost::asio::execution_context& /*ctx*/,
/root/boost_1_87_0/libs/asio/example/cpp11/handler_tracking/custom_tracking.hpp:161:  static void reactor_registration(boost::asio::execution_context& context,
/root/boost_1_87_0/libs/asio/example/cpp11/handler_tracking/custom_tracking.hpp:169:  static void reactor_deregistration(boost::asio::execution_context& context,
/root/boost_1_87_0/libs/asio/example/cpp11/handler_tracking/custom_tracking.hpp:177:  static void reactor_events(boost::asio::execution_context& context,
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/async_client.cpp:18:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/async_client.cpp:23:  client(boost::asio::io_context& io_context,
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/async_client.cpp:41:          boost::asio::placeholders::error,
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/async_client.cpp:42:          boost::asio::placeholders::results));
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/async_client.cpp:53:      boost::asio::async_connect(socket_, endpoints,
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/async_client.cpp:55:            boost::asio::placeholders::error));
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/async_client.cpp:68:      boost::asio::async_write(socket_, request_,
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/async_client.cpp:70:            boost::asio::placeholders::error));
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/async_client.cpp:85:      boost::asio::async_read_until(socket_, response_, "\r\n",
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/async_client.cpp:87:            boost::asio::placeholders::error));
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/async_client.cpp:120:      boost::asio::async_read_until(socket_, response_, "\r\n\r\n",
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/async_client.cpp:122:            boost::asio::placeholders::error));
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/async_client.cpp:146:      boost::asio::async_read(socket_, response_,
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/async_client.cpp:147:          boost::asio::transfer_at_least(1),
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/async_client.cpp:149:            boost::asio::placeholders::error));
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/async_client.cpp:165:      boost::asio::async_read(socket_, response_,
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/async_client.cpp:166:          boost::asio::transfer_at_least(1),
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/async_client.cpp:168:            boost::asio::placeholders::error));
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/async_client.cpp:170:    else if (err != boost::asio::error::eof)
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/async_client.cpp:178:  boost::asio::streambuf request_;
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/async_client.cpp:179:  boost::asio::streambuf response_;
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/async_client.cpp:194:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/sync_client.cpp:17:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/sync_client.cpp:31:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/sync_client.cpp:39:    boost::asio::connect(socket, endpoints);
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/sync_client.cpp:44:    boost::asio::streambuf request;
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/sync_client.cpp:52:    boost::asio::write(socket, request);
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/sync_client.cpp:57:    boost::asio::streambuf response;
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/sync_client.cpp:58:    boost::asio::read_until(socket, response, "\r\n");
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/sync_client.cpp:80:    boost::asio::read_until(socket, response, "\r\n\r\n");
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/sync_client.cpp:94:    while (boost::asio::read(socket, response,
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/sync_client.cpp:95:          boost::asio::transfer_at_least(1), error))
/root/boost_1_87_0/libs/asio/example/cpp11/http/client/sync_client.cpp:97:    if (error != boost::asio::error::eof)
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/connection.cpp:19:connection::connection(boost::asio::ip::tcp::socket socket,
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/connection.cpp:40:  socket_.async_read_some(boost::asio::buffer(buffer_),
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/connection.cpp:64:        else if (ec != boost::asio::error::operation_aborted)
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/connection.cpp:74:  boost::asio::async_write(socket_, reply_.to_buffers(),
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/connection.cpp:81:          socket_.shutdown(boost::asio::ip::tcp::socket::shutdown_both,
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/connection.cpp:85:        if (ec != boost::asio::error::operation_aborted)
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/connection.hpp:36:  explicit connection(boost::asio::ip::tcp::socket socket,
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/connection.hpp:53:  boost::asio::ip::tcp::socket socket_;
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:52:boost::asio::const_buffer to_buffer(reply::status_type status)
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:57:    return boost::asio::buffer(ok);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:59:    return boost::asio::buffer(created);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:61:    return boost::asio::buffer(accepted);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:63:    return boost::asio::buffer(no_content);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:65:    return boost::asio::buffer(multiple_choices);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:67:    return boost::asio::buffer(moved_permanently);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:69:    return boost::asio::buffer(moved_temporarily);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:71:    return boost::asio::buffer(not_modified);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:73:    return boost::asio::buffer(bad_request);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:75:    return boost::asio::buffer(unauthorized);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:77:    return boost::asio::buffer(forbidden);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:79:    return boost::asio::buffer(not_found);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:81:    return boost::asio::buffer(internal_server_error);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:83:    return boost::asio::buffer(not_implemented);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:85:    return boost::asio::buffer(bad_gateway);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:87:    return boost::asio::buffer(service_unavailable);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:89:    return boost::asio::buffer(internal_server_error);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:102:std::vector<boost::asio::const_buffer> reply::to_buffers()
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:104:  std::vector<boost::asio::const_buffer> buffers;
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:109:    buffers.push_back(boost::asio::buffer(h.name));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:110:    buffers.push_back(boost::asio::buffer(misc_strings::name_value_separator));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:111:    buffers.push_back(boost::asio::buffer(h.value));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:112:    buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:114:  buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.cpp:115:  buffers.push_back(boost::asio::buffer(content));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/reply.hpp:55:  std::vector<boost::asio::const_buffer> to_buffers();
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/server.cpp:38:  boost::asio::ip::tcp::resolver resolver(io_context_);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/server.cpp:39:  boost::asio::ip::tcp::endpoint endpoint =
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/server.cpp:42:  acceptor_.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/server.cpp:61:      [this](boost::system::error_code ec, boost::asio::ip::tcp::socket socket)
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/server.hpp:46:  boost::asio::io_context io_context_;
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/server.hpp:49:  boost::asio::signal_set signals_;
/root/boost_1_87_0/libs/asio/example/cpp11/http/server/server.hpp:52:  boost::asio::ip::tcp::acceptor acceptor_;
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/connection.cpp:18:connection::connection(boost::asio::ip::tcp::socket socket,
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/connection.cpp:33:  socket_.async_read_some(boost::asio::buffer(buffer_),
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/connection.cpp:69:  boost::asio::async_write(socket_, reply_.to_buffers(),
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/connection.cpp:76:          socket_.shutdown(boost::asio::ip::tcp::socket::shutdown_both,
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/connection.hpp:34:  explicit connection(boost::asio::ip::tcp::socket socket,
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/connection.hpp:48:  boost::asio::ip::tcp::socket socket_;
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/io_context_pool.cpp:28:    io_context_ptr io_context(new boost::asio::io_context);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/io_context_pool.cpp:30:    work_.push_back(boost::asio::make_work_guard(*io_context));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/io_context_pool.cpp:53:boost::asio::io_context& io_context_pool::get_io_context()
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/io_context_pool.cpp:56:  boost::asio::io_context& io_context = *io_contexts_[next_io_context_];
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/io_context_pool.hpp:36:  boost::asio::io_context& get_io_context();
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/io_context_pool.hpp:42:  typedef std::shared_ptr<boost::asio::io_context> io_context_ptr;
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/io_context_pool.hpp:43:  typedef boost::asio::executor_work_guard<
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/io_context_pool.hpp:44:    boost::asio::io_context::executor_type> io_context_work;
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:52:boost::asio::const_buffer to_buffer(reply::status_type status)
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:57:    return boost::asio::buffer(ok);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:59:    return boost::asio::buffer(created);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:61:    return boost::asio::buffer(accepted);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:63:    return boost::asio::buffer(no_content);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:65:    return boost::asio::buffer(multiple_choices);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:67:    return boost::asio::buffer(moved_permanently);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:69:    return boost::asio::buffer(moved_temporarily);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:71:    return boost::asio::buffer(not_modified);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:73:    return boost::asio::buffer(bad_request);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:75:    return boost::asio::buffer(unauthorized);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:77:    return boost::asio::buffer(forbidden);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:79:    return boost::asio::buffer(not_found);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:81:    return boost::asio::buffer(internal_server_error);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:83:    return boost::asio::buffer(not_implemented);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:85:    return boost::asio::buffer(bad_gateway);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:87:    return boost::asio::buffer(service_unavailable);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:89:    return boost::asio::buffer(internal_server_error);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:102:std::vector<boost::asio::const_buffer> reply::to_buffers()
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:104:  std::vector<boost::asio::const_buffer> buffers;
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:109:    buffers.push_back(boost::asio::buffer(h.name));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:110:    buffers.push_back(boost::asio::buffer(misc_strings::name_value_separator));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:111:    buffers.push_back(boost::asio::buffer(h.value));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:112:    buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:114:  buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.cpp:115:  buffers.push_back(boost::asio::buffer(content));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/reply.hpp:55:  std::vector<boost::asio::const_buffer> to_buffers();
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/server.cpp:38:  boost::asio::ip::tcp::resolver resolver(acceptor_.get_executor());
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/server.cpp:39:  boost::asio::ip::tcp::endpoint endpoint =
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/server.cpp:42:  acceptor_.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/server.cpp:57:      [this](boost::system::error_code ec, boost::asio::ip::tcp::socket socket)
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/server.hpp:48:  boost::asio::signal_set signals_;
/root/boost_1_87_0/libs/asio/example/cpp11/http/server2/server.hpp:51:  boost::asio::ip::tcp::acceptor acceptor_;
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/connection.cpp:18:connection::connection(boost::asio::ip::tcp::socket socket,
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/connection.cpp:33:  socket_.async_read_some(boost::asio::buffer(buffer_),
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/connection.cpp:69:  boost::asio::async_write(socket_, reply_.to_buffers(),
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/connection.cpp:76:          socket_.shutdown(boost::asio::ip::tcp::socket::shutdown_both,
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/connection.hpp:34:  explicit connection(boost::asio::ip::tcp::socket socket,
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/connection.hpp:48:  boost::asio::ip::tcp::socket socket_;
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:52:boost::asio::const_buffer to_buffer(reply::status_type status)
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:57:    return boost::asio::buffer(ok);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:59:    return boost::asio::buffer(created);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:61:    return boost::asio::buffer(accepted);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:63:    return boost::asio::buffer(no_content);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:65:    return boost::asio::buffer(multiple_choices);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:67:    return boost::asio::buffer(moved_permanently);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:69:    return boost::asio::buffer(moved_temporarily);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:71:    return boost::asio::buffer(not_modified);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:73:    return boost::asio::buffer(bad_request);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:75:    return boost::asio::buffer(unauthorized);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:77:    return boost::asio::buffer(forbidden);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:79:    return boost::asio::buffer(not_found);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:81:    return boost::asio::buffer(internal_server_error);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:83:    return boost::asio::buffer(not_implemented);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:85:    return boost::asio::buffer(bad_gateway);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:87:    return boost::asio::buffer(service_unavailable);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:89:    return boost::asio::buffer(internal_server_error);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:102:std::vector<boost::asio::const_buffer> reply::to_buffers()
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:104:  std::vector<boost::asio::const_buffer> buffers;
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:109:    buffers.push_back(boost::asio::buffer(h.name));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:110:    buffers.push_back(boost::asio::buffer(misc_strings::name_value_separator));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:111:    buffers.push_back(boost::asio::buffer(h.value));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:112:    buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:114:  buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.cpp:115:  buffers.push_back(boost::asio::buffer(content));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/reply.hpp:55:  std::vector<boost::asio::const_buffer> to_buffers();
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/server.cpp:40:  boost::asio::ip::tcp::resolver resolver(io_context_);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/server.cpp:41:  boost::asio::ip::tcp::endpoint endpoint =
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/server.cpp:44:  acceptor_.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/server.cpp:67:  acceptor_.async_accept(boost::asio::make_strand(io_context_),
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/server.cpp:68:      [this](boost::system::error_code ec, boost::asio::ip::tcp::socket socket)
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/server.hpp:47:  boost::asio::io_context io_context_;
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/server.hpp:50:  boost::asio::signal_set signals_;
/root/boost_1_87_0/libs/asio/example/cpp11/http/server3/server.hpp:53:  boost::asio::ip::tcp::acceptor acceptor_;
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/main.cpp:32:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/main.cpp:39:    boost::asio::signal_set signals(io_context);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:52:boost::asio::const_buffer to_buffer(reply::status_type status)
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:57:    return boost::asio::buffer(ok);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:59:    return boost::asio::buffer(created);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:61:    return boost::asio::buffer(accepted);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:63:    return boost::asio::buffer(no_content);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:65:    return boost::asio::buffer(multiple_choices);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:67:    return boost::asio::buffer(moved_permanently);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:69:    return boost::asio::buffer(moved_temporarily);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:71:    return boost::asio::buffer(not_modified);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:73:    return boost::asio::buffer(bad_request);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:75:    return boost::asio::buffer(unauthorized);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:77:    return boost::asio::buffer(forbidden);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:79:    return boost::asio::buffer(not_found);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:81:    return boost::asio::buffer(internal_server_error);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:83:    return boost::asio::buffer(not_implemented);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:85:    return boost::asio::buffer(bad_gateway);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:87:    return boost::asio::buffer(service_unavailable);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:89:    return boost::asio::buffer(internal_server_error);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:102:std::vector<boost::asio::const_buffer> reply::to_buffers()
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:104:  std::vector<boost::asio::const_buffer> buffers;
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:109:    buffers.push_back(boost::asio::buffer(h.name));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:110:    buffers.push_back(boost::asio::buffer(misc_strings::name_value_separator));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:111:    buffers.push_back(boost::asio::buffer(h.value));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:112:    buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:114:  buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.cpp:115:  buffers.push_back(boost::asio::buffer(content));
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/reply.hpp:55:  std::vector<boost::asio::const_buffer> to_buffers();
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/server.cpp:18:server::server(boost::asio::io_context& io_context,
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/server.cpp:24:  boost::asio::ip::tcp::endpoint endpoint =
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/server.cpp:79:        yield socket_->async_read_some(boost::asio::buffer(*buffer_), *this);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/server.cpp:105:      yield boost::asio::async_write(*socket_, reply_->to_buffers(), *this);
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/server.hpp:28:class server : boost::asio::coroutine
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/server.hpp:33:  explicit server(boost::asio::io_context& io_context,
/root/boost_1_87_0/libs/asio/example/cpp11/http/server4/server.hpp:43:  typedef boost::asio::ip::tcp tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/icmp/ipv4_header.hpp:68:  boost::asio::ip::address_v4 source_address() const
/root/boost_1_87_0/libs/asio/example/cpp11/icmp/ipv4_header.hpp:70:    boost::asio::ip::address_v4::bytes_type bytes
/root/boost_1_87_0/libs/asio/example/cpp11/icmp/ipv4_header.hpp:72:    return boost::asio::ip::address_v4(bytes);
/root/boost_1_87_0/libs/asio/example/cpp11/icmp/ipv4_header.hpp:75:  boost::asio::ip::address_v4 destination_address() const
/root/boost_1_87_0/libs/asio/example/cpp11/icmp/ipv4_header.hpp:77:    boost::asio::ip::address_v4::bytes_type bytes
/root/boost_1_87_0/libs/asio/example/cpp11/icmp/ipv4_header.hpp:79:    return boost::asio::ip::address_v4(bytes);
/root/boost_1_87_0/libs/asio/example/cpp11/icmp/ping.cpp:19:using boost::asio::ip::icmp;
/root/boost_1_87_0/libs/asio/example/cpp11/icmp/ping.cpp:20:using boost::asio::steady_timer;
/root/boost_1_87_0/libs/asio/example/cpp11/icmp/ping.cpp:21:namespace chrono = boost::asio::chrono;
/root/boost_1_87_0/libs/asio/example/cpp11/icmp/ping.cpp:26:  pinger(boost::asio::io_context& io_context, const char* destination)
/root/boost_1_87_0/libs/asio/example/cpp11/icmp/ping.cpp:50:    boost::asio::streambuf request_buffer;
/root/boost_1_87_0/libs/asio/example/cpp11/icmp/ping.cpp:137:  boost::asio::streambuf reply_buffer_;
/root/boost_1_87_0/libs/asio/example/cpp11/icmp/ping.cpp:154:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/invocation/prioritised_handlers.cpp:16:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/invocation/prioritised_handlers.cpp:18:class handler_priority_queue : public boost::asio::execution_context
/root/boost_1_87_0/libs/asio/example/cpp11/invocation/prioritised_handlers.cpp:90:  boost::asio::executor_binder<Handler, executor>
/root/boost_1_87_0/libs/asio/example/cpp11/invocation/prioritised_handlers.cpp:93:    return boost::asio::bind_executor(
/root/boost_1_87_0/libs/asio/example/cpp11/invocation/prioritised_handlers.cpp:171:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/invocation/prioritised_handlers.cpp:176:  boost::asio::post(io_context, pri_queue.wrap(0, low_priority_handler()));
/root/boost_1_87_0/libs/asio/example/cpp11/invocation/prioritised_handlers.cpp:179:  tcp::endpoint endpoint(boost::asio::ip::address_v4::loopback(), 0);
/root/boost_1_87_0/libs/asio/example/cpp11/invocation/prioritised_handlers.cpp:187:  boost::asio::steady_timer timer(io_context);
/root/boost_1_87_0/libs/asio/example/cpp11/invocation/prioritised_handlers.cpp:188:  timer.expires_at(boost::asio::steady_timer::clock_type::time_point::min());
/root/boost_1_87_0/libs/asio/example/cpp11/iostreams/daytime_client.cpp:15:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/iostreams/daytime_server.cpp:16:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/iostreams/daytime_server.cpp:29:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/iostreams/http_client.cpp:17:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/iostreams/http_client.cpp:31:    boost::asio::ip::tcp::iostream s;
/root/boost_1_87_0/libs/asio/example/cpp11/local/connect_pair.cpp:20:using boost::asio::local::stream_protocol;
/root/boost_1_87_0/libs/asio/example/cpp11/local/connect_pair.cpp:34:    socket_.async_read_some(boost::asio::buffer(data_),
/root/boost_1_87_0/libs/asio/example/cpp11/local/connect_pair.cpp:55:    boost::asio::async_write(socket_, boost::asio::buffer(data_, size),
/root/boost_1_87_0/libs/asio/example/cpp11/local/connect_pair.cpp:78:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/local/connect_pair.cpp:83:    boost::asio::local::connect_pair(socket, filter_socket);
/root/boost_1_87_0/libs/asio/example/cpp11/local/connect_pair.cpp:109:      boost::asio::write(socket, boost::asio::buffer(request));
/root/boost_1_87_0/libs/asio/example/cpp11/local/connect_pair.cpp:113:      boost::asio::read(socket, boost::asio::buffer(reply));
/root/boost_1_87_0/libs/asio/example/cpp11/local/fd_passing_stream_client.cpp:26:using boost::asio::local::stream_protocol;
/root/boost_1_87_0/libs/asio/example/cpp11/local/fd_passing_stream_client.cpp:40:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/local/fd_passing_stream_client.cpp:49:    boost::asio::write(s, boost::asio::buffer(request, request_length));
/root/boost_1_87_0/libs/asio/example/cpp11/local/fd_passing_stream_server.cpp:25:using boost::asio::local::stream_protocol;
/root/boost_1_87_0/libs/asio/example/cpp11/local/fd_passing_stream_server.cpp:45:    socket_.async_read_some(boost::asio::buffer(data_),
/root/boost_1_87_0/libs/asio/example/cpp11/local/fd_passing_stream_server.cpp:108:  server(boost::asio::io_context& io_context, const std::string& file)
/root/boost_1_87_0/libs/asio/example/cpp11/local/fd_passing_stream_server.cpp:143:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/local/iostream_client.cpp:17:using boost::asio::local::stream_protocol;
/root/boost_1_87_0/libs/asio/example/cpp11/local/stream_client.cpp:18:using boost::asio::local::stream_protocol;
/root/boost_1_87_0/libs/asio/example/cpp11/local/stream_client.cpp:32:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/local/stream_client.cpp:41:    boost::asio::write(s, boost::asio::buffer(request, request_length));
/root/boost_1_87_0/libs/asio/example/cpp11/local/stream_client.cpp:44:    size_t reply_length = boost::asio::read(s,
/root/boost_1_87_0/libs/asio/example/cpp11/local/stream_client.cpp:45:        boost::asio::buffer(reply, request_length));
/root/boost_1_87_0/libs/asio/example/cpp11/local/stream_server.cpp:19:using boost::asio::local::stream_protocol;
/root/boost_1_87_0/libs/asio/example/cpp11/local/stream_server.cpp:39:    socket_.async_read_some(boost::asio::buffer(data_),
/root/boost_1_87_0/libs/asio/example/cpp11/local/stream_server.cpp:50:    boost::asio::async_write(socket_,
/root/boost_1_87_0/libs/asio/example/cpp11/local/stream_server.cpp:51:        boost::asio::buffer(data_, length),
/root/boost_1_87_0/libs/asio/example/cpp11/local/stream_server.cpp:69:  server(boost::asio::io_context& io_context, const std::string& file)
/root/boost_1_87_0/libs/asio/example/cpp11/local/stream_server.cpp:104:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/multicast/receiver.cpp:21:  receiver(boost::asio::io_context& io_context,
/root/boost_1_87_0/libs/asio/example/cpp11/multicast/receiver.cpp:22:      const boost::asio::ip::address& listen_address,
/root/boost_1_87_0/libs/asio/example/cpp11/multicast/receiver.cpp:23:      const boost::asio::ip::address& multicast_address)
/root/boost_1_87_0/libs/asio/example/cpp11/multicast/receiver.cpp:27:    boost::asio::ip::udp::endpoint listen_endpoint(
/root/boost_1_87_0/libs/asio/example/cpp11/multicast/receiver.cpp:30:    socket_.set_option(boost::asio::ip::udp::socket::reuse_address(true));
/root/boost_1_87_0/libs/asio/example/cpp11/multicast/receiver.cpp:35:        boost::asio::ip::multicast::join_group(multicast_address));
/root/boost_1_87_0/libs/asio/example/cpp11/multicast/receiver.cpp:44:        boost::asio::buffer(data_), sender_endpoint_,
/root/boost_1_87_0/libs/asio/example/cpp11/multicast/receiver.cpp:57:  boost::asio::ip::udp::socket socket_;
/root/boost_1_87_0/libs/asio/example/cpp11/multicast/receiver.cpp:58:  boost::asio::ip::udp::endpoint sender_endpoint_;
/root/boost_1_87_0/libs/asio/example/cpp11/multicast/receiver.cpp:76:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/multicast/receiver.cpp:78:        boost::asio::ip::make_address(argv[1]),
/root/boost_1_87_0/libs/asio/example/cpp11/multicast/receiver.cpp:79:        boost::asio::ip::make_address(argv[2]));
/root/boost_1_87_0/libs/asio/example/cpp11/multicast/sender.cpp:22:  sender(boost::asio::io_context& io_context,
/root/boost_1_87_0/libs/asio/example/cpp11/multicast/sender.cpp:23:      const boost::asio::ip::address& multicast_address)
/root/boost_1_87_0/libs/asio/example/cpp11/multicast/sender.cpp:40:        boost::asio::buffer(message_), endpoint_,
/root/boost_1_87_0/libs/asio/example/cpp11/multicast/sender.cpp:60:  boost::asio::ip::udp::endpoint endpoint_;
/root/boost_1_87_0/libs/asio/example/cpp11/multicast/sender.cpp:61:  boost::asio::ip::udp::socket socket_;
/root/boost_1_87_0/libs/asio/example/cpp11/multicast/sender.cpp:62:  boost::asio::steady_timer timer_;
/root/boost_1_87_0/libs/asio/example/cpp11/multicast/sender.cpp:81:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/multicast/sender.cpp:82:    sender s(io_context, boost::asio::ip::make_address(argv[1]));
/root/boost_1_87_0/libs/asio/example/cpp11/nonblocking/third_party_lib.cpp:16:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/nonblocking/third_party_lib.cpp:42:    if (std::size_t len = socket_.read_some(boost::asio::buffer(data_), ec))
/root/boost_1_87_0/libs/asio/example/cpp11/nonblocking/third_party_lib.cpp:44:      write_buffer_ = boost::asio::buffer(data_, len);
/root/boost_1_87_0/libs/asio/example/cpp11/nonblocking/third_party_lib.cpp:60:          boost::asio::buffer(write_buffer_), ec))
/root/boost_1_87_0/libs/asio/example/cpp11/nonblocking/third_party_lib.cpp:63:      state_ = boost::asio::buffer_size(write_buffer_) > 0 ? writing : reading;
/root/boost_1_87_0/libs/asio/example/cpp11/nonblocking/third_party_lib.cpp:71:  boost::asio::const_buffer write_buffer_;
/root/boost_1_87_0/libs/asio/example/cpp11/nonblocking/third_party_lib.cpp:115:            if (!ec || ec == boost::asio::error::would_block)
/root/boost_1_87_0/libs/asio/example/cpp11/nonblocking/third_party_lib.cpp:143:            if (!ec || ec == boost::asio::error::would_block)
/root/boost_1_87_0/libs/asio/example/cpp11/nonblocking/third_party_lib.cpp:166:  server(boost::asio::io_context& io_context, unsigned short port)
/root/boost_1_87_0/libs/asio/example/cpp11/nonblocking/third_party_lib.cpp:200:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_1.cpp:22:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_1.cpp:42:  // However, when the completion token is boost::asio::yield_context (used for
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_1.cpp:44:  // completion token is boost::asio::use_future it would be std::future<std::size_t>.
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_1.cpp:45:  // When the completion token is boost::asio::deferred, the return type differs for
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_1.cpp:51:      boost::asio::async_write(socket,
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_1.cpp:52:        boost::asio::buffer(message, std::strlen(message)),
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_1.cpp:59:  return boost::asio::async_write(socket,
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_1.cpp:60:      boost::asio::buffer(message, std::strlen(message)),
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_1.cpp:68:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_1.cpp:94:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_1.cpp:104:      "Testing deferred\r\n", boost::asio::deferred);
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_1.cpp:127:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_1.cpp:136:      socket, "Testing future\r\n", boost::asio::use_future);
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_2.cpp:22:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_2.cpp:24:// NOTE: This example requires the new boost::asio::async_initiate function. For
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_2.cpp:74:          boost::asio::buffer(message, std::strlen(message)),
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_2.cpp:81:      return boost::asio::async_write(socket,
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_2.cpp:82:          boost::asio::buffer(message, std::strlen(message)),
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_2.cpp:100:  // However, when the completion token is boost::asio::yield_context (used for
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_2.cpp:102:  // completion token is boost::asio::use_future it would be std::future<std::size_t>.
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_2.cpp:103:  // When the completion token is boost::asio::deferred, the return type differs for
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_2.cpp:106:  // In C++11 we deduce the type from the call to boost::asio::async_initiate.
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_2.cpp:108:      boost::asio::async_initiate<
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_2.cpp:113:  // The boost::asio::async_initiate function takes:
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_2.cpp:128:  return boost::asio::async_initiate<
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_2.cpp:138:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_2.cpp:164:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_2.cpp:174:      "Testing deferred\r\n", false, boost::asio::deferred);
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_2.cpp:197:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_2.cpp:206:      socket, "Testing future\r\n", false, boost::asio::use_future);
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_3.cpp:24:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_3.cpp:26:// NOTE: This example requires the new boost::asio::async_initiate function. For
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_3.cpp:83:    auto executor = boost::asio::get_associated_executor(
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_3.cpp:87:    // using the boost::asio::bind_executor function.
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_3.cpp:88:    boost::asio::async_write(socket,
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_3.cpp:89:        boost::asio::buffer(message, std::strlen(message)),
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_3.cpp:90:        boost::asio::bind_executor(executor,
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_3.cpp:107:  // void. In this example, when the completion token is boost::asio::yield_context
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_3.cpp:110:  // completion token is boost::asio::use_future it would be std::future<void>. When
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_3.cpp:111:  // the completion token is boost::asio::deferred, the return type differs for each
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_3.cpp:114:  // In C++11 we deduce the type from the call to boost::asio::async_initiate.
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_3.cpp:116:      boost::asio::async_initiate<
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_3.cpp:121:  // The boost::asio::async_initiate function takes:
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_3.cpp:136:  return boost::asio::async_initiate<
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_3.cpp:146:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_3.cpp:172:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_3.cpp:182:      "Testing deferred\r\n", boost::asio::deferred);
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_3.cpp:205:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_3.cpp:214:      socket, "Testing future\r\n", boost::asio::use_future);
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_4.cpp:24:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_4.cpp:26:// NOTE: This example requires the new boost::asio::async_initiate function. For
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_4.cpp:88:    auto executor = boost::asio::get_associated_executor(
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_4.cpp:92:    // using the boost::asio::bind_executor function.
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_4.cpp:96:      boost::asio::post(
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_4.cpp:97:          boost::asio::bind_executor(executor,
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_4.cpp:99:              boost::asio::error::invalid_argument)));
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_4.cpp:103:      boost::asio::async_write(socket,
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_4.cpp:104:          boost::asio::buffer(message, length),
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_4.cpp:105:          boost::asio::bind_executor(executor,
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_4.cpp:123:  // void. In this example, when the completion token is boost::asio::yield_context
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_4.cpp:126:  // completion token is boost::asio::use_future it would be std::future<void>. When
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_4.cpp:127:  // the completion token is boost::asio::deferred, the return type differs for each
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_4.cpp:130:  // In C++11 we deduce the type from the call to boost::asio::async_initiate.
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_4.cpp:132:      boost::asio::async_initiate<
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_4.cpp:137:  // The boost::asio::async_initiate function takes:
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_4.cpp:152:  return boost::asio::async_initiate<
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_4.cpp:162:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_4.cpp:188:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_4.cpp:197:  auto op = async_write_message(socket, "", boost::asio::deferred);
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_4.cpp:220:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_4.cpp:229:      socket, "", boost::asio::use_future);
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_5.cpp:24:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_5.cpp:26:// NOTE: This example requires the new boost::asio::async_initiate function. For
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_5.cpp:106:      using executor_type = boost::asio::associated_executor_t<
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_5.cpp:112:        return boost::asio::get_associated_executor(
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_5.cpp:122:      using allocator_type = boost::asio::associated_allocator_t<
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_5.cpp:128:        return boost::asio::get_associated_allocator(
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_5.cpp:135:    auto encoded_message_buffer = boost::asio::buffer(*encoded_message);
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_5.cpp:136:    boost::asio::async_write(socket, encoded_message_buffer,
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_5.cpp:153:  // void. In this example, when the completion token is boost::asio::yield_context
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_5.cpp:156:  // completion token is boost::asio::use_future it would be std::future<void>. When
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_5.cpp:157:  // the completion token is boost::asio::deferred, the return type differs for each
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_5.cpp:160:  // In C++11 we deduce the type from the call to boost::asio::async_initiate.
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_5.cpp:162:      boost::asio::async_initiate<
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_5.cpp:173:  // The boost::asio::async_initiate function takes:
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_5.cpp:188:  return boost::asio::async_initiate<
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_5.cpp:198:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_5.cpp:224:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_5.cpp:234:      std::string("abcdef"), boost::asio::deferred);
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_5.cpp:257:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_5.cpp:266:      socket, 654.321, boost::asio::use_future);
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:26:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:28:// NOTE: This example requires the new boost::asio::async_initiate function. For
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:71:      std::unique_ptr<boost::asio::steady_timer> delay_timer) const
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:91:      std::unique_ptr<boost::asio::steady_timer> delay_timer_;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:101:      boost::asio::executor_work_guard<tcp::socket::executor_type> io_work_;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:129:            boost::asio::async_write(socket_,
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:130:                boost::asio::buffer(*encoded_message_), std::move(*this));
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:157:      using executor_type = boost::asio::associated_executor_t<
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:163:        return boost::asio::get_associated_executor(
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:173:      using allocator_type = boost::asio::associated_allocator_t<
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:179:        return boost::asio::get_associated_allocator(
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:186:    auto encoded_message_buffer = boost::asio::buffer(*encoded_message);
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:187:    boost::asio::async_write(socket, encoded_message_buffer,
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:192:          boost::asio::make_work_guard(socket.get_executor()),
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:209:  // void. In this example, when the completion token is boost::asio::yield_context
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:212:  // completion token is boost::asio::use_future it would be std::future<void>. When
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:213:  // the completion token is boost::asio::deferred, the return type differs for each
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:216:  // In C++11 we deduce the type from the call to boost::asio::async_initiate.
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:218:      boost::asio::async_initiate<
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:222:          std::declval<std::unique_ptr<boost::asio::steady_timer>>()))
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:231:  std::unique_ptr<boost::asio::steady_timer> delay_timer(
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:232:      new boost::asio::steady_timer(socket.get_executor()));
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:234:  // The boost::asio::async_initiate function takes:
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:249:  return boost::asio::async_initiate<
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:259:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:285:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:295:      "Testing deferred\r\n", 5, boost::asio::deferred);
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:318:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_6.cpp:327:      socket, "Testing future\r\n", 5, boost::asio::use_future);
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_7.cpp:26:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_7.cpp:28:// NOTE: This example requires the new boost::asio::async_compose function. For
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_7.cpp:58:  std::unique_ptr<boost::asio::steady_timer> delay_timer_;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_7.cpp:66:  // completion handler is provided for us by the boost::asio::async_compose
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_7.cpp:98:        boost::asio::async_write(socket_,
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_7.cpp:99:            boost::asio::buffer(*encoded_message_), std::move(self));
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_7.cpp:129:  // void. In this example, when the completion token is boost::asio::yield_context
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_7.cpp:132:  // completion token is boost::asio::use_future it would be std::future<void>. When
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_7.cpp:133:  // the completion token is boost::asio::deferred, the return type differs for each
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_7.cpp:136:  // In C++11 we deduce the type from the call to boost::asio::async_compose.
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_7.cpp:138:      boost::asio::async_compose<
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_7.cpp:150:  std::unique_ptr<boost::asio::steady_timer> delay_timer(
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_7.cpp:151:      new boost::asio::steady_timer(socket.get_executor()));
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_7.cpp:153:  // The boost::asio::async_compose function takes:
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_7.cpp:164:  return boost::asio::async_compose<
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_7.cpp:177:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_7.cpp:203:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_7.cpp:213:      "Testing deferred\r\n", 5, boost::asio::deferred);
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_7.cpp:236:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_7.cpp:245:      socket, "Testing future\r\n", 5, boost::asio::use_future);
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_8.cpp:26:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_8.cpp:28:// NOTE: This example requires the new boost::asio::async_compose function. For
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_8.cpp:61:  std::unique_ptr<boost::asio::steady_timer> delay_timer_;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_8.cpp:64:  boost::asio::coroutine coro_;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_8.cpp:68:  // completion handler is provided for us by the boost::asio::async_compose
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_8.cpp:94:        yield boost::asio::async_write(socket_,
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_8.cpp:95:            boost::asio::buffer(*encoded_message_), std::move(self));
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_8.cpp:125:  // void. In this example, when the completion token is boost::asio::yield_context
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_8.cpp:128:  // completion token is boost::asio::use_future it would be std::future<void>. When
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_8.cpp:129:  // the completion token is boost::asio::deferred, the return type differs for each
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_8.cpp:132:  // In C++11 we deduce the type from the call to boost::asio::async_compose.
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_8.cpp:134:      boost::asio::async_compose<
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_8.cpp:146:  std::unique_ptr<boost::asio::steady_timer> delay_timer(
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_8.cpp:147:      new boost::asio::steady_timer(socket.get_executor()));
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_8.cpp:149:  // The boost::asio::async_compose function takes:
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_8.cpp:160:  return boost::asio::async_compose<
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_8.cpp:164:        std::move(delay_timer), boost::asio::coroutine()},
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_8.cpp:172:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_8.cpp:198:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_8.cpp:208:      "Testing deferred\r\n", 5, boost::asio::deferred);
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_8.cpp:231:  boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/operations/composed_8.cpp:240:      socket, "Testing future\r\n", 5, boost::asio::use_future);
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/ranged_wait_for_all.cpp:20:  boost::asio::io_context ctx;
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/ranged_wait_for_all.cpp:22:  boost::asio::posix::stream_descriptor out(ctx, ::dup(STDOUT_FILENO));
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/ranged_wait_for_all.cpp:23:  boost::asio::posix::stream_descriptor err(ctx, ::dup(STDERR_FILENO));
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/ranged_wait_for_all.cpp:26:      out.async_write_some(boost::asio::buffer("", 0))
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/ranged_wait_for_all.cpp:32:      out.async_write_some(boost::asio::buffer("first\r\n", 7))
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/ranged_wait_for_all.cpp:36:      err.async_write_some(boost::asio::buffer("second\r\n", 8))
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/ranged_wait_for_all.cpp:39:  boost::asio::experimental::make_parallel_group(ops).async_wait(
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/ranged_wait_for_all.cpp:40:      boost::asio::experimental::wait_for_all(),
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/wait_for_all.cpp:19:  boost::asio::io_context ctx;
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/wait_for_all.cpp:21:  boost::asio::posix::stream_descriptor in(ctx, ::dup(STDIN_FILENO));
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/wait_for_all.cpp:22:  boost::asio::steady_timer timer(ctx, std::chrono::seconds(5));
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/wait_for_all.cpp:26:  boost::asio::experimental::make_parallel_group(
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/wait_for_all.cpp:27:      in.async_read_some(boost::asio::buffer(data)),
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/wait_for_all.cpp:30:      boost::asio::experimental::wait_for_all(),
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/wait_for_one.cpp:19:  boost::asio::io_context ctx;
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/wait_for_one.cpp:21:  boost::asio::posix::stream_descriptor in(ctx, ::dup(STDIN_FILENO));
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/wait_for_one.cpp:22:  boost::asio::steady_timer timer(ctx, std::chrono::seconds(5));
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/wait_for_one.cpp:26:  boost::asio::experimental::make_parallel_group(
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/wait_for_one.cpp:27:      in.async_read_some(boost::asio::buffer(data)),
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/wait_for_one.cpp:30:      boost::asio::experimental::wait_for_one(),
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/wait_for_one_error.cpp:19:  boost::asio::io_context ctx;
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/wait_for_one_error.cpp:21:  boost::asio::posix::stream_descriptor in(ctx, ::dup(STDIN_FILENO));
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/wait_for_one_error.cpp:22:  boost::asio::steady_timer timer(ctx, std::chrono::seconds(5));
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/wait_for_one_error.cpp:26:  boost::asio::experimental::make_parallel_group(
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/wait_for_one_error.cpp:27:      in.async_read_some(boost::asio::buffer(data)),
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/wait_for_one_error.cpp:30:      boost::asio::experimental::wait_for_one_error(),
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/wait_for_one_success.cpp:19:  boost::asio::io_context ctx;
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/wait_for_one_success.cpp:21:  boost::asio::posix::stream_descriptor in(ctx, ::dup(STDIN_FILENO));
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/wait_for_one_success.cpp:22:  boost::asio::steady_timer timer(ctx, std::chrono::seconds(5));
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/wait_for_one_success.cpp:26:  boost::asio::experimental::make_parallel_group(
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/wait_for_one_success.cpp:27:      in.async_read_some(boost::asio::buffer(data)),
/root/boost_1_87_0/libs/asio/example/cpp11/parallel_group/wait_for_one_success.cpp:30:      boost::asio::experimental::wait_for_one_success(),
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/client.cpp:21:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/client.cpp:22:using boost::asio::ip::udp;
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/client.cpp:37:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/client.cpp:55:    boost::asio::write(control_socket, start.to_buffers());
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/client.cpp:88:      boost::asio::async_write(control_socket, change.to_buffers(),
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/protocol.hpp:72:  std::array<boost::asio::mutable_buffer, 1> to_buffers()
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/protocol.hpp:74:    std::array<boost::asio::mutable_buffer, 1> buffers
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/protocol.hpp:75:      = { { boost::asio::buffer(data_) } };
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/protocol.hpp:137:  std::array<boost::asio::mutable_buffer, 1> to_buffers()
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/protocol.hpp:139:    std::array<boost::asio::mutable_buffer, 1> buffers
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/protocol.hpp:140:      = { { boost::asio::buffer(data_) } };
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/server.cpp:21:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/server.cpp:22:using boost::asio::ip::udp;
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/server.cpp:25:typedef std::shared_ptr<boost::asio::steady_timer> timer_ptr;
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/server.cpp:32:  server(boost::asio::io_context& io_context, unsigned short port)
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/server.cpp:42:          boost::asio::placeholders::error, new_socket));
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/server.cpp:45:    timer_.expires_after(boost::asio::chrono::milliseconds(100));
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/server.cpp:56:      boost::asio::async_read(*socket, request->to_buffers(),
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/server.cpp:58:            boost::asio::placeholders::error, socket, request));
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/server.cpp:65:          boost::asio::placeholders::error, new_socket));
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/server.cpp:76:          new boost::asio::steady_timer(acceptor_.get_executor()));
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/server.cpp:77:      delay_timer->expires_after(boost::asio::chrono::seconds(2));
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/server.cpp:113:    boost::asio::async_read(*socket, request->to_buffers(),
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/server.cpp:115:          boost::asio::placeholders::error, socket, request));
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/server.cpp:143:    timer_.expires_after(boost::asio::chrono::milliseconds(100));
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/server.cpp:152:  boost::asio::steady_timer timer_;
/root/boost_1_87_0/libs/asio/example/cpp11/porthopper/server.cpp:174:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/client.cpp:26:  client(boost::asio::io_context& io_context,
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/client.cpp:31:    boost::asio::ip::tcp::resolver resolver(io_context);
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/client.cpp:32:    boost::asio::ip::tcp::resolver::query query(host, service);
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/client.cpp:33:    boost::asio::ip::tcp::resolver::iterator endpoint_iterator =
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/client.cpp:37:    boost::asio::async_connect(connection_.socket(), endpoint_iterator,
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/client.cpp:39:          boost::asio::placeholders::error));
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/client.cpp:52:            boost::asio::placeholders::error));
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/client.cpp:115:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/connection.hpp:38:  connection(const boost::asio::any_io_executor& ex)
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/connection.hpp:45:  boost::asio::ip::tcp::socket& socket()
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/connection.hpp:67:      boost::system::error_code error(boost::asio::error::invalid_argument);
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/connection.hpp:68:      boost::asio::post(socket_.get_executor(), std::bind(handler, error));
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/connection.hpp:75:    std::vector<boost::asio::const_buffer> buffers;
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/connection.hpp:76:    buffers.push_back(boost::asio::buffer(outbound_header_));
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/connection.hpp:77:    buffers.push_back(boost::asio::buffer(outbound_data_));
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/connection.hpp:78:    boost::asio::async_write(socket_, buffers, handler);
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/connection.hpp:88:    boost::asio::async_read(socket_, boost::asio::buffer(inbound_header_),
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/connection.hpp:90:          this, boost::asio::placeholders::error, std::ref(t),
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/connection.hpp:111:        boost::system::error_code error(boost::asio::error::invalid_argument);
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/connection.hpp:122:      boost::asio::async_read(socket_, boost::asio::buffer(inbound_data_),
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/connection.hpp:124:          boost::asio::placeholders::error, std::ref(t), handler));
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/connection.hpp:150:        boost::system::error_code error(boost::asio::error::invalid_argument);
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/connection.hpp:162:  boost::asio::ip::tcp::socket socket_;
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/server.cpp:27:  server(boost::asio::io_context& io_context, unsigned short port)
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/server.cpp:29:        boost::asio::ip::tcp::endpoint(boost::asio::ip::tcp::v4(), port))
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/server.cpp:60:          boost::asio::placeholders::error, new_conn));
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/server.cpp:73:            boost::asio::placeholders::error, conn));
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/server.cpp:80:          boost::asio::placeholders::error, new_conn));
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/server.cpp:92:  boost::asio::ip::tcp::acceptor acceptor_;
/root/boost_1_87_0/libs/asio/example/cpp11/serialization/server.cpp:112:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/services/basic_logger.hpp:39:  explicit basic_logger(boost::asio::execution_context& context,
/root/boost_1_87_0/libs/asio/example/cpp11/services/basic_logger.hpp:41:    : service_(boost::asio::use_service<Service>(context)),
/root/boost_1_87_0/libs/asio/example/cpp11/services/daytime_client.cpp:16:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/services/daytime_client.cpp:27:    s->async_read_some(boost::asio::buffer(read_buffer),
/root/boost_1_87_0/libs/asio/example/cpp11/services/daytime_client.cpp:28:        std::bind(read_handler, boost::asio::placeholders::error,
/root/boost_1_87_0/libs/asio/example/cpp11/services/daytime_client.cpp:29:          boost::asio::placeholders::bytes_transferred, s));
/root/boost_1_87_0/libs/asio/example/cpp11/services/daytime_client.cpp:33:    boost::asio::execution_context& context = boost::asio::query(
/root/boost_1_87_0/libs/asio/example/cpp11/services/daytime_client.cpp:34:        s->get_executor(), boost::asio::execution::context);
/root/boost_1_87_0/libs/asio/example/cpp11/services/daytime_client.cpp:45:  boost::asio::execution_context& context = boost::asio::query(
/root/boost_1_87_0/libs/asio/example/cpp11/services/daytime_client.cpp:46:      s->get_executor(), boost::asio::execution::context);
/root/boost_1_87_0/libs/asio/example/cpp11/services/daytime_client.cpp:53:    s->async_read_some(boost::asio::buffer(read_buffer),
/root/boost_1_87_0/libs/asio/example/cpp11/services/daytime_client.cpp:54:        std::bind(read_handler, boost::asio::placeholders::error,
/root/boost_1_87_0/libs/asio/example/cpp11/services/daytime_client.cpp:55:          boost::asio::placeholders::bytes_transferred, s));
/root/boost_1_87_0/libs/asio/example/cpp11/services/daytime_client.cpp:75:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/services/daytime_client.cpp:88:    boost::asio::async_connect(socket, endpoints,
/root/boost_1_87_0/libs/asio/example/cpp11/services/daytime_client.cpp:90:          boost::asio::placeholders::error, &socket));
/root/boost_1_87_0/libs/asio/example/cpp11/services/logger_service.hpp:25:  : public boost::asio::execution_context::service
/root/boost_1_87_0/libs/asio/example/cpp11/services/logger_service.hpp:42:  logger_service(boost::asio::execution_context& context)
/root/boost_1_87_0/libs/asio/example/cpp11/services/logger_service.hpp:43:    : boost::asio::execution_context::service(context),
/root/boost_1_87_0/libs/asio/example/cpp11/services/logger_service.hpp:45:      work_(boost::asio::make_work_guard(work_io_context_)),
/root/boost_1_87_0/libs/asio/example/cpp11/services/logger_service.hpp:94:    boost::asio::post(work_io_context_,
/root/boost_1_87_0/libs/asio/example/cpp11/services/logger_service.hpp:106:    boost::asio::post(work_io_context_,
/root/boost_1_87_0/libs/asio/example/cpp11/services/logger_service.hpp:128:  boost::asio::io_context work_io_context_;
/root/boost_1_87_0/libs/asio/example/cpp11/services/logger_service.hpp:133:  boost::asio::executor_work_guard<
/root/boost_1_87_0/libs/asio/example/cpp11/services/logger_service.hpp:134:      boost::asio::io_context::executor_type> work_;
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/socks4.hpp:32:  request(command_type cmd, const boost::asio::ip::tcp::endpoint& endpoint,
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/socks4.hpp:40:    if (endpoint.protocol() != boost::asio::ip::tcp::v4())
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/socks4.hpp:43:          boost::asio::error::address_family_not_supported);
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/socks4.hpp:55:  std::array<boost::asio::const_buffer, 7> buffers() const
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/socks4.hpp:60:        boost::asio::buffer(&version_, 1),
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/socks4.hpp:61:        boost::asio::buffer(&command_, 1),
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/socks4.hpp:62:        boost::asio::buffer(&port_high_byte_, 1),
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/socks4.hpp:63:        boost::asio::buffer(&port_low_byte_, 1),
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/socks4.hpp:64:        boost::asio::buffer(address_),
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/socks4.hpp:65:        boost::asio::buffer(user_id_),
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/socks4.hpp:66:        boost::asio::buffer(&null_byte_, 1)
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/socks4.hpp:76:  boost::asio::ip::address_v4::bytes_type address_;
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/socks4.hpp:98:  std::array<boost::asio::mutable_buffer, 5> buffers()
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/socks4.hpp:103:        boost::asio::buffer(&null_byte_, 1),
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/socks4.hpp:104:        boost::asio::buffer(&status_, 1),
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/socks4.hpp:105:        boost::asio::buffer(&port_high_byte_, 1),
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/socks4.hpp:106:        boost::asio::buffer(&port_low_byte_, 1),
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/socks4.hpp:107:        boost::asio::buffer(address_)
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/socks4.hpp:122:  boost::asio::ip::tcp::endpoint endpoint() const
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/socks4.hpp:128:    boost::asio::ip::address_v4 address(address_);
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/socks4.hpp:130:    return boost::asio::ip::tcp::endpoint(address, port);
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/socks4.hpp:138:  boost::asio::ip::address_v4::bytes_type address_;
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/sync_client.cpp:19:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/sync_client.cpp:34:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/sync_client.cpp:43:    boost::asio::connect(socket, endpoints);
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/sync_client.cpp:53:    boost::asio::write(socket, socks_request.buffers());
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/sync_client.cpp:57:    boost::asio::read(socket, socks_reply.buffers());
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/sync_client.cpp:77:    boost::asio::write(socket, boost::asio::buffer(request));
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/sync_client.cpp:83:          boost::asio::buffer(response), error))
/root/boost_1_87_0/libs/asio/example/cpp11/socks4/sync_client.cpp:85:    if (error != boost::asio::error::eof)
/root/boost_1_87_0/libs/asio/example/cpp11/spawn/echo_server.cpp:20:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/spawn/echo_server.cpp:25:  explicit session(boost::asio::io_context& io_context, tcp::socket socket)
/root/boost_1_87_0/libs/asio/example/cpp11/spawn/echo_server.cpp:35:    boost::asio::spawn(strand_,
/root/boost_1_87_0/libs/asio/example/cpp11/spawn/echo_server.cpp:36:        [this, self](boost::asio::yield_context yield)
/root/boost_1_87_0/libs/asio/example/cpp11/spawn/echo_server.cpp:44:              std::size_t n = socket_.async_read_some(boost::asio::buffer(data), yield);
/root/boost_1_87_0/libs/asio/example/cpp11/spawn/echo_server.cpp:45:              boost::asio::async_write(socket_, boost::asio::buffer(data, n), yield);
/root/boost_1_87_0/libs/asio/example/cpp11/spawn/echo_server.cpp:53:        }, boost::asio::detached);
/root/boost_1_87_0/libs/asio/example/cpp11/spawn/echo_server.cpp:55:    boost::asio::spawn(strand_,
/root/boost_1_87_0/libs/asio/example/cpp11/spawn/echo_server.cpp:56:        [this, self](boost::asio::yield_context yield)
/root/boost_1_87_0/libs/asio/example/cpp11/spawn/echo_server.cpp:62:            if (timer_.expiry() <= boost::asio::steady_timer::clock_type::now())
/root/boost_1_87_0/libs/asio/example/cpp11/spawn/echo_server.cpp:65:        }, boost::asio::detached);
/root/boost_1_87_0/libs/asio/example/cpp11/spawn/echo_server.cpp:70:  boost::asio::steady_timer timer_;
/root/boost_1_87_0/libs/asio/example/cpp11/spawn/echo_server.cpp:71:  boost::asio::strand<boost::asio::io_context::executor_type> strand_;
/root/boost_1_87_0/libs/asio/example/cpp11/spawn/echo_server.cpp:84:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/spawn/echo_server.cpp:86:    boost::asio::spawn(io_context,
/root/boost_1_87_0/libs/asio/example/cpp11/spawn/echo_server.cpp:87:        [&](boost::asio::yield_context yield)
/root/boost_1_87_0/libs/asio/example/cpp11/spawn/parallel_grep.cpp:21:using boost::asio::detached;
/root/boost_1_87_0/libs/asio/example/cpp11/spawn/parallel_grep.cpp:22:using boost::asio::dispatch;
/root/boost_1_87_0/libs/asio/example/cpp11/spawn/parallel_grep.cpp:23:using boost::asio::spawn;
/root/boost_1_87_0/libs/asio/example/cpp11/spawn/parallel_grep.cpp:24:using boost::asio::strand;
/root/boost_1_87_0/libs/asio/example/cpp11/spawn/parallel_grep.cpp:25:using boost::asio::thread_pool;
/root/boost_1_87_0/libs/asio/example/cpp11/spawn/parallel_grep.cpp:26:using boost::asio::yield_context;
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/client.cpp:18:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/client.cpp:27:  client(boost::asio::io_context& io_context,
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/client.cpp:28:      boost::asio::ssl::context& context,
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/client.cpp:32:    socket_.set_verify_mode(boost::asio::ssl::verify_peer);
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/client.cpp:41:      boost::asio::ssl::verify_context& ctx)
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/client.cpp:61:    boost::asio::async_connect(socket_.lowest_layer(), endpoints,
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/client.cpp:78:    socket_.async_handshake(boost::asio::ssl::stream_base::client,
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/client.cpp:98:    boost::asio::async_write(socket_,
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/client.cpp:99:        boost::asio::buffer(request_, request_length),
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/client.cpp:115:    boost::asio::async_read(socket_,
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/client.cpp:116:        boost::asio::buffer(reply_, length),
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/client.cpp:132:  boost::asio::ssl::stream<tcp::socket> socket_;
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/client.cpp:147:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/client.cpp:152:    boost::asio::ssl::context ctx(boost::asio::ssl::context::sslv23);
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/server.cpp:17:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/server.cpp:22:  session(boost::asio::ssl::stream<tcp::socket> socket)
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/server.cpp:36:    socket_.async_handshake(boost::asio::ssl::stream_base::server,
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/server.cpp:49:    socket_.async_read_some(boost::asio::buffer(data_),
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/server.cpp:62:    boost::asio::async_write(socket_, boost::asio::buffer(data_, length),
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/server.cpp:73:  boost::asio::ssl::stream<tcp::socket> socket_;
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/server.cpp:80:  server(boost::asio::io_context& io_context, unsigned short port)
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/server.cpp:82:      context_(boost::asio::ssl::context::sslv23)
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/server.cpp:85:        boost::asio::ssl::context::default_workarounds
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/server.cpp:86:        | boost::asio::ssl::context::no_sslv2
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/server.cpp:87:        | boost::asio::ssl::context::single_dh_use);
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/server.cpp:90:    context_.use_private_key_file("server.pem", boost::asio::ssl::context::pem);
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/server.cpp:110:                boost::asio::ssl::stream<tcp::socket>(
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/server.cpp:119:  boost::asio::ssl::context context_;
/root/boost_1_87_0/libs/asio/example/cpp11/ssl/server.cpp:132:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/async_tcp_client.cpp:21:using boost::asio::steady_timer;
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/async_tcp_client.cpp:22:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/async_tcp_client.cpp:89:  client(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/async_tcp_client.cpp:193:    boost::asio::async_read_until(socket_,
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/async_tcp_client.cpp:194:        boost::asio::dynamic_buffer(input_buffer_), '\n',
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/async_tcp_client.cpp:231:    boost::asio::async_write(socket_, boost::asio::buffer("\n", 1),
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/async_tcp_client.cpp:297:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/blocking_tcp_client.cpp:22:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/blocking_tcp_client.cpp:50:    boost::asio::async_connect(socket_, endpoints,
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/blocking_tcp_client.cpp:73:    boost::asio::async_read_until(socket_,
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/blocking_tcp_client.cpp:74:        boost::asio::dynamic_buffer(input_buffer_), '\n',
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/blocking_tcp_client.cpp:104:    boost::asio::async_write(socket_, boost::asio::buffer(data),
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/blocking_tcp_client.cpp:145:  boost::asio::io_context io_context_;
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:23:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:25:// NOTE: This example uses the new form of the boost::asio::async_result trait.
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:30:using tcp_socket = boost::asio::basic_stream_socket<
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:31:    tcp, boost::asio::io_context::executor_type>;
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:69:    boost::asio::io_context& io_context = boost::asio::query(
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:70:        token.socket_.get_executor(), boost::asio::execution::context);
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:126:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:134:    boost::asio::async_connect(socket, endpoints,
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:141:    boost::asio::async_write(socket, boost::asio::buffer(msg),
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:147:      std::size_t n = boost::asio::async_read_until(socket,
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:148:          boost::asio::dynamic_buffer(input_buffer), '\n',
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/blocking_udp_client.cpp:18:using boost::asio::ip::udp;
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/blocking_udp_client.cpp:55:  std::size_t receive(const boost::asio::mutable_buffer& buffer,
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/blocking_udp_client.cpp:62:    socket_.async_receive(boost::asio::buffer(buffer),
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/blocking_udp_client.cpp:106:  boost::asio::io_context io_context_;
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/blocking_udp_client.cpp:125:        boost::asio::ip::make_address(argv[1]),
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/blocking_udp_client.cpp:134:      std::size_t n = c.receive(boost::asio::buffer(data),
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/server.cpp:26:using boost::asio::steady_timer;
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/server.cpp:27:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/server.cpp:28:using boost::asio::ip::udp;
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/server.cpp:203:    boost::asio::async_read_until(socket_,
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/server.cpp:204:        boost::asio::dynamic_buffer(input_buffer_), '\n',
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/server.cpp:281:    boost::asio::async_write(socket_,
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/server.cpp:282:        boost::asio::buffer(output_queue_.front()),
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/server.cpp:346:  udp_broadcaster(boost::asio::io_context& io_context,
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/server.cpp:358:    socket_.send(boost::asio::buffer(msg), 0, ignored_error);
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/server.cpp:369:  server(boost::asio::io_context& io_context,
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/server.cpp:397:  boost::asio::io_context& io_context_;
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/server.cpp:416:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/timeouts/server.cpp:421:        boost::asio::ip::make_address(argv[2]), atoi(argv[3]));
/root/boost_1_87_0/libs/asio/example/cpp11/timers/time_t_timer.cpp:41:// The boost::asio::basic_waitable_timer template accepts an optional WaitTraits
/root/boost_1_87_0/libs/asio/example/cpp11/timers/time_t_timer.cpp:74:typedef boost::asio::basic_waitable_timer<
/root/boost_1_87_0/libs/asio/example/cpp11/timers/time_t_timer.cpp:81:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime1/client.cpp:15:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime1/client.cpp:27:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime1/client.cpp:34:    boost::asio::connect(socket, endpoints);
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime1/client.cpp:41:      size_t len = socket.read_some(boost::asio::buffer(buf), error);
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime1/client.cpp:43:      if (error == boost::asio::error::eof)
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime2/server.cpp:16:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime2/server.cpp:29:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime2/server.cpp:41:      boost::asio::write(socket, boost::asio::buffer(message), ignored_error);
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime3/server.cpp:18:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime3/server.cpp:33:  static pointer create(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime3/server.cpp:47:    boost::asio::async_write(socket_, boost::asio::buffer(message_),
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime3/server.cpp:49:          boost::asio::placeholders::error,
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime3/server.cpp:50:          boost::asio::placeholders::bytes_transferred));
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime3/server.cpp:54:  tcp_connection(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime3/server.cpp:71:  tcp_server(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime3/server.cpp:86:          boost::asio::placeholders::error));
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime3/server.cpp:100:  boost::asio::io_context& io_context_;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime3/server.cpp:108:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime4/client.cpp:15:using boost::asio::ip::udp;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime4/client.cpp:27:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime4/client.cpp:37:    socket.send_to(boost::asio::buffer(send_buf), receiver_endpoint);
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime4/client.cpp:42:        boost::asio::buffer(recv_buf), sender_endpoint);
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime5/server.cpp:17:using boost::asio::ip::udp;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime5/server.cpp:30:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime5/server.cpp:38:      socket.receive_from(boost::asio::buffer(recv_buf), remote_endpoint);
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime5/server.cpp:43:      socket.send_to(boost::asio::buffer(message),
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime6/server.cpp:19:using boost::asio::ip::udp;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime6/server.cpp:31:  udp_server(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime6/server.cpp:41:        boost::asio::buffer(recv_buffer_), remote_endpoint_,
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime6/server.cpp:43:          boost::asio::placeholders::error,
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime6/server.cpp:44:          boost::asio::placeholders::bytes_transferred));
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime6/server.cpp:55:      socket_.async_send_to(boost::asio::buffer(*message), remote_endpoint_,
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime6/server.cpp:57:            boost::asio::placeholders::error,
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime6/server.cpp:58:            boost::asio::placeholders::bytes_transferred));
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime6/server.cpp:79:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime7/server.cpp:19:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime7/server.cpp:20:using boost::asio::ip::udp;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime7/server.cpp:35:  static pointer create(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime7/server.cpp:49:    boost::asio::async_write(socket_, boost::asio::buffer(message_),
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime7/server.cpp:54:  tcp_connection(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime7/server.cpp:70:  tcp_server(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime7/server.cpp:85:          boost::asio::placeholders::error));
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime7/server.cpp:99:  boost::asio::io_context& io_context_;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime7/server.cpp:106:  udp_server(boost::asio::io_context& io_context)
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime7/server.cpp:116:        boost::asio::buffer(recv_buffer_), remote_endpoint_,
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime7/server.cpp:118:          boost::asio::placeholders::error));
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime7/server.cpp:128:      socket_.async_send_to(boost::asio::buffer(*message), remote_endpoint_,
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime7/server.cpp:148:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:27:such as an boost::asio::io_context object.
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:29:\until boost::asio::io_context
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:33:boost::asio::ip::tcp::resolver object.
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:42:boost::asio::ip::tcp::resolver::results_type. This object is a range, with begin() and
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:50:version. The boost::asio::connect() function does this for us automatically.
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:52:\until boost::asio::connect
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:57:We use a <tt>std::array</tt> to hold the received data. The boost::asio::buffer()
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:64:When the server closes the connection, the boost::asio::ip::tcp::socket::read_some()
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:65:function will exit with the boost::asio::error::eof error, which is how we know to
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:102:\until boost::asio::io_context
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:104:A boost::asio::ip::tcp::acceptor object needs to be created to listen
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:150:boost::asio::io_context object provides I/O services, such as sockets, that the
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:155:Run the boost::asio::io_context object so that it will perform asynchronous operations
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:196:In the function <tt>start()</tt>, we call boost::asio::async_write() to serve the data
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:197:to the client. Note that we are using boost::asio::async_write(), rather than
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:198:boost::asio::ip::tcp::socket::async_write_some(), to ensure that the entire block of
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:210:this program, both of the argument placeholders (boost::asio::placeholders::error and
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:211:boost::asio::placeholders::bytes_transferred) could potentially have been removed,
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:234:The boost::asio::async_write() call used to initiate the call can then be changed to
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:238:  boost::asio::async_write(socket_, boost::asio::buffer(message_),
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:263:\until using boost::asio::ip::udp;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:268:\until boost::asio::io_context
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:270:We use an boost::asio::ip::udp::resolver object to find the correct remote endpoint to
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:272:IPv4 endpoints by the boost::asio::ip::udp::v4() argument.
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:276:The boost::asio::ip::udp::resolver::resolve() function is guaranteed to return at
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:281:boost::asio::ip::udp::socket and initiate contact with the remote endpoint.
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:287:boost::asio::ip::udp::socket::receive_from().
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:316:\until boost::asio::io_context
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:318:Create an boost::asio::ip::udp::socket object to receive requests on UDP port 13.
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:323:be populated by boost::asio::ip::udp::socket::receive_from().
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:365:the boost::asio::io_context object.
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:381:The function boost::asio::ip::udp::socket::async_receive_from() will cause the
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:383:is received, the boost::asio::io_context object will invoke the
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:397:request, the boost::asio::io_context object would return an error if the client sent
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:406:We now call boost::asio::ip::udp::socket::async_send_to() to serve the data to the
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:409:\until boost::asio::placeholders::bytes_transferred
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:413:this program, both of the argument placeholders (boost::asio::placeholders::error and
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:414:boost::asio::placeholders::bytes_transferred) could potentially have been removed.
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:455:\until boost::asio::io_context
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/daytime_dox.txt:465:We have created two lots of work for the boost::asio::io_context object to do.
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer1/timer.cpp:16:  boost::asio::io_context io;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer1/timer.cpp:18:  boost::asio::steady_timer t(io, boost::asio::chrono::seconds(5));
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer2/timer.cpp:21:  boost::asio::io_context io;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer2/timer.cpp:23:  boost::asio::steady_timer t(io, boost::asio::chrono::seconds(5));
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer3/timer.cpp:16:    boost::asio::steady_timer* t, int* count)
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer3/timer.cpp:23:    t->expires_at(t->expiry() + boost::asio::chrono::seconds(1));
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer3/timer.cpp:25:          boost::asio::placeholders::error, t, count));
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer3/timer.cpp:31:  boost::asio::io_context io;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer3/timer.cpp:34:  boost::asio::steady_timer t(io, boost::asio::chrono::seconds(1));
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer3/timer.cpp:36:        boost::asio::placeholders::error, &t, &count));
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer4/timer.cpp:18:  printer(boost::asio::io_context& io)
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer4/timer.cpp:19:    : timer_(io, boost::asio::chrono::seconds(1)),
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer4/timer.cpp:37:      timer_.expires_at(timer_.expiry() + boost::asio::chrono::seconds(1));
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer4/timer.cpp:43:  boost::asio::steady_timer timer_;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer4/timer.cpp:49:  boost::asio::io_context io;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer5/timer.cpp:19:  printer(boost::asio::io_context& io)
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer5/timer.cpp:20:    : strand_(boost::asio::make_strand(io)),
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer5/timer.cpp:21:      timer1_(io, boost::asio::chrono::seconds(1)),
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer5/timer.cpp:22:      timer2_(io, boost::asio::chrono::seconds(1)),
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer5/timer.cpp:25:    timer1_.async_wait(boost::asio::bind_executor(strand_,
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer5/timer.cpp:28:    timer2_.async_wait(boost::asio::bind_executor(strand_,
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer5/timer.cpp:44:      timer1_.expires_at(timer1_.expiry() + boost::asio::chrono::seconds(1));
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer5/timer.cpp:46:      timer1_.async_wait(boost::asio::bind_executor(strand_,
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer5/timer.cpp:58:      timer2_.expires_at(timer2_.expiry() + boost::asio::chrono::seconds(1));
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer5/timer.cpp:60:      timer2_.async_wait(boost::asio::bind_executor(strand_,
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer5/timer.cpp:66:  boost::asio::strand<boost::asio::io_context::executor_type> strand_;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer5/timer.cpp:67:  boost::asio::steady_timer timer1_;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer5/timer.cpp:68:  boost::asio::steady_timer timer2_;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer5/timer.cpp:74:  boost::asio::io_context io;
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:25:such as an boost::asio::io_context or boost::asio::thread_pool object. An I/O execution
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:27:boost::asio::io_context first thing in the main function.
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:29:\until boost::asio::io_context
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:31:Next we declare an object of type boost::asio::steady_timer. The core asio classes
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:34:boost::asio::io_context), as their first constructor argument. The second argument to
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:37:\until boost::asio::steady_timer
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:40:That is, the call to boost::asio::steady_timer::wait() will not return until the
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:45:boost::asio::steady_timer::wait() function is called on an expired timer, it will
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:85:\until boost::asio::steady_timer
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:88:we call the boost::asio::steady_timer::async_wait() function to perform an
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:94:Finally, we must call the boost::asio::io_context::run() member function
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:98:be called from threads that are currently calling boost::asio::io_context::run().
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:99:Therefore unless the boost::asio::io_context::run() function is called the completion
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:102:The boost::asio::io_context::run() function will also continue to run while there is
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:108:calling boost::asio::io_context::run(). For example, if we had omitted the above call
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:109:to boost::asio::steady_timer::async_wait(), the io_context would not have had any
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:110:work to do, and consequently boost::asio::io_context::run() would have returned
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:159:tutorial Timer.2 we learnt that the boost::asio::io_context::run() function completes
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:175:with your completion handler. The boost::asio::steady_timer::async_wait() function
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:181:In this example, the boost::asio::placeholders::error argument to @c std::bind is a
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:188:\until boost::asio::io_context
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:193:\until boost::asio::steady_timer
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:196:boost::asio::steady_timer::async_wait() from <tt>main</tt> we bind the additional
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:252:You will note that the boost::asio::placeholders::error placeholder is not specified
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:292:This tutorial demonstrates the use of the boost::asio::strand class template to
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:296:calling the boost::asio::io_context::run() function from one thread only. As you
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:299:boost::asio::io_context::run(). Consequently, calling boost::asio::io_context::run() from
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:312:is to have a pool of threads calling boost::asio::io_context::run(). However, as this
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:327:In addition to initialising a pair of boost::asio::steady_timer members, the
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:329:boost::asio::strand<boost::asio::io_context::executor_type>.
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:331:The boost::asio::strand class template is an executor adapter that guarantees
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:335:boost::asio::io_context::run(). Of course, the handlers may still execute
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:337:boost::asio::strand, or were dispatched through a different boost::asio::strand
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:343:to an boost::asio::strand<boost::asio::io_context::executor_type> object. The
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:344:boost::asio::bind_executor() function returns a new handler that automatically
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:345:dispatches its contained handler through the boost::asio::strand object. By
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:346:binding the handlers to the same boost::asio::strand, we are ensuring that they
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:359:The <tt>main</tt> function now causes boost::asio::io_context::run() to
/root/boost_1_87_0/libs/asio/example/cpp11/tutorial/timer_dox.txt:364:boost::asio::io_context::run() will continue to execute while there is "work" left to
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/line_reader.hpp:23:      boost::asio::any_completion_handler<void(boost::system::error_code, std::string)> handler) = 0;
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/line_reader.hpp:40:        boost::asio::async_initiate<CompletionToken, void(boost::system::error_code, std::string)>(
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/line_reader.hpp:43:    return boost::asio::async_initiate<CompletionToken, void(boost::system::error_code, std::string)>(
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/main.cpp:22:class read_loop : boost::asio::coroutine
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/main.cpp:25:  read_loop(boost::asio::any_io_executor e, line_reader& r)
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/main.cpp:47:  boost::asio::any_io_executor executor;
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/main.cpp:56:  boost::asio::io_context ctx{1};
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/sleep.cpp:17:    boost::asio::any_completion_handler<void(boost::system::error_code)> handler,
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/sleep.cpp:18:    boost::asio::any_io_executor ex, std::chrono::nanoseconds duration)
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/sleep.cpp:20:  auto timer = std::make_shared<boost::asio::steady_timer>(ex, duration);
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/sleep.cpp:21:  timer->async_wait(boost::asio::consign(std::move(handler), timer));
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/sleep.hpp:21:    boost::asio::any_completion_handler<void(boost::system::error_code)> handler,
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/sleep.hpp:22:    boost::asio::any_io_executor ex, std::chrono::nanoseconds duration);
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/sleep.hpp:25:inline auto async_sleep(boost::asio::any_io_executor ex,
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/sleep.hpp:28:      boost::asio::async_initiate<CompletionToken, void(boost::system::error_code)>(
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/sleep.hpp:31:  return boost::asio::async_initiate<CompletionToken, void(boost::system::error_code)>(
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/stdin_line_reader.cpp:16:stdin_line_reader::stdin_line_reader(boost::asio::any_io_executor ex)
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/stdin_line_reader.cpp:22:    boost::asio::any_completion_handler<void(boost::system::error_code, std::string)> handler)
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/stdin_line_reader.cpp:27:  boost::asio::async_read_until(stdin_, boost::asio::dynamic_buffer(buffer_), '\n',
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/stdin_line_reader.cpp:28:      boost::asio::deferred(
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/stdin_line_reader.cpp:35:            return boost::asio::deferred.values(ec, std::move(result));
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/stdin_line_reader.cpp:39:            return boost::asio::deferred.values(ec, std::string{});
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/stdin_line_reader.hpp:20:  explicit stdin_line_reader(boost::asio::any_io_executor ex);
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/stdin_line_reader.hpp:24:      boost::asio::any_completion_handler<void(boost::system::error_code, std::string)> handler) override;
/root/boost_1_87_0/libs/asio/example/cpp11/type_erasure/stdin_line_reader.hpp:26:  boost::asio::posix::stream_descriptor stdin_;
/root/boost_1_87_0/libs/asio/example/cpp11/windows/transmit_file.cpp:20:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp11/windows/transmit_file.cpp:21:using boost::asio::windows::overlapped_ptr;
/root/boost_1_87_0/libs/asio/example/cpp11/windows/transmit_file.cpp:22:using boost::asio::windows::random_access_handle;
/root/boost_1_87_0/libs/asio/example/cpp11/windows/transmit_file.cpp:24:typedef boost::asio::basic_stream_socket<tcp,
/root/boost_1_87_0/libs/asio/example/cpp11/windows/transmit_file.cpp:25:    boost::asio::io_context::executor_type> tcp_socket;
/root/boost_1_87_0/libs/asio/example/cpp11/windows/transmit_file.cpp:27:typedef boost::asio::basic_socket_acceptor<tcp,
/root/boost_1_87_0/libs/asio/example/cpp11/windows/transmit_file.cpp:28:    boost::asio::io_context::executor_type> tcp_acceptor;
/root/boost_1_87_0/libs/asio/example/cpp11/windows/transmit_file.cpp:50:        boost::asio::error::get_system_category());
/root/boost_1_87_0/libs/asio/example/cpp11/windows/transmit_file.cpp:67:  static pointer create(boost::asio::io_context& io_context,
/root/boost_1_87_0/libs/asio/example/cpp11/windows/transmit_file.cpp:87:            boost::asio::placeholders::error,
/root/boost_1_87_0/libs/asio/example/cpp11/windows/transmit_file.cpp:88:            boost::asio::placeholders::bytes_transferred));
/root/boost_1_87_0/libs/asio/example/cpp11/windows/transmit_file.cpp:93:  connection(boost::asio::io_context& io_context, const std::string& filename)
/root/boost_1_87_0/libs/asio/example/cpp11/windows/transmit_file.cpp:115:  server(boost::asio::io_context& io_context,
/root/boost_1_87_0/libs/asio/example/cpp11/windows/transmit_file.cpp:131:          boost::asio::placeholders::error));
/root/boost_1_87_0/libs/asio/example/cpp11/windows/transmit_file.cpp:159:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_1.cpp:14:using boost::asio::deferred;
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_1.cpp:18:  boost::asio::io_context ctx;
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_1.cpp:20:  boost::asio::steady_timer timer(ctx);
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_2.cpp:14:using boost::asio::deferred;
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_2.cpp:18:  boost::asio::io_context ctx;
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_2.cpp:20:  boost::asio::steady_timer timer(ctx);
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_3.cpp:14:using boost::asio::deferred;
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_3.cpp:17:auto async_wait_twice(boost::asio::steady_timer& timer, CompletionToken&& token)
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_3.cpp:35:  boost::asio::io_context ctx;
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_3.cpp:37:  boost::asio::steady_timer timer(ctx);
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_4.cpp:14:using boost::asio::deferred;
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_4.cpp:17:auto async_wait_twice(boost::asio::steady_timer& timer, CompletionToken&& token)
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_4.cpp:43:  boost::asio::io_context ctx;
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_4.cpp:45:  boost::asio::steady_timer timer(ctx);
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_5.cpp:14:using boost::asio::deferred;
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_5.cpp:17:auto async_wait_twice(boost::asio::steady_timer& timer, CompletionToken&& token)
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_5.cpp:47:  boost::asio::io_context ctx;
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_5.cpp:49:  boost::asio::steady_timer timer(ctx);
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_6.cpp:14:using boost::asio::append;
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_6.cpp:15:using boost::asio::deferred;
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_6.cpp:18:auto async_wait_twice(boost::asio::steady_timer& timer, CompletionToken&& token)
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_6.cpp:22:        [](boost::asio::steady_timer* timer)
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_6.cpp:30:        [](boost::system::error_code ec, boost::asio::steady_timer* timer)
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_6.cpp:56:  boost::asio::io_context ctx;
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_6.cpp:58:  boost::asio::steady_timer timer(ctx);
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_7.cpp:14:using boost::asio::append;
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_7.cpp:15:using boost::asio::deferred;
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_7.cpp:18:auto async_wait_twice(boost::asio::steady_timer& timer, CompletionToken&& token)
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_7.cpp:22:        [](boost::asio::steady_timer* timer)
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_7.cpp:29:        [](boost::system::error_code ec, boost::asio::steady_timer* timer)
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_7.cpp:52:  boost::asio::io_context ctx;
/root/boost_1_87_0/libs/asio/example/cpp14/deferred/deferred_7.cpp:54:  boost::asio::steady_timer timer(ctx);
/root/boost_1_87_0/libs/asio/example/cpp14/echo/async_tcp_echo_server.cpp:18:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp14/echo/async_tcp_echo_server.cpp:38:    socket_.async_read_some(boost::asio::buffer(data_, max_length),
/root/boost_1_87_0/libs/asio/example/cpp14/echo/async_tcp_echo_server.cpp:51:    boost::asio::async_write(socket_, boost::asio::buffer(data_, length),
/root/boost_1_87_0/libs/asio/example/cpp14/echo/async_tcp_echo_server.cpp:69:  server(boost::asio::io_context& io_context, short port)
/root/boost_1_87_0/libs/asio/example/cpp14/echo/async_tcp_echo_server.cpp:105:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp14/echo/async_udp_echo_server.cpp:16:using boost::asio::ip::udp;
/root/boost_1_87_0/libs/asio/example/cpp14/echo/async_udp_echo_server.cpp:21:  server(boost::asio::io_context& io_context, short port)
/root/boost_1_87_0/libs/asio/example/cpp14/echo/async_udp_echo_server.cpp:30:        boost::asio::buffer(data_, max_length), sender_endpoint_,
/root/boost_1_87_0/libs/asio/example/cpp14/echo/async_udp_echo_server.cpp:47:        boost::asio::buffer(data_, length), sender_endpoint_,
/root/boost_1_87_0/libs/asio/example/cpp14/echo/async_udp_echo_server.cpp:71:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp14/echo/blocking_tcp_echo_client.cpp:16:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp14/echo/blocking_tcp_echo_client.cpp:30:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp14/echo/blocking_tcp_echo_client.cpp:34:    boost::asio::connect(s, resolver.resolve(argv[1], argv[2]));
/root/boost_1_87_0/libs/asio/example/cpp14/echo/blocking_tcp_echo_client.cpp:40:    boost::asio::write(s, boost::asio::buffer(request, request_length));
/root/boost_1_87_0/libs/asio/example/cpp14/echo/blocking_tcp_echo_client.cpp:43:    size_t reply_length = boost::asio::read(s,
/root/boost_1_87_0/libs/asio/example/cpp14/echo/blocking_tcp_echo_client.cpp:44:        boost::asio::buffer(reply, request_length));
/root/boost_1_87_0/libs/asio/example/cpp14/echo/blocking_tcp_echo_server.cpp:18:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp14/echo/blocking_tcp_echo_server.cpp:31:      size_t length = sock.read_some(boost::asio::buffer(data), error);
/root/boost_1_87_0/libs/asio/example/cpp14/echo/blocking_tcp_echo_server.cpp:32:      if (error == boost::asio::stream_errc::eof)
/root/boost_1_87_0/libs/asio/example/cpp14/echo/blocking_tcp_echo_server.cpp:37:      boost::asio::write(sock, boost::asio::buffer(data, length));
/root/boost_1_87_0/libs/asio/example/cpp14/echo/blocking_tcp_echo_server.cpp:46:void server(boost::asio::io_context& io_context, unsigned short port)
/root/boost_1_87_0/libs/asio/example/cpp14/echo/blocking_tcp_echo_server.cpp:67:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp14/echo/blocking_udp_echo_client.cpp:17:using boost::asio::ip::udp;
/root/boost_1_87_0/libs/asio/example/cpp14/echo/blocking_udp_echo_client.cpp:31:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp14/echo/blocking_udp_echo_client.cpp:43:    s.send_to(boost::asio::buffer(request, request_length), endpoint);
/root/boost_1_87_0/libs/asio/example/cpp14/echo/blocking_udp_echo_client.cpp:48:        boost::asio::buffer(reply, max_length), sender_endpoint);
/root/boost_1_87_0/libs/asio/example/cpp14/echo/blocking_udp_echo_server.cpp:16:using boost::asio::ip::udp;
/root/boost_1_87_0/libs/asio/example/cpp14/echo/blocking_udp_echo_server.cpp:20:void server(boost::asio::io_context& io_context, unsigned short port)
/root/boost_1_87_0/libs/asio/example/cpp14/echo/blocking_udp_echo_server.cpp:28:        boost::asio::buffer(data, max_length), sender_endpoint);
/root/boost_1_87_0/libs/asio/example/cpp14/echo/blocking_udp_echo_server.cpp:29:    sock.send_to(boost::asio::buffer(data, length), sender_endpoint);
/root/boost_1_87_0/libs/asio/example/cpp14/echo/blocking_udp_echo_server.cpp:43:    boost::asio::io_context io_context;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/actor.cpp:13:using boost::asio::any_io_executor;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/actor.cpp:14:using boost::asio::defer;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/actor.cpp:15:using boost::asio::post;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/actor.cpp:16:using boost::asio::strand;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/actor.cpp:17:using boost::asio::system_executor;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/actor.cpp:218:using boost::asio::thread_pool;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/async_1.cpp:8:using boost::asio::bind_executor;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/async_1.cpp:9:using boost::asio::get_associated_executor;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/async_1.cpp:10:using boost::asio::static_thread_pool;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/async_1.cpp:11:namespace execution = boost::asio::execution;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/async_1.cpp:18:  auto work_ex = boost::asio::prefer(
/root/boost_1_87_0/libs/asio/example/cpp14/executors/async_1.cpp:23:  boost::asio::require(io_ex, execution::blocking.never).execute(
/root/boost_1_87_0/libs/asio/example/cpp14/executors/async_1.cpp:30:        boost::asio::prefer(work_ex, execution::blocking.possibly).execute(
/root/boost_1_87_0/libs/asio/example/cpp14/executors/async_2.cpp:8:using boost::asio::bind_executor;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/async_2.cpp:9:using boost::asio::get_associated_executor;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/async_2.cpp:10:using boost::asio::static_thread_pool;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/async_2.cpp:11:namespace execution = boost::asio::execution;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/async_2.cpp:18:  auto work_ex = boost::asio::prefer(
/root/boost_1_87_0/libs/asio/example/cpp14/executors/async_2.cpp:23:  boost::asio::require(io_ex, execution::blocking.never).execute(
/root/boost_1_87_0/libs/asio/example/cpp14/executors/async_2.cpp:30:        boost::asio::prefer(work_ex, execution::blocking.possibly).execute(
/root/boost_1_87_0/libs/asio/example/cpp14/executors/async_2.cpp:43:  auto io_work_ex = boost::asio::prefer(io_ex,
/root/boost_1_87_0/libs/asio/example/cpp14/executors/async_2.cpp:47:  auto handler_work_ex = boost::asio::prefer(
/root/boost_1_87_0/libs/asio/example/cpp14/executors/bank_account_1.cpp:5:using boost::asio::static_thread_pool;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/bank_account_1.cpp:6:namespace execution = boost::asio::execution;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/bank_account_2.cpp:5:using boost::asio::static_thread_pool;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/bank_account_2.cpp:6:namespace execution = boost::asio::execution;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/bank_account_2.cpp:19:    boost::asio::require(pool_.executor(), execution::blocking.always).execute(
/root/boost_1_87_0/libs/asio/example/cpp14/executors/bank_account_2.cpp:28:    boost::asio::require(pool_.executor(),
/root/boost_1_87_0/libs/asio/example/cpp14/executors/bank_account_2.cpp:40:    boost::asio::require(pool_.executor(), execution::blocking.always).execute(
/root/boost_1_87_0/libs/asio/example/cpp14/executors/fork_join.cpp:11:using boost::asio::static_thread_pool;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/fork_join.cpp:12:namespace execution = boost::asio::execution;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/pipeline.cpp:13:using boost::asio::executor_binder;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/pipeline.cpp:14:using boost::asio::get_associated_executor;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/pipeline.cpp:15:namespace execution = boost::asio::execution;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/pipeline.cpp:172:  boost::asio::require(ex, execution::blocking.never).execute(std::move(task));
/root/boost_1_87_0/libs/asio/example/cpp14/executors/pipeline.cpp:192:  boost::asio::require(ex, execution::blocking.never).execute(
/root/boost_1_87_0/libs/asio/example/cpp14/executors/pipeline.cpp:219:  boost::asio::require(ex, execution::blocking.never).execute(
/root/boost_1_87_0/libs/asio/example/cpp14/executors/pipeline.cpp:236:using boost::asio::bind_executor;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/pipeline.cpp:237:using boost::asio::static_thread_pool;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/priority_scheduler.cpp:8:namespace execution = boost::asio::execution;
/root/boost_1_87_0/libs/asio/example/cpp14/executors/priority_scheduler.cpp:164:  auto prefer_low = boost::asio::prefer(ex, custom_props::low_priority);
/root/boost_1_87_0/libs/asio/example/cpp14/executors/priority_scheduler.cpp:165:  auto low = boost::asio::require(ex, custom_props::low_priority);
/root/boost_1_87_0/libs/asio/example/cpp14/executors/priority_scheduler.cpp:166:  auto med = boost::asio::require(ex, custom_props::normal_priority);
/root/boost_1_87_0/libs/asio/example/cpp14/executors/priority_scheduler.cpp:167:  auto high = boost::asio::require(ex, custom_props::high_priority);
/root/boost_1_87_0/libs/asio/example/cpp14/executors/priority_scheduler.cpp:178:  boost::asio::require(ex, custom_props::priority{-1}).execute([&]{ sched.stop(); });
/root/boost_1_87_0/libs/asio/example/cpp14/executors/priority_scheduler.cpp:180:  std::cout << "polymorphic query result = " << boost::asio::query(poly_high, custom_props::priority{}) << "\n";
/root/boost_1_87_0/libs/asio/example/cpp14/iostreams/http_client.cpp:17:using boost::asio::ip::tcp;
/root/boost_1_87_0/libs/asio/example/cpp14/iostreams/http_client.cpp:31:    boost::asio::ip::tcp::iostream s;
/root/boost_1_87_0/libs/asio/example/cpp14/operations/c_callback_wrapper.cpp:47:      work_(boost::asio::make_work_guard(handler_))
/root/boost_1_87_0/libs/asio/example/cpp14/operations/c_callback_wrapper.cpp:62:        boost::asio::associated_allocator_t<Handler,
/root/boost_1_87_0/libs/asio/example/cpp14/operations/c_callback_wrapper.cpp:63:          boost::asio::recycling_allocator<void>>>::template
/root/boost_1_87_0/libs/asio/example/cpp14/operations/c_callback_wrapper.cpp:70:    } d{boost::asio::get_associated_allocator(handler,
/root/boost_1_87_0/libs/asio/example/cpp14/operations/c_callback_wrapper.cpp:71:          boost::asio::recycling_allocator<void>())};
/root/boost_1_87_0/libs/asio/example/cpp14/operations/c_callback_wrapper.cpp:98:        boost::asio::associated_allocator_t<Handler,
/root/boost_1_87_0/libs/asio/example/cpp14/operations/c_callback_wrapper.cpp:99:          boost::asio::recycling_allocator<void>>>::template
/root/boost_1_87_0/libs/asio/example/cpp14/operations/c_callback_wrapper.cpp:107:    } d{boost::asio::get_associated_allocator(self->handler_,
/root/boost_1_87_0/libs/asio/example/cpp14/operations/c_callback_wrapper.cpp:108:          boost::asio::recycling_allocator<void>())};
/root/boost_1_87_0/libs/asio/example/cpp14/operations/c_callback_wrapper.cpp:119:    boost::asio::dispatch(state.work_.get_executor(),
/root/boost_1_87_0/libs/asio/example/cpp14/operations/c_callback_wrapper.cpp:120:        boost::asio::bind_allocator(d.alloc,
/root/boost_1_87_0/libs/asio/example/cpp14/operations/c_callback_wrapper.cpp:136:  boost::asio::executor_work_guard<
/root/boost_1_87_0/libs/asio/example/cpp14/operations/c_callback_wrapper.cpp:137:    boost::asio::associated_executor_t<Handler>> work_;
/root/boost_1_87_0/libs/asio/example/cpp14/operations/c_callback_wrapper.cpp:161:  return boost::asio::async_initiate<CompletionToken, void(std::string)>(
/root/boost_1_87_0/libs/asio/example/cpp14/operations/c_callback_wrapper.cpp:171:  boost::asio::io_context io_context;